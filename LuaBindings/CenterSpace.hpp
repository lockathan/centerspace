/*
** Lua binding: CenterSpace
** Generated automatically by tolua++-1.0.92 on 06/30/13 20:37:09.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_CenterSpace_open (lua_State* tolua_S);

#include <LuaLibRocket/LuaElement.h>
#include <LuaLibRocket/LuaDocument.h>
#include <Templates/Template.h>
#include <GUI/RocketDocumentDefinition.h>
#include <GUI/RocketDocuments.h>
#include <GUI/RocketRenderer.h>
#include <Entities/DataSet.h>
#include <Templates/RequiredRankTemplate.h>
#include <Templates/HubTemplate.h>
#include <Templates/BattlefieldTemplate.h>
#include <Templates/TerrainTextureTemplate.h>
#include <Templates/TerrainTemplate.h>
#include <Templates/FactionTemplate.h>
#include <Templates/RankTemplate.h>
#include <Templates/HubTemplate.h>
#include <Templates/FactionHubTemplate.h>
#include <Templates/MCUComponentTemplate.h>
#include <Templates/ArmorTemplate.h>
#include <Templates/BatteryTemplate.h>
#include <Templates/DriveTemplate.h>
#include <Templates/ReactorTemplate.h>
#include <Templates/SensorSystemTemplate.h>
#include <Templates/ShieldTemplate.h>
#include <Templates/TargetingSystemTemplate.h>
#include <Templates/RandomMissionTypeTemplate.h>
#include <Templates/ProjectileTemplate.h>
#include <Templates/BeamProjectileTemplate.h>
#include <Templates/PhysicalProjectileTemplate.h>
#include <Templates/WeaponTemplate.h>
#include <Templates/WeaponHardpointTemplate.h>
#include <Templates/MCUTemplate.h>
#include <Templates/AnimationDefinitionTemplate.h>
#include <Templates/WeaponAnimationTemplate.h>
#include <Templates/AIMCUTemplate.h>
#include <Templates/AIGroupTemplate.h>
#include <Repositories/Repository.h>
#include <Repositories/BeamProjectileTemplateRepository.h>
#include <Repositories/PhysicalProjectileTemplateRepository.h>
#include <Repositories/AIGroupTemplateRepository.h>
#include <Repositories/AIMCUTemplateRepository.h>
#include <Repositories/ArmorTemplateRepository.h>
#include <Repositories/BatteryTemplateRepository.h>
#include <Repositories/DriveTemplateRepository.h>
#include <Repositories/ReactorTemplateRepository.h>
#include <Repositories/SensorSystemTemplateRepository.h>
#include <Repositories/ShieldTemplateRepository.h>
#include <Repositories/TargetingSystemTemplateRepository.h>
#include <Repositories/WeaponTemplateRepository.h>
#include <Repositories/MCUTemplateRepository.h>
#include <Repositories/RandomMissionTypeTemplateRepository.h>
#include <Repositories/StoryMissionTemplateRepository.h>
#include <Repositories/BattlefieldTemplateRepository.h>
#include <Repositories/TerrainTextureTemplateRepository.h>
#include <Repositories/TerrainTemplateRepository.h>
#include <Repositories/HubTemplateRepository.h>
#include <Repositories/FactionTemplateRepository.h>
#include <Repositories/RankTemplateRepository.h>
#include <Repositories/FactionHubTemplateRepository.h>
#include <Repositories/BeamProjectileTemplateRepositoryLoader.h>
#include <Repositories/PhysicalProjectileTemplateRepositoryLoader.h>
#include <Repositories/AIGroupTemplateRepositoryLoader.h>
#include <Repositories/AIMCUTemplateRepositoryLoader.h>
#include <Repositories/ArmorTemplateRepositoryLoader.h>
#include <Repositories/BatteryTemplateRepositoryLoader.h>
#include <Repositories/DriveTemplateRepositoryLoader.h>
#include <Repositories/ReactorTemplateRepositoryLoader.h>
#include <Repositories/SensorSystemTemplateRepositoryLoader.h>
#include <Repositories/ShieldTemplateRepositoryLoader.h>
#include <Repositories/TargetingSystemTemplateRepositoryLoader.h>
#include <Repositories/WeaponTemplateRepositoryLoader.h>
#include <Repositories/MCUTemplateRepositoryLoader.h>
#include <Repositories/BattlefieldTemplateRepositoryLoader.h>
#include <Repositories/TerrainTemplateRepositoryLoader.h>
#include <Repositories/HubTemplateRepositoryLoader.h>
#include <Repositories/FactionTemplateRepositoryLoader.h>
#include <Repositories/FactionHubTemplateRepositoryLoader.h>
#include <Repositories/TerrainTextureTemplateRepositoryLoader.h>
#include <Repositories/WeaponAnimationTemplateDataLoader.h>
#include <Repositories/WeaponHardpointTemplateDataLoader.h>
#include <Repositories/AnimationDefinitionTemplateDataLoader.h>
#include <Repositories/RandomMissionTypeTemplateRepositoryLoader.h>
#include <Repositories/RankTemplateRepositoryLoader.h>
#include <Repositories/RepositoryManager.h>
#include <Entities/WeaponHardpoint.h>
#include <Entities/MechanizedCombatUnit.h>
#include <Entities/MCUPlacement.h>
#include <LuaBindings/LuaMCUDeque.h>
#include <Entities/Shield.h>
#include <Entities/Projectile.h>
#include <Entities/BeamProjectile.h>
#include <Entities/PhysicalProjectile.h>
#include <Entities/Mission.h>
#include <Entities/RandomMission.h>
#include <Entities/GridSquareTemplate.h>
#include <Entities/GridSquareTemplateVector.h>
#include <Entities/GridSquare.h>
#include <Entities/GridSquareVector.h>
#include <Entities/BattlefieldGridCell.h>
#include <Entities/BattlefieldGrid.h>
#include <Entities/PathFindingNode.h>
#include <Managers/PathFindingManager.h>
#include <Controllers/MCUController.h>
#include <AI/AIGroup.h>
#include <AI/MCUOrderStatus.h>
#include <AI/GroupOrder.h>
#include <AI/GroupAttackOrder.h>
#include <AI/GroupMoveOrder.h>
#include <AI/GroupMoveToAttackOrder.h>
#include <States/GameState.h>
#include <States/PlayerState.h>
#include <Entities/PlayerProfile.h>
#include <States/InventoryState.h>
#include <States/CampaignState.h>
#include <AI/CoverageMap.h>
#include <StateChange/PlayerPreBattleState.h>
#include <States/PlayerBattleState.h>
#include <States/InBaseState.h>
#include <States/InBattleState.h>
#include <States/ProfileManagerState.h>
#include <States/MainMenuState.h>
#include <Managers/CampaignMissionManager.h>
#include <Managers/GameManager.h>

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_ArmorTemplate (lua_State* tolua_S)
{
 ArmorTemplate* self = (ArmorTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AIMCUTemplateRepository (lua_State* tolua_S)
{
 AIMCUTemplateRepository* self = (AIMCUTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_DriveTemplateRepository (lua_State* tolua_S)
{
 DriveTemplateRepository* self = (DriveTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BattlefieldGridCell (lua_State* tolua_S)
{
 BattlefieldGridCell* self = (BattlefieldGridCell*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ReactorTemplate (lua_State* tolua_S)
{
 ReactorTemplate* self = (ReactorTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RandomMission (lua_State* tolua_S)
{
 RandomMission* self = (RandomMission*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MCUTemplate (lua_State* tolua_S)
{
 MCUTemplate* self = (MCUTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AIMCUTemplate (lua_State* tolua_S)
{
 AIMCUTemplate* self = (AIMCUTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RankTemplateRepository (lua_State* tolua_S)
{
 RankTemplateRepository* self = (RankTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InBaseState (lua_State* tolua_S)
{
 InBaseState* self = (InBaseState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_ReactorTemplate__ (lua_State* tolua_S)
{
 std::vector<ReactorTemplate*>* self = (std::vector<ReactorTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ShieldTemplateRepository (lua_State* tolua_S)
{
 ShieldTemplateRepository* self = (ShieldTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_TargetingSystemTemplate__ (lua_State* tolua_S)
{
 std::vector<TargetingSystemTemplate*>* self = (std::vector<TargetingSystemTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_RandomMissionTypeTemplate__ (lua_State* tolua_S)
{
 std::deque<RandomMissionTypeTemplate*>* self = (std::deque<RandomMissionTypeTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_MCUController__ (lua_State* tolua_S)
{
 std::deque<MCUController*>* self = (std::deque<MCUController*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ProjectileTemplate (lua_State* tolua_S)
{
 ProjectileTemplate* self = (ProjectileTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AIGroupTemplate (lua_State* tolua_S)
{
 AIGroupTemplate* self = (AIGroupTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_WeaponAnimationTemplate (lua_State* tolua_S)
{
 WeaponAnimationTemplate* self = (WeaponAnimationTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MainMenuState (lua_State* tolua_S)
{
 MainMenuState* self = (MainMenuState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BeamProjectileTemplateRepository (lua_State* tolua_S)
{
 BeamProjectileTemplateRepository* self = (BeamProjectileTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TerrainTemplate (lua_State* tolua_S)
{
 TerrainTemplate* self = (TerrainTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MCUPlacement (lua_State* tolua_S)
{
 MCUPlacement* self = (MCUPlacement*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InBattleState (lua_State* tolua_S)
{
 InBattleState* self = (InBattleState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_PlayerBattleState__ (lua_State* tolua_S)
{
 std::deque<PlayerBattleState*>* self = (std::deque<PlayerBattleState*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Ogre__Real (lua_State* tolua_S)
{
 Ogre::Real* self = (Ogre::Real*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PlayerBattleState (lua_State* tolua_S)
{
 PlayerBattleState* self = (PlayerBattleState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_Projectile__ (lua_State* tolua_S)
{
 std::deque<Projectile*>* self = (std::deque<Projectile*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RandomMissionTypeTemplate (lua_State* tolua_S)
{
 RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CoverageMap (lua_State* tolua_S)
{
 CoverageMap* self = (CoverageMap*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MCUTemplateRepository (lua_State* tolua_S)
{
 MCUTemplateRepository* self = (MCUTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BatteryTemplateRepository (lua_State* tolua_S)
{
 BatteryTemplateRepository* self = (BatteryTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_MCUComponent__ (lua_State* tolua_S)
{
 std::deque<MCUComponent*>* self = (std::deque<MCUComponent*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_StoryMissionTemplateRepository (lua_State* tolua_S)
{
 StoryMissionTemplateRepository* self = (StoryMissionTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CampaignState (lua_State* tolua_S)
{
 CampaignState* self = (CampaignState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InventoryState (lua_State* tolua_S)
{
 InventoryState* self = (InventoryState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_AIGroup__ (lua_State* tolua_S)
{
 std::deque<AIGroup*>* self = (std::deque<AIGroup*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BeamProjectileTemplate (lua_State* tolua_S)
{
 BeamProjectileTemplate* self = (BeamProjectileTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SensorSystemTemplate (lua_State* tolua_S)
{
 SensorSystemTemplate* self = (SensorSystemTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PlayerProfile (lua_State* tolua_S)
{
 PlayerProfile* self = (PlayerProfile*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MechanizedCombatUnit (lua_State* tolua_S)
{
 MechanizedCombatUnit* self = (MechanizedCombatUnit*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BatteryTemplate (lua_State* tolua_S)
{
 BatteryTemplate* self = (BatteryTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GameState (lua_State* tolua_S)
{
 GameState* self = (GameState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GroupMoveToAttackOrder (lua_State* tolua_S)
{
 GroupMoveToAttackOrder* self = (GroupMoveToAttackOrder*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FactionHubTemplate (lua_State* tolua_S)
{
 FactionHubTemplate* self = (FactionHubTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_TexturedVertex__ (lua_State* tolua_S)
{
 std::deque<TexturedVertex*>* self = (std::deque<TexturedVertex*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MCUOrderStatus (lua_State* tolua_S)
{
 MCUOrderStatus* self = (MCUOrderStatus*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_MCUTemplate__ (lua_State* tolua_S)
{
 std::vector<MCUTemplate*>* self = (std::vector<MCUTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_MCUOrderStatus__ (lua_State* tolua_S)
{
 std::deque<MCUOrderStatus*>* self = (std::deque<MCUOrderStatus*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_ShieldTemplate__ (lua_State* tolua_S)
{
 std::vector<ShieldTemplate*>* self = (std::vector<ShieldTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AnimationDefinitionTemplate (lua_State* tolua_S)
{
 AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RandomMissionTypeTemplateRepositoryLoader (lua_State* tolua_S)
{
 RandomMissionTypeTemplateRepositoryLoader* self = (RandomMissionTypeTemplateRepositoryLoader*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AnimationDefinitionTemplateDataLoader (lua_State* tolua_S)
{
 AnimationDefinitionTemplateDataLoader* self = (AnimationDefinitionTemplateDataLoader*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GameManager (lua_State* tolua_S)
{
 GameManager* self = (GameManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TexturedVertex (lua_State* tolua_S)
{
 TexturedVertex* self = (TexturedVertex*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RandomMissionTypeTemplateRepository (lua_State* tolua_S)
{
 RandomMissionTypeTemplateRepository* self = (RandomMissionTypeTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_WeaponHardpointTemplate (lua_State* tolua_S)
{
 WeaponHardpointTemplate* self = (WeaponHardpointTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MCUController (lua_State* tolua_S)
{
 MCUController* self = (MCUController*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FactionTemplate (lua_State* tolua_S)
{
 FactionTemplate* self = (FactionTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ShieldTemplate (lua_State* tolua_S)
{
 ShieldTemplate* self = (ShieldTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CoverageSquare (lua_State* tolua_S)
{
 CoverageSquare* self = (CoverageSquare*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_WeaponTemplate__ (lua_State* tolua_S)
{
 std::vector<WeaponTemplate*>* self = (std::vector<WeaponTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TerrainChange (lua_State* tolua_S)
{
 TerrainChange* self = (TerrainChange*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_WeaponTemplate (lua_State* tolua_S)
{
 WeaponTemplate* self = (WeaponTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ReactorTemplateRepository (lua_State* tolua_S)
{
 ReactorTemplateRepository* self = (ReactorTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_WeaponHardpoint (lua_State* tolua_S)
{
 WeaponHardpoint* self = (WeaponHardpoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TargetingSystemTemplateRepository (lua_State* tolua_S)
{
 TargetingSystemTemplateRepository* self = (TargetingSystemTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HubTemplate (lua_State* tolua_S)
{
 HubTemplate* self = (HubTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SensorSystemTemplateRepository (lua_State* tolua_S)
{
 SensorSystemTemplateRepository* self = (SensorSystemTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PathFindingNode (lua_State* tolua_S)
{
 PathFindingNode* self = (PathFindingNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GridSquareVector (lua_State* tolua_S)
{
 GridSquareVector* self = (GridSquareVector*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TargetingSystemTemplate (lua_State* tolua_S)
{
 TargetingSystemTemplate* self = (TargetingSystemTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GridSquare (lua_State* tolua_S)
{
 GridSquare* self = (GridSquare*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GroupAttackOrder (lua_State* tolua_S)
{
 GroupAttackOrder* self = (GroupAttackOrder*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_GridSquareTemplate__ (lua_State* tolua_S)
{
 std::deque<GridSquareTemplate*>* self = (std::deque<GridSquareTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AIPreBattleState (lua_State* tolua_S)
{
 AIPreBattleState* self = (AIPreBattleState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_BattlefieldGridCell__ (lua_State* tolua_S)
{
 std::deque<BattlefieldGridCell*>* self = (std::deque<BattlefieldGridCell*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RankTemplateRepositoryLoader (lua_State* tolua_S)
{
 RankTemplateRepositoryLoader* self = (RankTemplateRepositoryLoader*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_ArmorTemplate__ (lua_State* tolua_S)
{
 std::vector<ArmorTemplate*>* self = (std::vector<ArmorTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AIGroup (lua_State* tolua_S)
{
 AIGroup* self = (AIGroup*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__hash_map_std__string_std__string_ (lua_State* tolua_S)
{
 std::hash_map<std::string,std::string>* self = (std::hash_map<std::string,std::string>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PlayerState (lua_State* tolua_S)
{
 PlayerState* self = (PlayerState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_StoryMissionTemplate (lua_State* tolua_S)
{
 StoryMissionTemplate* self = (StoryMissionTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Projectile (lua_State* tolua_S)
{
 Projectile* self = (Projectile*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Shield (lua_State* tolua_S)
{
 Shield* self = (Shield*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_SensorSystemTemplate__ (lua_State* tolua_S)
{
 std::vector<SensorSystemTemplate*>* self = (std::vector<SensorSystemTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ProfileManagerState (lua_State* tolua_S)
{
 ProfileManagerState* self = (ProfileManagerState*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PhysicalProjectile (lua_State* tolua_S)
{
 PhysicalProjectile* self = (PhysicalProjectile*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PhysicalProjectileTemplate (lua_State* tolua_S)
{
 PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_WeaponHardpoint__ (lua_State* tolua_S)
{
 std::vector<WeaponHardpoint*>* self = (std::vector<WeaponHardpoint*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FactionHubTemplateRepository (lua_State* tolua_S)
{
 FactionHubTemplateRepository* self = (FactionHubTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_RankTemplate__ (lua_State* tolua_S)
{
 std::deque<RankTemplate*>* self = (std::deque<RankTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_DriveTemplate (lua_State* tolua_S)
{
 DriveTemplate* self = (DriveTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_DriveTemplate__ (lua_State* tolua_S)
{
 std::vector<DriveTemplate*>* self = (std::vector<DriveTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ArmorTemplateRepository (lua_State* tolua_S)
{
 ArmorTemplateRepository* self = (ArmorTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_BattlefieldTemplate__ (lua_State* tolua_S)
{
 std::deque<BattlefieldTemplate*>* self = (std::deque<BattlefieldTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HubTemplateRepository (lua_State* tolua_S)
{
 HubTemplateRepository* self = (HubTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TerrainTextureTemplate (lua_State* tolua_S)
{
 TerrainTextureTemplate* self = (TerrainTextureTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_HubTemplate__ (lua_State* tolua_S)
{
 std::vector<HubTemplate*>* self = (std::vector<HubTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TerrainTemplateRepository (lua_State* tolua_S)
{
 TerrainTemplateRepository* self = (TerrainTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_MCUComponentTemplate (lua_State* tolua_S)
{
 MCUComponentTemplate* self = (MCUComponentTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GroupMoveOrder (lua_State* tolua_S)
{
 GroupMoveOrder* self = (GroupMoveOrder*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LuaDocument (lua_State* tolua_S)
{
 LuaDocument* self = (LuaDocument*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BeamProjectile (lua_State* tolua_S)
{
 BeamProjectile* self = (BeamProjectile*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TerrainTextureTemplateRepository (lua_State* tolua_S)
{
 TerrainTextureTemplateRepository* self = (TerrainTextureTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_AIMCUTemplate__ (lua_State* tolua_S)
{
 std::vector<AIMCUTemplate*>* self = (std::vector<AIMCUTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PhysicalProjectileTemplateRepository (lua_State* tolua_S)
{
 PhysicalProjectileTemplateRepository* self = (PhysicalProjectileTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BattlefieldTemplateRepository (lua_State* tolua_S)
{
 BattlefieldTemplateRepository* self = (BattlefieldTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FactionTemplateRepository (lua_State* tolua_S)
{
 FactionTemplateRepository* self = (FactionTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_StoryMissionTemplate__ (lua_State* tolua_S)
{
 std::vector<StoryMissionTemplate*>* self = (std::vector<StoryMissionTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_WeaponTemplateRepository (lua_State* tolua_S)
{
 WeaponTemplateRepository* self = (WeaponTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Template (lua_State* tolua_S)
{
 Template* self = (Template*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RocketDocumentDefinition (lua_State* tolua_S)
{
 RocketDocumentDefinition* self = (RocketDocumentDefinition*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_MechanizedCombatUnit__ (lua_State* tolua_S)
{
 std::deque<MechanizedCombatUnit*>* self = (std::deque<MechanizedCombatUnit*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SquareType (lua_State* tolua_S)
{
 SquareType* self = (SquareType*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_BattlefieldTemplate (lua_State* tolua_S)
{
 BattlefieldTemplate* self = (BattlefieldTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_PathFindingManager (lua_State* tolua_S)
{
 PathFindingManager* self = (PathFindingManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_LuaElement (lua_State* tolua_S)
{
 LuaElement* self = (LuaElement*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Ogre__Vector3 (lua_State* tolua_S)
{
 Ogre::Vector3* self = (Ogre::Vector3*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__deque_TerrainTemplate__ (lua_State* tolua_S)
{
 std::deque<TerrainTemplate*>* self = (std::deque<TerrainTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_RankTemplate (lua_State* tolua_S)
{
 RankTemplate* self = (RankTemplate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_BatteryTemplate__ (lua_State* tolua_S)
{
 std::vector<BatteryTemplate*>* self = (std::vector<BatteryTemplate*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AIGroupTemplateRepository (lua_State* tolua_S)
{
 AIGroupTemplateRepository* self = (AIGroupTemplateRepository*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CampaignMissionManager (lua_State* tolua_S)
{
 CampaignMissionManager* self = (CampaignMissionManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Mission (lua_State* tolua_S)
{
 Mission* self = (Mission*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"FireInstruction");
 tolua_usertype(tolua_S,"SensorSystemTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"DriveTemplateRepository");
 tolua_usertype(tolua_S,"WeaponTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"RandomMission");
 tolua_usertype(tolua_S,"MCUTemplate");
 tolua_usertype(tolua_S,"AIMCUTemplate");
 tolua_usertype(tolua_S,"RankTemplateRepository");
 tolua_usertype(tolua_S,"InBaseState");
 tolua_usertype(tolua_S,"HubTemplateRepository");
 tolua_usertype(tolua_S,"Repository<TargetingSystemTemplate>");
 tolua_usertype(tolua_S,"Rocket::Core::String");
 tolua_usertype(tolua_S,"std::deque<TexturedVertex*>");
 tolua_usertype(tolua_S,"AIGroupTemplate");
 tolua_usertype(tolua_S,"Repository<WeaponTemplate>");
 tolua_usertype(tolua_S,"std::deque<MCUPlacement*>");
 tolua_usertype(tolua_S,"BeamProjectileTemplateRepository");
 tolua_usertype(tolua_S,"TerrainTemplate");
 tolua_usertype(tolua_S,"Ogre::RenderQueueListener");
 tolua_usertype(tolua_S,"DataLoader");
 tolua_usertype(tolua_S,"PlayerPreBattleState");
 tolua_usertype(tolua_S,"MCUTemplateRepository");
 tolua_usertype(tolua_S,"BatteryTemplateRepository");
 tolua_usertype(tolua_S,"Shield");
 tolua_usertype(tolua_S,"std::deque<BattlefieldTemplate*>");
 tolua_usertype(tolua_S,"BatteryTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"WeaponAnimationTemplateDataLoader");
 tolua_usertype(tolua_S,"GridSquareTemplateVector");
 tolua_usertype(tolua_S,"btMotionState");
 tolua_usertype(tolua_S,"btConvexShape");
 tolua_usertype(tolua_S,"std::vector<MCUTemplate*>");
 tolua_usertype(tolua_S,"std::vector<ShieldTemplate*>");
 tolua_usertype(tolua_S,"ArmorTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"InBattleState");
 tolua_usertype(tolua_S,"WeaponHardpointTemplate");
 tolua_usertype(tolua_S,"Ogre::ManualObject");
 tolua_usertype(tolua_S,"AIGroupTemplateRepository");
 tolua_usertype(tolua_S,"Repository<StoryMissionTemplate>");
 tolua_usertype(tolua_S,"Rocket::Core::EventListener");
 tolua_usertype(tolua_S,"WeaponTemplate");
 tolua_usertype(tolua_S,"ReactorTemplateRepository");
 tolua_usertype(tolua_S,"std::deque<PlayerPreBattleState*>");
 tolua_usertype(tolua_S,"SensorSystemTemplateRepository");
 tolua_usertype(tolua_S,"MovableEntity");
 tolua_usertype(tolua_S,"Repository<FactionTemplate>");
 tolua_usertype(tolua_S,"GroupAttackOrder");
 tolua_usertype(tolua_S,"std::deque<AIGroupTemplate*>");
 tolua_usertype(tolua_S,"RocketDocuments::ProfileMenu");
 tolua_usertype(tolua_S,"std::hash_map<std::string,std::string>");
 tolua_usertype(tolua_S,"Ogre::SceneManager");
 tolua_usertype(tolua_S,"Repository<ShieldTemplate>");
 tolua_usertype(tolua_S,"Ogre::Camera");
 tolua_usertype(tolua_S,"BattlefieldTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"std::vector<SensorSystemTemplate*>");
 tolua_usertype(tolua_S,"ProfileManagerState");
 tolua_usertype(tolua_S,"CampaignMissionManager");
 tolua_usertype(tolua_S,"RocketDocuments::MCUBay");
 tolua_usertype(tolua_S,"Repository<ArmorTemplate>");
 tolua_usertype(tolua_S,"Repository<BatteryTemplate>");
 tolua_usertype(tolua_S,"Ogre::FrameListener");
 tolua_usertype(tolua_S,"MainMenuState");
 tolua_usertype(tolua_S,"OIS::MouseButtonID");
 tolua_usertype(tolua_S,"OIS::MouseEvent");
 tolua_usertype(tolua_S,"std::deque<PlayerBattleState*>");
 tolua_usertype(tolua_S,"Rocket::Core::Event");
 tolua_usertype(tolua_S,"TerrainTextureTemplate");
 tolua_usertype(tolua_S,"GridSquareTemplate");
 tolua_usertype(tolua_S,"std::pair<int,AIMCUTemplate*>");
 tolua_usertype(tolua_S,"PhysicalProjectile");
 tolua_usertype(tolua_S,"Repository<BeamProjectileTemplate>");
 tolua_usertype(tolua_S,"PlayerBattleState");
 tolua_usertype(tolua_S,"BeamProjectile");
 tolua_usertype(tolua_S,"ShieldTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"FogSquareGrid");
 tolua_usertype(tolua_S,"PhysicalProjectileTemplateRepository");
 tolua_usertype(tolua_S,"CoverageMap");
 tolua_usertype(tolua_S,"FactionTemplateRepository");
 tolua_usertype(tolua_S,"std::vector<WeaponHardpoint*>");
 tolua_usertype(tolua_S,"CampaignState");
 tolua_usertype(tolua_S,"MCUBayState::ComponentType");
 tolua_usertype(tolua_S,"RocketDocumentDefinition");
 tolua_usertype(tolua_S,"std::deque<MechanizedCombatUnit*>");
 tolua_usertype(tolua_S,"SquareType");
 tolua_usertype(tolua_S,"InventoryState");
 tolua_usertype(tolua_S,"MCUTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"Ogre::Entity");
 tolua_usertype(tolua_S,"Ogre::Vector3");
 tolua_usertype(tolua_S,"FactionHubTemplate");
 tolua_usertype(tolua_S,"GameManager::EngineUpdateListener");
 tolua_usertype(tolua_S,"std::vector<BatteryTemplate*>");
 tolua_usertype(tolua_S,"GameState");
 tolua_usertype(tolua_S,"GroupMoveToAttackOrder");
 tolua_usertype(tolua_S,"Mission");
 tolua_usertype(tolua_S,"ArmorTemplate");
 tolua_usertype(tolua_S,"AIMCUTemplateRepository");
 tolua_usertype(tolua_S,"LuaMCUDeque");
 tolua_usertype(tolua_S,"LuaElement");
 tolua_usertype(tolua_S,"GroupMoveOrder");
 tolua_usertype(tolua_S,"DriveTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"ReactorTemplate");
 tolua_usertype(tolua_S,"RocketDocuments::MainMenu");
 tolua_usertype(tolua_S,"Repository<HubTemplate>");
 tolua_usertype(tolua_S,"Repository<FactionHubTemplate>");
 tolua_usertype(tolua_S,"Projectile");
 tolua_usertype(tolua_S,"Warhead");
 tolua_usertype(tolua_S,"Repository<SensorSystemTemplate>");
 tolua_usertype(tolua_S,"GroupOrder");
 tolua_usertype(tolua_S,"std::vector<ReactorTemplate*>");
 tolua_usertype(tolua_S,"std::vector<ArmorTemplate*>");
 tolua_usertype(tolua_S,"std::vector<TargetingSystemTemplate*>");
 tolua_usertype(tolua_S,"std::deque<RandomMissionTypeTemplate*>");
 tolua_usertype(tolua_S,"Repository<BattlefieldTemplate>");
 tolua_usertype(tolua_S,"ProjectileTemplate");
 tolua_usertype(tolua_S,"Repository<ReactorTemplate>");
 tolua_usertype(tolua_S,"std::deque<MCUController*>");
 tolua_usertype(tolua_S,"AIGroup");
 tolua_usertype(tolua_S,"BattlefieldTemplate");
 tolua_usertype(tolua_S,"std::deque<MCUComponent*>");
 tolua_usertype(tolua_S,"Repository<PhysicalProjectileTemplate>");
 tolua_usertype(tolua_S,"Repository<RankTemplate>");
 tolua_usertype(tolua_S,"ShieldTemplateRepository");
 tolua_usertype(tolua_S,"Ogre::Bone");
 tolua_usertype(tolua_S,"Repository<AIGroupTemplate>");
 tolua_usertype(tolua_S,"HubTemplate");
 tolua_usertype(tolua_S,"WeaponAnimationTemplate");
 tolua_usertype(tolua_S,"MCUAnimationController");
 tolua_usertype(tolua_S,"LuaScriptElement");
 tolua_usertype(tolua_S,"MCUController");
 tolua_usertype(tolua_S,"TargetingSystemTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"StoryMissionTemplateRepository");
 tolua_usertype(tolua_S,"TargetingSystemTemplateRepository");
 tolua_usertype(tolua_S,"PathFindingNode");
 tolua_usertype(tolua_S,"std::deque<AIGroup*>");
 tolua_usertype(tolua_S,"BattlefieldGrid");
 tolua_usertype(tolua_S,"BattlefieldGridCell");
 tolua_usertype(tolua_S,"MCUComponent");
 tolua_usertype(tolua_S,"std::deque<std::pair<int,AIMCUTemplate*> >");
 tolua_usertype(tolua_S,"BatteryTemplate");
 tolua_usertype(tolua_S,"TexturedVertex");
 tolua_usertype(tolua_S,"GridSquare");
 tolua_usertype(tolua_S,"std::deque<GridSquareTemplate*>");
 tolua_usertype(tolua_S,"TerrainChange");
 tolua_usertype(tolua_S,"AIPreBattleState");
 tolua_usertype(tolua_S,"std::deque<Projectile*>");
 tolua_usertype(tolua_S,"std::deque<MCUOrderStatus*>");
 tolua_usertype(tolua_S,"TerrainTemplateRepository");
 tolua_usertype(tolua_S,"Ogre::Real");
 tolua_usertype(tolua_S,"TerrainTextureTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"AnimationDefinitionTemplateDataLoader");
 tolua_usertype(tolua_S,"GameManager");
 tolua_usertype(tolua_S,"Rocket::Core::Element");
 tolua_usertype(tolua_S,"RandomMissionTypeTemplateRepository");
 tolua_usertype(tolua_S,"FactionHubTemplateRepository");
 tolua_usertype(tolua_S,"Ogre::SceneNode");
 tolua_usertype(tolua_S,"MCUPlacement");
 tolua_usertype(tolua_S,"ShieldTemplate");
 tolua_usertype(tolua_S,"CoverageSquare");
 tolua_usertype(tolua_S,"std::vector<WeaponTemplate*>");
 tolua_usertype(tolua_S,"MechanizedCombatUnit");
 tolua_usertype(tolua_S,"PersistentEntity");
 tolua_usertype(tolua_S,"FactionHubTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"WeaponHardpoint");
 tolua_usertype(tolua_S,"AIGroupTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"InputListener::Listener");
 tolua_usertype(tolua_S,"AIMCUTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"RepositoryManager");
 tolua_usertype(tolua_S,"RandomMissionTypeTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"TargetingSystemTemplate");
 tolua_usertype(tolua_S,"Repository<MCUTemplate>");
 tolua_usertype(tolua_S,"WeaponHardpointTemplateDataLoader");
 tolua_usertype(tolua_S,"Repository<DriveTemplate>");
 tolua_usertype(tolua_S,"BeamProjectileTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"std::deque<BattlefieldGridCell*>");
 tolua_usertype(tolua_S,"RankTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"TerrainTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"RequiredRankTemplate");
 tolua_usertype(tolua_S,"std::vector<AIMCUTemplate*>");
 tolua_usertype(tolua_S,"PlayerState");
 tolua_usertype(tolua_S,"RepositoryLoader");
 tolua_usertype(tolua_S,"LuaDocument");
 tolua_usertype(tolua_S,"btPairCachingGhostObject");
 tolua_usertype(tolua_S,"PlayerProfile");
 tolua_usertype(tolua_S,"SensorSystemTemplate");
 tolua_usertype(tolua_S,"FactionTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"PhysicalProjectileTemplate");
 tolua_usertype(tolua_S,"StoryMissionTemplate");
 tolua_usertype(tolua_S,"RandomMissionTypeTemplate");
 tolua_usertype(tolua_S,"RocketDocuments");
 tolua_usertype(tolua_S,"DriveTemplate");
 tolua_usertype(tolua_S,"std::vector<DriveTemplate*>");
 tolua_usertype(tolua_S,"ArmorTemplateRepository");
 tolua_usertype(tolua_S,"RocketRenderer");
 tolua_usertype(tolua_S,"HubTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"PhysicalProjectileTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"std::vector<HubTemplate*>");
 tolua_usertype(tolua_S,"Rocket::Core::ElementDocument");
 tolua_usertype(tolua_S,"MCUComponentTemplate");
 tolua_usertype(tolua_S,"BeamProjectileTemplate");
 tolua_usertype(tolua_S,"std::deque<RankTemplate*>");
 tolua_usertype(tolua_S,"Repository<TerrainTemplate>");
 tolua_usertype(tolua_S,"TerrainTextureTemplateRepository");
 tolua_usertype(tolua_S,"AnimationDefinitionTemplate");
 tolua_usertype(tolua_S,"Repository<TerrainTextureTemplate>");
 tolua_usertype(tolua_S,"Repository<RandomMissionTypeTemplate>");
 tolua_usertype(tolua_S,"MCUOrderStatus");
 tolua_usertype(tolua_S,"FactionTemplate");
 tolua_usertype(tolua_S,"WeaponTemplateRepository");
 tolua_usertype(tolua_S,"Template");
 tolua_usertype(tolua_S,"std::vector<StoryMissionTemplate*>");
 tolua_usertype(tolua_S,"RocketDocuments::InBattle");
 tolua_usertype(tolua_S,"btTransform");
 tolua_usertype(tolua_S,"KinematicCharacterController");
 tolua_usertype(tolua_S,"PathFindingManager");
 tolua_usertype(tolua_S,"RocketDocuments::InBase");
 tolua_usertype(tolua_S,"GridSquareVector");
 tolua_usertype(tolua_S,"std::deque<TerrainTemplate*>");
 tolua_usertype(tolua_S,"RankTemplate");
 tolua_usertype(tolua_S,"BattlefieldTemplateRepository");
 tolua_usertype(tolua_S,"ReactorTemplateRepositoryLoader");
 tolua_usertype(tolua_S,"Repository<AIMCUTemplate>");
 tolua_usertype(tolua_S,"DataSet");
}

/* method: new of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_new00
static int tolua_CenterSpace_LuaElement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Rocket::Core::Element",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rocket::Core::Element* element = ((Rocket::Core::Element*)  tolua_tousertype(tolua_S,2,0));
  {
   LuaElement* tolua_ret = (LuaElement*)  Mtolua_new((LuaElement)(element));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_new00_local
static int tolua_CenterSpace_LuaElement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Rocket::Core::Element",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rocket::Core::Element* element = ((Rocket::Core::Element*)  tolua_tousertype(tolua_S,2,0));
  {
   LuaElement* tolua_ret = (LuaElement*)  Mtolua_new((LuaElement)(element));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_delete00
static int tolua_CenterSpace_LuaElement_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getId of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getId00
static int tolua_CenterSpace_LuaElement_getId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getId'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getId();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setId of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_setId00
static int tolua_CenterSpace_LuaElement_setId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string id = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setId'", NULL);
#endif
  {
   self->setId(id);
   tolua_pushcppstring(tolua_S,(const char*)id);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTagName of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getTagName00
static int tolua_CenterSpace_LuaElement_getTagName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTagName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTagName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTagName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getName00
static int tolua_CenterSpace_LuaElement_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_setName00
static int tolua_CenterSpace_LuaElement_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isClassSet of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_isClassSet00
static int tolua_CenterSpace_LuaElement_isClassSet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isClassSet'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isClassSet(className);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)className);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isClassSet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setClass of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_setClass00
static int tolua_CenterSpace_LuaElement_setClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool enable = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setClass'", NULL);
#endif
  {
   self->setClass(className,enable);
   tolua_pushcppstring(tolua_S,(const char*)className);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProperty of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getProperty00
static int tolua_CenterSpace_LuaElement_getProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProperty'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getProperty(name);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperty of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_setProperty00
static int tolua_CenterSpace_LuaElement_setProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string value = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperty'", NULL);
#endif
  {
   self->setProperty(name,value);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeProperty of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_removeProperty00
static int tolua_CenterSpace_LuaElement_removeProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeProperty'", NULL);
#endif
  {
   self->removeProperty(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAttribute of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getAttribute00
static int tolua_CenterSpace_LuaElement_getAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAttribute'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getAttribute(name);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasAttribute of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_hasAttribute00
static int tolua_CenterSpace_LuaElement_hasAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasAttribute'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasAttribute(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAttribute of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_setAttribute00
static int tolua_CenterSpace_LuaElement_setAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string value = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAttribute'", NULL);
#endif
  {
   self->setAttribute(name,value);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)value);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAttribute of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_removeAttribute00
static int tolua_CenterSpace_LuaElement_removeAttribute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAttribute'", NULL);
#endif
  {
   self->removeAttribute(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAttribute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: focus of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_focus00
static int tolua_CenterSpace_LuaElement_focus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'focus'", NULL);
#endif
  {
   self->focus();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'focus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: blur of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_blur00
static int tolua_CenterSpace_LuaElement_blur00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'blur'", NULL);
#endif
  {
   self->blur();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'blur'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: click of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_click00
static int tolua_CenterSpace_LuaElement_click00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'click'", NULL);
#endif
  {
   self->click();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'click'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwnerDocument of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getOwnerDocument00
static int tolua_CenterSpace_LuaElement_getOwnerDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwnerDocument'", NULL);
#endif
  {
   LuaDocument* tolua_ret = (LuaDocument*)  self->getOwnerDocument();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaDocument");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwnerDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParentNode of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getParentNode00
static int tolua_CenterSpace_LuaElement_getParentNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParentNode'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getParentNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParentNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextSibling of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getNextSibling00
static int tolua_CenterSpace_LuaElement_getNextSibling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextSibling'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getNextSibling();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextSibling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPreviousSibling of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getPreviousSibling00
static int tolua_CenterSpace_LuaElement_getPreviousSibling00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPreviousSibling'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getPreviousSibling();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPreviousSibling'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFirstChild of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getFirstChild00
static int tolua_CenterSpace_LuaElement_getFirstChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFirstChild'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getFirstChild();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFirstChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLastChild of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getLastChild00
static int tolua_CenterSpace_LuaElement_getLastChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLastChild'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getLastChild();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLastChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChild of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getChild00
static int tolua_CenterSpace_LuaElement_getChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChild'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getChild(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNumChildren of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getNumChildren00
static int tolua_CenterSpace_LuaElement_getNumChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  bool include_non_dom_elements = ((bool)  tolua_toboolean(tolua_S,2,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNumChildren'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNumChildren(include_non_dom_elements);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNumChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getItemId of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getItemId00
static int tolua_CenterSpace_LuaElement_getItemId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getItemId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getItemId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getItemId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasChildNodes of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_hasChildNodes00
static int tolua_CenterSpace_LuaElement_hasChildNodes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasChildNodes'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasChildNodes();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasChildNodes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_removeChild00
static int tolua_CenterSpace_LuaElement_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"LuaElement",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  LuaElement element = *((LuaElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInnerRML of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getInnerRML00
static int tolua_CenterSpace_LuaElement_getInnerRML00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInnerRML'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getInnerRML();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInnerRML'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInnerRML of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_setInnerRML00
static int tolua_CenterSpace_LuaElement_setInnerRML00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string rml = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInnerRML'", NULL);
#endif
  {
   self->setInnerRML(rml);
   tolua_pushcppstring(tolua_S,(const char*)rml);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInnerRML'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementById of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getElementById00
static int tolua_CenterSpace_LuaElement_getElementById00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string id = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementById'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getElementById(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
   tolua_pushcppstring(tolua_S,(const char*)id);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementById'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElementByName of class  LuaElement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaElement_getElementByName00
static int tolua_CenterSpace_LuaElement_getElementByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaElement",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaElement* self = (LuaElement*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElementByName'", NULL);
#endif
  {
   LuaElement* tolua_ret = (LuaElement*)  self->getElementByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaElement");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElementByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  LuaDocument */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaDocument_new00
static int tolua_CenterSpace_LuaDocument_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaDocument",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Rocket::Core::ElementDocument",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rocket::Core::ElementDocument* document = ((Rocket::Core::ElementDocument*)  tolua_tousertype(tolua_S,2,0));
  {
   LuaDocument* tolua_ret = (LuaDocument*)  Mtolua_new((LuaDocument)(document));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaDocument");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  LuaDocument */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaDocument_new00_local
static int tolua_CenterSpace_LuaDocument_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LuaDocument",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Rocket::Core::ElementDocument",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Rocket::Core::ElementDocument* document = ((Rocket::Core::ElementDocument*)  tolua_tousertype(tolua_S,2,0));
  {
   LuaDocument* tolua_ret = (LuaDocument*)  Mtolua_new((LuaDocument)(document));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaDocument");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  LuaDocument */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaDocument_delete00
static int tolua_CenterSpace_LuaDocument_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaDocument",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaDocument* self = (LuaDocument*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDocument of class  LuaDocument */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaDocument_getDocument00
static int tolua_CenterSpace_LuaDocument_getDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaDocument",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaDocument* self = (LuaDocument*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDocument'", NULL);
#endif
  {
   Rocket::Core::ElementDocument* tolua_ret = (Rocket::Core::ElementDocument*)  self->getDocument();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Rocket::Core::ElementDocument");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_new00
static int tolua_CenterSpace_Template_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Template* tolua_ret = (Template*)  Mtolua_new((Template)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Template");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_new00_local
static int tolua_CenterSpace_Template_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Template* tolua_ret = (Template*)  Mtolua_new((Template)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Template");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_delete00
static int tolua_CenterSpace_Template_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Template* self = (Template*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getId of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_getId00
static int tolua_CenterSpace_Template_getId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Template* self = (Template*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setId of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_setId00
static int tolua_CenterSpace_Template_setId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Template* self = (Template*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setId'", NULL);
#endif
  {
   self->setId(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_getName00
static int tolua_CenterSpace_Template_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Template* self = (Template*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  Template */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Template_setName00
static int tolua_CenterSpace_Template_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Template",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Template* self = (Template*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketDocumentDefinition_new00
static int tolua_CenterSpace_RocketDocumentDefinition_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RocketDocumentDefinition",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RocketDocumentDefinition* tolua_ret = (RocketDocumentDefinition*)  Mtolua_new((RocketDocumentDefinition)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RocketDocumentDefinition");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketDocumentDefinition_new00_local
static int tolua_CenterSpace_RocketDocumentDefinition_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RocketDocumentDefinition",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RocketDocumentDefinition* tolua_ret = (RocketDocumentDefinition*)  Mtolua_new((RocketDocumentDefinition)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RocketDocumentDefinition");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketDocumentDefinition_new01
static int tolua_CenterSpace_RocketDocumentDefinition_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RocketDocumentDefinition",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rocket::Core::String",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Rocket::Core::String",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Rocket::Core::String id = *((Rocket::Core::String*)  tolua_tousertype(tolua_S,2,0));
  Rocket::Core::String name = *((Rocket::Core::String*)  tolua_tousertype(tolua_S,3,0));
  bool modal = ((bool)  tolua_toboolean(tolua_S,4,false));
  {
   RocketDocumentDefinition* tolua_ret = (RocketDocumentDefinition*)  Mtolua_new((RocketDocumentDefinition)(id,name,modal));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RocketDocumentDefinition");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_RocketDocumentDefinition_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketDocumentDefinition_new01_local
static int tolua_CenterSpace_RocketDocumentDefinition_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RocketDocumentDefinition",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rocket::Core::String",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Rocket::Core::String",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Rocket::Core::String id = *((Rocket::Core::String*)  tolua_tousertype(tolua_S,2,0));
  Rocket::Core::String name = *((Rocket::Core::String*)  tolua_tousertype(tolua_S,3,0));
  bool modal = ((bool)  tolua_toboolean(tolua_S,4,false));
  {
   RocketDocumentDefinition* tolua_ret = (RocketDocumentDefinition*)  Mtolua_new((RocketDocumentDefinition)(id,name,modal));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RocketDocumentDefinition");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_RocketDocumentDefinition_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Modal of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocumentDefinition_Modal
static int tolua_get_RocketDocumentDefinition_Modal(lua_State* tolua_S)
{
  RocketDocumentDefinition* self = (RocketDocumentDefinition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Modal'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->Modal);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Modal of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_set_RocketDocumentDefinition_Modal
static int tolua_set_RocketDocumentDefinition_Modal(lua_State* tolua_S)
{
  RocketDocumentDefinition* self = (RocketDocumentDefinition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Modal'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Modal = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ID of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocumentDefinition_ID
static int tolua_get_RocketDocumentDefinition_ID(lua_State* tolua_S)
{
  RocketDocumentDefinition* self = (RocketDocumentDefinition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ID,"Rocket::Core::String");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ID of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_set_RocketDocumentDefinition_ID
static int tolua_set_RocketDocumentDefinition_ID(lua_State* tolua_S)
{
  RocketDocumentDefinition* self = (RocketDocumentDefinition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ID'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rocket::Core::String",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ID = *((Rocket::Core::String*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Filename of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocumentDefinition_Filename
static int tolua_get_RocketDocumentDefinition_Filename(lua_State* tolua_S)
{
  RocketDocumentDefinition* self = (RocketDocumentDefinition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Filename'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Filename,"Rocket::Core::String");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Filename of class  RocketDocumentDefinition */
#ifndef TOLUA_DISABLE_tolua_set_RocketDocumentDefinition_Filename
static int tolua_set_RocketDocumentDefinition_Filename(lua_State* tolua_S)
{
  RocketDocumentDefinition* self = (RocketDocumentDefinition*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Filename'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rocket::Core::String",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Filename = *((Rocket::Core::String*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ProfileMain of class  ProfileMenu */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__ProfileMenu_ProfileMain
static int tolua_get_RocketDocuments__ProfileMenu_ProfileMain(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::ProfileMenu::ProfileMain,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Main of class  MainMenu */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MainMenu_Main
static int tolua_get_RocketDocuments__MainMenu_Main(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MainMenu::Main,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: SinglePlayer of class  MainMenu */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MainMenu_SinglePlayer
static int tolua_get_RocketDocuments__MainMenu_SinglePlayer(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MainMenu::SinglePlayer,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Campaign of class  MainMenu */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MainMenu_Campaign
static int tolua_get_RocketDocuments__MainMenu_Campaign(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MainMenu::Campaign,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Multiplayer of class  MainMenu */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MainMenu_Multiplayer
static int tolua_get_RocketDocuments__MainMenu_Multiplayer(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MainMenu::Multiplayer,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Options of class  MainMenu */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MainMenu_Options
static int tolua_get_RocketDocuments__MainMenu_Options(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MainMenu::Options,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Main of class  InBase */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__InBase_Main
static int tolua_get_RocketDocuments__InBase_Main(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::InBase::Main,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MissionSelect of class  InBase */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__InBase_MissionSelect
static int tolua_get_RocketDocuments__InBase_MissionSelect(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::InBase::MissionSelect,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Main of class  MCUBay */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MCUBay_Main
static int tolua_get_RocketDocuments__MCUBay_Main(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MCUBay::Main,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MCUPurchase of class  MCUBay */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MCUBay_MCUPurchase
static int tolua_get_RocketDocuments__MCUBay_MCUPurchase(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MCUBay::MCUPurchase,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MCUSelectEdit of class  MCUBay */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MCUBay_MCUSelectEdit
static int tolua_get_RocketDocuments__MCUBay_MCUSelectEdit(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MCUBay::MCUSelectEdit,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MCUEdit of class  MCUBay */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MCUBay_MCUEdit
static int tolua_get_RocketDocuments__MCUBay_MCUEdit(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MCUBay::MCUEdit,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MCUComponentSelect of class  MCUBay */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__MCUBay_MCUComponentSelect
static int tolua_get_RocketDocuments__MCUBay_MCUComponentSelect(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::MCUBay::MCUComponentSelect,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InBattleHUD of class  InBattle */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__InBattle_InBattleHUD
static int tolua_get_RocketDocuments__InBattle_InBattleHUD(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::InBattle::InBattleHUD,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: InBattleMenu of class  InBattle */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__InBattle_InBattleMenu
static int tolua_get_RocketDocuments__InBattle_InBattleMenu(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::InBattle::InBattleMenu,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BetweenTurnsHUD of class  InBattle */
#ifndef TOLUA_DISABLE_tolua_get_RocketDocuments__InBattle_BetweenTurnsHUD
static int tolua_get_RocketDocuments__InBattle_BetweenTurnsHUD(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&RocketDocuments::InBattle::BetweenTurnsHUD,"const RocketDocumentDefinition");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: unloadCurrentDocument of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_unloadCurrentDocument00
static int tolua_CenterSpace_RocketRenderer_unloadCurrentDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unloadCurrentDocument'", NULL);
#endif
  {
   self->unloadCurrentDocument();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unloadCurrentDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadDocument of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_loadDocument00
static int tolua_CenterSpace_RocketRenderer_loadDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"RocketDocumentDefinition",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
  RocketDocumentDefinition document = *((RocketDocumentDefinition*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadDocument'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->loadDocument(document);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadModalDocument of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_loadModalDocument00
static int tolua_CenterSpace_RocketRenderer_loadModalDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"RocketDocumentDefinition",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
  RocketDocumentDefinition document = *((RocketDocumentDefinition*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadModalDocument'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->loadModalDocument(document);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadModalDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: closeModalDocument of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_closeModalDocument00
static int tolua_CenterSpace_RocketRenderer_closeModalDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'closeModalDocument'", NULL);
#endif
  {
   self->closeModalDocument();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'closeModalDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reloadCurrentDocument of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_reloadCurrentDocument00
static int tolua_CenterSpace_RocketRenderer_reloadCurrentDocument00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reloadCurrentDocument'", NULL);
#endif
  {
   self->reloadCurrentDocument();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadCurrentDocument'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toggleVisibility of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_toggleVisibility00
static int tolua_CenterSpace_RocketRenderer_toggleVisibility00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
  bool state = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toggleVisibility'", NULL);
#endif
  {
   self->toggleVisibility(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toggleVisibility'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_isVisible00
static int tolua_CenterSpace_RocketRenderer_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActiveState of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_setActiveState00
static int tolua_CenterSpace_RocketRenderer_setActiveState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
  GameState* state = ((GameState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActiveState'", NULL);
#endif
  {
   self->setActiveState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActiveState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerLuaScriptElement of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_registerLuaScriptElement00
static int tolua_CenterSpace_RocketRenderer_registerLuaScriptElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LuaScriptElement",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
  LuaScriptElement* element = ((LuaScriptElement*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerLuaScriptElement'", NULL);
#endif
  {
   self->registerLuaScriptElement(element);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerLuaScriptElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RocketRenderer_getSingletonPtr00
static int tolua_CenterSpace_RocketRenderer_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RocketRenderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RocketRenderer* tolua_ret = (RocketRenderer*)  RocketRenderer::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RocketRenderer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __Rocket of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_get_RocketRenderer___Rocket__Core__EventListener__
static int tolua_get_RocketRenderer___Rocket__Core__EventListener__(lua_State* tolua_S)
{
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__Rocket'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<Rocket::Core::EventListener*>(self), "Rocket::Core::EventListener");
#else
   tolua_pushusertype(tolua_S,(void*)((Rocket::Core::EventListener*)self), "Rocket::Core::EventListener");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __InputListener of class  RocketRenderer */
#ifndef TOLUA_DISABLE_tolua_get_RocketRenderer___InputListener__Listener__
static int tolua_get_RocketRenderer___InputListener__Listener__(lua_State* tolua_S)
{
  RocketRenderer* self = (RocketRenderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__InputListener'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<InputListener::Listener*>(self), "InputListener::Listener");
#else
   tolua_pushusertype(tolua_S,(void*)((InputListener::Listener*)self), "InputListener::Listener");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDataSource of class  DataSet */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DataSet_getDataSource00
static int tolua_CenterSpace_DataSet_getDataSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DataSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DataSet* self = (DataSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDataSource'", NULL);
#endif
  {
   DataSourceType tolua_ret = (DataSourceType)  self->getDataSource();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDataSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateData of class  DataSet */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DataSet_updateData00
static int tolua_CenterSpace_DataSet_updateData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DataSet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DataSet* self = (DataSet*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,3,0));
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateData'", NULL);
#endif
  {
   self->updateData(id,key,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: numItems of class  DataSet */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DataSet_numItems00
static int tolua_CenterSpace_DataSet_numItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DataSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DataSet* self = (DataSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'numItems'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->numItems();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'numItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getValue of class  DataSet */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DataSet_getValue00
static int tolua_CenterSpace_DataSet_getValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DataSet",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DataSet* self = (DataSet*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getValue'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getValue(id,key);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRequiredRank of class  RequiredRankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RequiredRankTemplate_getRequiredRank00
static int tolua_CenterSpace_RequiredRankTemplate_getRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RequiredRankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RequiredRankTemplate* self = (RequiredRankTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRequiredRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRequiredRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRequiredRank of class  RequiredRankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RequiredRankTemplate_setRequiredRank00
static int tolua_CenterSpace_RequiredRankTemplate_setRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RequiredRankTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RequiredRankTemplate* self = (RequiredRankTemplate*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRequiredRank'", NULL);
#endif
  {
   self->setRequiredRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_new00
static int tolua_CenterSpace_HubTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HubTemplate* tolua_ret = (HubTemplate*)  Mtolua_new((HubTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_new00_local
static int tolua_CenterSpace_HubTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HubTemplate* tolua_ret = (HubTemplate*)  Mtolua_new((HubTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_delete00
static int tolua_CenterSpace_HubTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSystemName of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_getSystemName00
static int tolua_CenterSpace_HubTemplate_getSystemName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSystemName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getSystemName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSystemName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSystemName of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_setSystemName00
static int tolua_CenterSpace_HubTemplate_setSystemName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSystemName'", NULL);
#endif
  {
   self->setSystemName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSystemName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBaseMissionPay of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_getBaseMissionPay00
static int tolua_CenterSpace_HubTemplate_getBaseMissionPay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBaseMissionPay'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBaseMissionPay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBaseMissionPay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBaseMissionPay of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_setBaseMissionPay00
static int tolua_CenterSpace_HubTemplate_setBaseMissionPay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBaseMissionPay'", NULL);
#endif
  {
   self->setBaseMissionPay(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBaseMissionPay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBounty of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_getBounty00
static int tolua_CenterSpace_HubTemplate_getBounty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBounty'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBounty();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBounty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBounty of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_setBounty00
static int tolua_CenterSpace_HubTemplate_setBounty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBounty'", NULL);
#endif
  {
   self->setBounty(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBounty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_new01
static int tolua_CenterSpace_HubTemplate_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   HubTemplate* tolua_ret = (HubTemplate*)  Mtolua_new((HubTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_new01_local
static int tolua_CenterSpace_HubTemplate_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  {
   HubTemplate* tolua_ret = (HubTemplate*)  Mtolua_new((HubTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_delete01
static int tolua_CenterSpace_HubTemplate_delete01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_delete00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSystemName of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_getSystemName01
static int tolua_CenterSpace_HubTemplate_getSystemName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSystemName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getSystemName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_getSystemName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSystemName of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_setSystemName01
static int tolua_CenterSpace_HubTemplate_setSystemName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSystemName'", NULL);
#endif
  {
   self->setSystemName(name);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_setSystemName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBaseMissionPay of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_getBaseMissionPay01
static int tolua_CenterSpace_HubTemplate_getBaseMissionPay01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBaseMissionPay'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBaseMissionPay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_getBaseMissionPay00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBaseMissionPay of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_setBaseMissionPay01
static int tolua_CenterSpace_HubTemplate_setBaseMissionPay01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBaseMissionPay'", NULL);
#endif
  {
   self->setBaseMissionPay(value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_setBaseMissionPay00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBounty of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_getBounty01
static int tolua_CenterSpace_HubTemplate_getBounty01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBounty'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBounty();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_getBounty00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBounty of class  HubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplate_setBounty01
static int tolua_CenterSpace_HubTemplate_setBounty01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HubTemplate* self = (HubTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBounty'", NULL);
#endif
  {
   self->setBounty(value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_HubTemplate_setBounty00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_new00
static int tolua_CenterSpace_BattlefieldTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BattlefieldTemplate* tolua_ret = (BattlefieldTemplate*)  Mtolua_new((BattlefieldTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_new00_local
static int tolua_CenterSpace_BattlefieldTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BattlefieldTemplate* tolua_ret = (BattlefieldTemplate*)  Mtolua_new((BattlefieldTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_delete00
static int tolua_CenterSpace_BattlefieldTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplate* self = (BattlefieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInitialSize of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_getInitialSize00
static int tolua_CenterSpace_BattlefieldTemplate_getInitialSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplate* self = (BattlefieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInitialSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getInitialSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInitialSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInitialSize of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_setInitialSize00
static int tolua_CenterSpace_BattlefieldTemplate_setInitialSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplate* self = (BattlefieldTemplate*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInitialSize'", NULL);
#endif
  {
   self->setInitialSize(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInitialSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinMCUs of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_getMinMCUs00
static int tolua_CenterSpace_BattlefieldTemplate_getMinMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplate* self = (BattlefieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinMCUs'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMinMCUs();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinMCUs of class  BattlefieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplate_setMinMCUs00
static int tolua_CenterSpace_BattlefieldTemplate_setMinMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplate* self = (BattlefieldTemplate*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinMCUs'", NULL);
#endif
  {
   self->setMinMCUs(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_new00
static int tolua_CenterSpace_TerrainTextureTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TerrainTextureTemplate* tolua_ret = (TerrainTextureTemplate*)  Mtolua_new((TerrainTextureTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTextureTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_new00_local
static int tolua_CenterSpace_TerrainTextureTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TerrainTextureTemplate* tolua_ret = (TerrainTextureTemplate*)  Mtolua_new((TerrainTextureTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTextureTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_delete00
static int tolua_CenterSpace_TerrainTextureTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplate* self = (TerrainTextureTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRoughness of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_getRoughness00
static int tolua_CenterSpace_TerrainTextureTemplate_getRoughness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplate* self = (TerrainTextureTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRoughness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRoughness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRoughness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRoughness of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_setRoughness00
static int tolua_CenterSpace_TerrainTextureTemplate_setRoughness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplate* self = (TerrainTextureTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRoughness'", NULL);
#endif
  {
   self->setRoughness(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRoughness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureName of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_getTextureName00
static int tolua_CenterSpace_TerrainTextureTemplate_getTextureName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplate* self = (TerrainTextureTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTextureName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureName of class  TerrainTextureTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplate_setTextureName00
static int tolua_CenterSpace_TerrainTextureTemplate_setTextureName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplate* self = (TerrainTextureTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string textureName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureName'", NULL);
#endif
  {
   self->setTextureName(textureName);
   tolua_pushcppstring(tolua_S,(const char*)textureName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_new00
static int tolua_CenterSpace_TerrainTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  Mtolua_new((TerrainTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_new00_local
static int tolua_CenterSpace_TerrainTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  Mtolua_new((TerrainTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_delete00
static int tolua_CenterSpace_TerrainTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMinHeight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getMinHeight00
static int tolua_CenterSpace_TerrainTemplate_getMinHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMinHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMinHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMinHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMinHeight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setMinHeight00
static int tolua_CenterSpace_TerrainTemplate_setMinHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMinHeight'", NULL);
#endif
  {
   self->setMinHeight(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMinHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxHeight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getMaxHeight00
static int tolua_CenterSpace_TerrainTemplate_getMaxHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxHeight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setMaxHeight00
static int tolua_CenterSpace_TerrainTemplate_setMaxHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  int value = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxHeight'", NULL);
#endif
  {
   self->setMaxHeight(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGravity of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getGravity00
static int tolua_CenterSpace_TerrainTemplate_getGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGravity'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getGravity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGravity of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setGravity00
static int tolua_CenterSpace_TerrainTemplate_setGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  float g = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGravity'", NULL);
#endif
  {
   self->setGravity(g);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainTextureTemplate of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getTerrainTextureTemplate00
static int tolua_CenterSpace_TerrainTemplate_getTerrainTextureTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainTextureTemplate'", NULL);
#endif
  {
   TerrainTextureTemplate* tolua_ret = (TerrainTextureTemplate*)  self->getTerrainTextureTemplate(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTextureTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainTextureTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainTextureTemplate of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setTerrainTextureTemplate00
static int tolua_CenterSpace_TerrainTemplate_setTerrainTextureTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TerrainTextureTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  TerrainTextureTemplate* texture = ((TerrainTextureTemplate*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainTextureTemplate'", NULL);
#endif
  {
   self->setTerrainTextureTemplate(i,texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainTextureTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHubTemplate of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getHubTemplate00
static int tolua_CenterSpace_TerrainTemplate_getHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHubTemplate'", NULL);
#endif
  {
   HubTemplate* tolua_ret = (HubTemplate*)  self->getHubTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHubTemplate of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setHubTemplate00
static int tolua_CenterSpace_TerrainTemplate_setHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  HubTemplate* hub = ((HubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHubTemplate'", NULL);
#endif
  {
   self->setHubTemplate(hub);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialName of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getMaterialName00
static int tolua_CenterSpace_TerrainTemplate_getMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMaterialName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialName of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setMaterialName00
static int tolua_CenterSpace_TerrainTemplate_setMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string materialName = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialName'", NULL);
#endif
  {
   self->setMaterialName(materialName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getDescription00
static int tolua_CenterSpace_TerrainTemplate_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDescription of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setDescription00
static int tolua_CenterSpace_TerrainTemplate_setDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string desc = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDescription'", NULL);
#endif
  {
   self->setDescription(desc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaScriptFile of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getLuaScriptFile00
static int tolua_CenterSpace_TerrainTemplate_getLuaScriptFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaScriptFile'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getLuaScriptFile();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaScriptFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaScriptFile of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setLuaScriptFile00
static int tolua_CenterSpace_TerrainTemplate_setLuaScriptFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string file = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaScriptFile'", NULL);
#endif
  {
   self->setLuaScriptFile(file);
   tolua_pushcppstring(tolua_S,(const char*)file);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaScriptFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaEntryPoint of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getLuaEntryPoint00
static int tolua_CenterSpace_TerrainTemplate_getLuaEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getLuaEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaEntryPoint of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setLuaEntryPoint00
static int tolua_CenterSpace_TerrainTemplate_setLuaEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaEntryPoint'", NULL);
#endif
  {
   self->setLuaEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam1 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getLuaParam100
static int tolua_CenterSpace_TerrainTemplate_getLuaParam100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam1'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam1();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam1 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setLuaParam100
static int tolua_CenterSpace_TerrainTemplate_setLuaParam100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam1'", NULL);
#endif
  {
   self->setLuaParam1(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam2 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getLuaParam200
static int tolua_CenterSpace_TerrainTemplate_getLuaParam200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam2'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam2();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam2 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setLuaParam200
static int tolua_CenterSpace_TerrainTemplate_setLuaParam200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam2'", NULL);
#endif
  {
   self->setLuaParam2(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam3 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getLuaParam300
static int tolua_CenterSpace_TerrainTemplate_getLuaParam300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam3'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam3();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam3 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setLuaParam300
static int tolua_CenterSpace_TerrainTemplate_setLuaParam300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam3'", NULL);
#endif
  {
   self->setLuaParam3(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam4 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getLuaParam400
static int tolua_CenterSpace_TerrainTemplate_getLuaParam400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam4'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam4();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam4 of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setLuaParam400
static int tolua_CenterSpace_TerrainTemplate_setLuaParam400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam4'", NULL);
#endif
  {
   self->setLuaParam4(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmbientLight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getAmbientLight00
static int tolua_CenterSpace_TerrainTemplate_getAmbientLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmbientLight'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getAmbientLight();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmbientLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmbientLight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setAmbientLight00
static int tolua_CenterSpace_TerrainTemplate_setAmbientLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* light = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmbientLight'", NULL);
#endif
  {
   self->setAmbientLight(*light);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmbientLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDirectionalLight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getDirectionalLight00
static int tolua_CenterSpace_TerrainTemplate_getDirectionalLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDirectionalLight'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getDirectionalLight();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDirectionalLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirectionalLight of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setDirectionalLight00
static int tolua_CenterSpace_TerrainTemplate_setDirectionalLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* light = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirectionalLight'", NULL);
#endif
  {
   self->setDirectionalLight(*light);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirectionalLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDirectionalLightDirection of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_getDirectionalLightDirection00
static int tolua_CenterSpace_TerrainTemplate_getDirectionalLightDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDirectionalLightDirection'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getDirectionalLightDirection();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDirectionalLightDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirectionalLightDirection of class  TerrainTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplate_setDirectionalLightDirection00
static int tolua_CenterSpace_TerrainTemplate_setDirectionalLightDirection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplate* self = (TerrainTemplate*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* dir = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirectionalLightDirection'", NULL);
#endif
  {
   self->setDirectionalLightDirection(*dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirectionalLightDirection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_new00
static int tolua_CenterSpace_FactionTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  Mtolua_new((FactionTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_new00_local
static int tolua_CenterSpace_FactionTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  Mtolua_new((FactionTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_delete00
static int tolua_CenterSpace_FactionTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplate* self = (FactionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_getDescription00
static int tolua_CenterSpace_FactionTemplate_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplate* self = (FactionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDescription of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_setDescription00
static int tolua_CenterSpace_FactionTemplate_setDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplate* self = (FactionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string desc = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDescription'", NULL);
#endif
  {
   self->setDescription(desc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isGenericFaction of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_isGenericFaction00
static int tolua_CenterSpace_FactionTemplate_isGenericFaction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplate* self = (FactionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isGenericFaction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isGenericFaction();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isGenericFaction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsGenericFaction of class  FactionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplate_setIsGenericFaction00
static int tolua_CenterSpace_FactionTemplate_setIsGenericFaction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplate* self = (FactionTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsGenericFaction'", NULL);
#endif
  {
   self->setIsGenericFaction(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsGenericFaction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_new00
static int tolua_CenterSpace_RankTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RankTemplate* tolua_ret = (RankTemplate*)  Mtolua_new((RankTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RankTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_new00_local
static int tolua_CenterSpace_RankTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RankTemplate* tolua_ret = (RankTemplate*)  Mtolua_new((RankTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RankTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_delete00
static int tolua_CenterSpace_RankTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_getFactionTemplate00
static int tolua_CenterSpace_RankTemplate_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_setFactionTemplate00
static int tolua_CenterSpace_RankTemplate_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRequiredExperience of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_getRequiredExperience00
static int tolua_CenterSpace_RankTemplate_getRequiredExperience00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRequiredExperience'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRequiredExperience();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRequiredExperience'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRequiredExperience of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_setRequiredExperience00
static int tolua_CenterSpace_RankTemplate_setRequiredExperience00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
  int exp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRequiredExperience'", NULL);
#endif
  {
   self->setRequiredExperience(exp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRequiredExperience'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRank of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_getRank00
static int tolua_CenterSpace_RankTemplate_getRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRank of class  RankTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplate_setRank00
static int tolua_CenterSpace_RankTemplate_setRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplate* self = (RankTemplate*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRank'", NULL);
#endif
  {
   self->setRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_new00
static int tolua_CenterSpace_FactionHubTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  Mtolua_new((FactionHubTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_new00_local
static int tolua_CenterSpace_FactionHubTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  Mtolua_new((FactionHubTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_delete00
static int tolua_CenterSpace_FactionHubTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerFactionTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_getPlayerFactionTemplate00
static int tolua_CenterSpace_FactionHubTemplate_getPlayerFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getPlayerFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerFactionTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_setPlayerFactionTemplate00
static int tolua_CenterSpace_FactionHubTemplate_setPlayerFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerFactionTemplate'", NULL);
#endif
  {
   self->setPlayerFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy1FactionTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_getEnemy1FactionTemplate00
static int tolua_CenterSpace_FactionHubTemplate_getEnemy1FactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy1FactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getEnemy1FactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy1FactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy1FactionTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_setEnemy1FactionTemplate00
static int tolua_CenterSpace_FactionHubTemplate_setEnemy1FactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy1FactionTemplate'", NULL);
#endif
  {
   self->setEnemy1FactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy1FactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy2FactionTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_getEnemy2FactionTemplate00
static int tolua_CenterSpace_FactionHubTemplate_getEnemy2FactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy2FactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getEnemy2FactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy2FactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy2FactionTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_setEnemy2FactionTemplate00
static int tolua_CenterSpace_FactionHubTemplate_setEnemy2FactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy2FactionTemplate'", NULL);
#endif
  {
   self->setEnemy2FactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy2FactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHubTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_getHubTemplate00
static int tolua_CenterSpace_FactionHubTemplate_getHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHubTemplate'", NULL);
#endif
  {
   HubTemplate* tolua_ret = (HubTemplate*)  self->getHubTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHubTemplate of class  FactionHubTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplate_setHubTemplate00
static int tolua_CenterSpace_FactionHubTemplate_setHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplate* self = (FactionHubTemplate*)  tolua_tousertype(tolua_S,1,0);
  HubTemplate* hub = ((HubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHubTemplate'", NULL);
#endif
  {
   self->setHubTemplate(hub);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_new00
static int tolua_CenterSpace_MCUComponentTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUComponentTemplate* tolua_ret = (MCUComponentTemplate*)  Mtolua_new((MCUComponentTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUComponentTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_new00_local
static int tolua_CenterSpace_MCUComponentTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUComponentTemplate* tolua_ret = (MCUComponentTemplate*)  Mtolua_new((MCUComponentTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUComponentTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_delete00
static int tolua_CenterSpace_MCUComponentTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getDescription00
static int tolua_CenterSpace_MCUComponentTemplate_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDescription of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setDescription00
static int tolua_CenterSpace_MCUComponentTemplate_setDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string desc = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDescription'", NULL);
#endif
  {
   self->setDescription(desc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCost of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getCost00
static int tolua_CenterSpace_MCUComponentTemplate_getCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCost'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getCost();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCost of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setCost00
static int tolua_CenterSpace_MCUComponentTemplate_setCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  float cost = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCost'", NULL);
#endif
  {
   self->setCost(cost);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeight of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getWeight00
static int tolua_CenterSpace_MCUComponentTemplate_getWeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getWeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeight of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setWeight00
static int tolua_CenterSpace_MCUComponentTemplate_setWeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  float weight = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeight'", NULL);
#endif
  {
   self->setWeight(weight);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxHealth of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getMaxHealth00
static int tolua_CenterSpace_MCUComponentTemplate_getMaxHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxHealth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxHealth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxHealth of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setMaxHealth00
static int tolua_CenterSpace_MCUComponentTemplate_setMaxHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  float health = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxHealth'", NULL);
#endif
  {
   self->setMaxHealth(health);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRequiredRank of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getRequiredRank00
static int tolua_CenterSpace_MCUComponentTemplate_getRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRequiredRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRequiredRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRequiredRank of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setRequiredRank00
static int tolua_CenterSpace_MCUComponentTemplate_setRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRequiredRank'", NULL);
#endif
  {
   self->setRequiredRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getFactionTemplate00
static int tolua_CenterSpace_MCUComponentTemplate_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setFactionTemplate00
static int tolua_CenterSpace_MCUComponentTemplate_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getSize00
static int tolua_CenterSpace_MCUComponentTemplate_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSize of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_setSize00
static int tolua_CenterSpace_MCUComponentTemplate_setSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
  int size = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSize'", NULL);
#endif
  {
   self->setSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  MCUComponentTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUComponentTemplate_getGuiValues00
static int tolua_CenterSpace_MCUComponentTemplate_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUComponentTemplate* self = (MCUComponentTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_new00
static int tolua_CenterSpace_ArmorTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  Mtolua_new((ArmorTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_new00_local
static int tolua_CenterSpace_ArmorTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  Mtolua_new((ArmorTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_delete00
static int tolua_CenterSpace_ArmorTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLaserDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_getLaserDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_getLaserDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLaserDamageTaken'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLaserDamageTaken();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLaserDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLaserDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_setLaserDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_setLaserDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLaserDamageTaken'", NULL);
#endif
  {
   self->setLaserDamageTaken(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLaserDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlasmaDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_getPlasmaDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_getPlasmaDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlasmaDamageTaken'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getPlasmaDamageTaken();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlasmaDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlasmaDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_setPlasmaDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_setPlasmaDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlasmaDamageTaken'", NULL);
#endif
  {
   self->setPlasmaDamageTaken(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlasmaDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCannonDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_getCannonDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_getCannonDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCannonDamageTaken'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getCannonDamageTaken();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCannonDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCannonDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_setCannonDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_setCannonDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCannonDamageTaken'", NULL);
#endif
  {
   self->setCannonDamageTaken(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCannonDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMissileDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_getMissileDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_getMissileDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMissileDamageTaken'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMissileDamageTaken();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMissileDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMissileDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_setMissileDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_setMissileDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMissileDamageTaken'", NULL);
#endif
  {
   self->setMissileDamageTaken(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMissileDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPiercingDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_getPiercingDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_getPiercingDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPiercingDamageTaken'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getPiercingDamageTaken();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPiercingDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPiercingDamageTaken of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_setPiercingDamageTaken00
static int tolua_CenterSpace_ArmorTemplate_setPiercingDamageTaken00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPiercingDamageTaken'", NULL);
#endif
  {
   self->setPiercingDamageTaken(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPiercingDamageTaken'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFinalDamageValue of class  ArmorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplate_getFinalDamageValue00
static int tolua_CenterSpace_ArmorTemplate_getFinalDamageValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplate* self = (ArmorTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damageIn = ((const float)  tolua_tonumber(tolua_S,2,0));
  DamageType damageType = ((DamageType) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFinalDamageValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getFinalDamageValue(damageIn,damageType);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)damageIn);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFinalDamageValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  BatteryTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplate_new00
static int tolua_CenterSpace_BatteryTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  Mtolua_new((BatteryTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  BatteryTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplate_new00_local
static int tolua_CenterSpace_BatteryTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  Mtolua_new((BatteryTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BatteryTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplate_delete00
static int tolua_CenterSpace_BatteryTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BatteryTemplate* self = (BatteryTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxEnergy of class  BatteryTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplate_getMaxEnergy00
static int tolua_CenterSpace_BatteryTemplate_getMaxEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BatteryTemplate* self = (BatteryTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxEnergy'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxEnergy();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxEnergy of class  BatteryTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplate_setMaxEnergy00
static int tolua_CenterSpace_BatteryTemplate_setMaxEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BatteryTemplate* self = (BatteryTemplate*)  tolua_tousertype(tolua_S,1,0);
  float maxEnergy = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxEnergy'", NULL);
#endif
  {
   self->setMaxEnergy(maxEnergy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  DriveTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplate_new00
static int tolua_CenterSpace_DriveTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  Mtolua_new((DriveTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  DriveTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplate_new00_local
static int tolua_CenterSpace_DriveTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  Mtolua_new((DriveTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  DriveTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplate_delete00
static int tolua_CenterSpace_DriveTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DriveTemplate* self = (DriveTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEfficiency of class  DriveTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplate_getEfficiency00
static int tolua_CenterSpace_DriveTemplate_getEfficiency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DriveTemplate* self = (DriveTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEfficiency'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEfficiency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEfficiency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEfficiency of class  DriveTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplate_setEfficiency00
static int tolua_CenterSpace_DriveTemplate_setEfficiency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DriveTemplate* self = (DriveTemplate*)  tolua_tousertype(tolua_S,1,0);
  float e = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEfficiency'", NULL);
#endif
  {
   self->setEfficiency(e);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEfficiency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ReactorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplate_new00
static int tolua_CenterSpace_ReactorTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  Mtolua_new((ReactorTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ReactorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplate_new00_local
static int tolua_CenterSpace_ReactorTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  Mtolua_new((ReactorTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ReactorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplate_delete00
static int tolua_CenterSpace_ReactorTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ReactorTemplate* self = (ReactorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxEnergy of class  ReactorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplate_getMaxEnergy00
static int tolua_CenterSpace_ReactorTemplate_getMaxEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ReactorTemplate* self = (ReactorTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxEnergy'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxEnergy();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxEnergy of class  ReactorTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplate_setMaxEnergy00
static int tolua_CenterSpace_ReactorTemplate_setMaxEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ReactorTemplate* self = (ReactorTemplate*)  tolua_tousertype(tolua_S,1,0);
  float maxEnergy = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxEnergy'", NULL);
#endif
  {
   self->setMaxEnergy(maxEnergy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_new00
static int tolua_CenterSpace_SensorSystemTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  Mtolua_new((SensorSystemTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_new00_local
static int tolua_CenterSpace_SensorSystemTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  Mtolua_new((SensorSystemTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_delete00
static int tolua_CenterSpace_SensorSystemTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplate* self = (SensorSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSightRange of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_getSightRange00
static int tolua_CenterSpace_SensorSystemTemplate_getSightRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplate* self = (SensorSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSightRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSightRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSightRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSightRange of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_setSightRange00
static int tolua_CenterSpace_SensorSystemTemplate_setSightRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplate* self = (SensorSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float range = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSightRange'", NULL);
#endif
  {
   self->setSightRange(range);
   tolua_pushnumber(tolua_S,(lua_Number)range);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSightRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRadarRange of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_getRadarRange00
static int tolua_CenterSpace_SensorSystemTemplate_getRadarRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplate* self = (SensorSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRadarRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRadarRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRadarRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRadarRange of class  SensorSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplate_setRadarRange00
static int tolua_CenterSpace_SensorSystemTemplate_setRadarRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplate* self = (SensorSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float range = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRadarRange'", NULL);
#endif
  {
   self->setRadarRange(range);
   tolua_pushnumber(tolua_S,(lua_Number)range);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRadarRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_new00
static int tolua_CenterSpace_ShieldTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  Mtolua_new((ShieldTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_new00_local
static int tolua_CenterSpace_ShieldTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  Mtolua_new((ShieldTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_delete00
static int tolua_CenterSpace_ShieldTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxShieldHealth of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_getMaxShieldHealth00
static int tolua_CenterSpace_ShieldTemplate_getMaxShieldHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxShieldHealth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxShieldHealth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxShieldHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxShieldHealth of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_setMaxShieldHealth00
static int tolua_CenterSpace_ShieldTemplate_setMaxShieldHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float health = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxShieldHealth'", NULL);
#endif
  {
   self->setMaxShieldHealth(health);
   tolua_pushnumber(tolua_S,(lua_Number)health);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxShieldHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnergyDrainPerTurn of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_getEnergyDrainPerTurn00
static int tolua_CenterSpace_ShieldTemplate_getEnergyDrainPerTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnergyDrainPerTurn'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEnergyDrainPerTurn();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnergyDrainPerTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnergyDrainPerTurn of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_setEnergyDrainPerTurn00
static int tolua_CenterSpace_ShieldTemplate_setEnergyDrainPerTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float drain = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnergyDrainPerTurn'", NULL);
#endif
  {
   self->setEnergyDrainPerTurn(drain);
   tolua_pushnumber(tolua_S,(lua_Number)drain);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnergyDrainPerTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRegenRate of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_getRegenRate00
static int tolua_CenterSpace_ShieldTemplate_getRegenRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRegenRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRegenRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRegenRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRegenRate of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_setRegenRate00
static int tolua_CenterSpace_ShieldTemplate_setRegenRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float rate = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRegenRate'", NULL);
#endif
  {
   self->setRegenRate(rate);
   tolua_pushnumber(tolua_S,(lua_Number)rate);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRegenRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialName of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_getMaterialName00
static int tolua_CenterSpace_ShieldTemplate_getMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMaterialName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialName of class  ShieldTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplate_setMaterialName00
static int tolua_CenterSpace_ShieldTemplate_setMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* self = (ShieldTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialName'", NULL);
#endif
  {
   self->setMaterialName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_new00
static int tolua_CenterSpace_TargetingSystemTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  Mtolua_new((TargetingSystemTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_new00_local
static int tolua_CenterSpace_TargetingSystemTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  Mtolua_new((TargetingSystemTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_delete00
static int tolua_CenterSpace_TargetingSystemTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBaseAccuracy of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_getBaseAccuracy00
static int tolua_CenterSpace_TargetingSystemTemplate_getBaseAccuracy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBaseAccuracy'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBaseAccuracy();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBaseAccuracy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBaseAccuracy of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_setBaseAccuracy00
static int tolua_CenterSpace_TargetingSystemTemplate_setBaseAccuracy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBaseAccuracy'", NULL);
#endif
  {
   self->setBaseAccuracy(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBaseAccuracy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObstructedBonus of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_getObstructedBonus00
static int tolua_CenterSpace_TargetingSystemTemplate_getObstructedBonus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObstructedBonus'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getObstructedBonus();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObstructedBonus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObstructedBonus of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_setObstructedBonus00
static int tolua_CenterSpace_TargetingSystemTemplate_setObstructedBonus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObstructedBonus'", NULL);
#endif
  {
   self->setObstructedBonus(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObstructedBonus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLongRangeBonus of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_getLongRangeBonus00
static int tolua_CenterSpace_TargetingSystemTemplate_getLongRangeBonus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLongRangeBonus'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLongRangeBonus();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLongRangeBonus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLongRangeBonus of class  TargetingSystemTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplate_setLongRangeBonus00
static int tolua_CenterSpace_TargetingSystemTemplate_setLongRangeBonus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplate* self = (TargetingSystemTemplate*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLongRangeBonus'", NULL);
#endif
  {
   self->setLongRangeBonus(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLongRangeBonus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_new00
static int tolua_CenterSpace_RandomMissionTypeTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMissionTypeTemplate* tolua_ret = (RandomMissionTypeTemplate*)  Mtolua_new((RandomMissionTypeTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_new00_local
static int tolua_CenterSpace_RandomMissionTypeTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMissionTypeTemplate* tolua_ret = (RandomMissionTypeTemplate*)  Mtolua_new((RandomMissionTypeTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_delete00
static int tolua_CenterSpace_RandomMissionTypeTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlacementScriptFilename of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_getPlacementScriptFilename00
static int tolua_CenterSpace_RandomMissionTypeTemplate_getPlacementScriptFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlacementScriptFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getPlacementScriptFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlacementScriptFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlacementScriptFilename of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_setPlacementScriptFilename00
static int tolua_CenterSpace_RandomMissionTypeTemplate_setPlacementScriptFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string file = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlacementScriptFilename'", NULL);
#endif
  {
   self->setPlacementScriptFilename(file);
   tolua_pushcppstring(tolua_S,(const char*)file);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlacementScriptFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerPlacementEntryPoint of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_getPlayerPlacementEntryPoint00
static int tolua_CenterSpace_RandomMissionTypeTemplate_getPlayerPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerPlacementEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getPlayerPlacementEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerPlacementEntryPoint of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_setPlayerPlacementEntryPoint00
static int tolua_CenterSpace_RandomMissionTypeTemplate_setPlayerPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerPlacementEntryPoint'", NULL);
#endif
  {
   self->setPlayerPlacementEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyPlacementEntryPoint of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_getEnemyPlacementEntryPoint00
static int tolua_CenterSpace_RandomMissionTypeTemplate_getEnemyPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyPlacementEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyPlacementEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyPlacementEntryPoint of class  RandomMissionTypeTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplate_setEnemyPlacementEntryPoint00
static int tolua_CenterSpace_RandomMissionTypeTemplate_setEnemyPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplate* self = (RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyPlacementEntryPoint'", NULL);
#endif
  {
   self->setEnemyPlacementEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_new00
static int tolua_CenterSpace_StoryMissionTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   StoryMissionTemplate* tolua_ret = (StoryMissionTemplate*)  Mtolua_new((StoryMissionTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StoryMissionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_new00_local
static int tolua_CenterSpace_StoryMissionTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   StoryMissionTemplate* tolua_ret = (StoryMissionTemplate*)  Mtolua_new((StoryMissionTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StoryMissionTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_delete00
static int tolua_CenterSpace_StoryMissionTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainTemplate of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getTerrainTemplate00
static int tolua_CenterSpace_StoryMissionTemplate_getTerrainTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainTemplate'", NULL);
#endif
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  self->getTerrainTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainTemplate of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setTerrainTemplate00
static int tolua_CenterSpace_StoryMissionTemplate_setTerrainTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  TerrainTemplate* terrain = ((TerrainTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainTemplate'", NULL);
#endif
  {
   self->setTerrainTemplate(terrain);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionHubTemplate of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getFactionHubTemplate00
static int tolua_CenterSpace_StoryMissionTemplate_getFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionHubTemplate'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->getFactionHubTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionHubTemplate of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setFactionHubTemplate00
static int tolua_CenterSpace_StoryMissionTemplate_setFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionHubTemplate* hub = ((FactionHubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionHubTemplate'", NULL);
#endif
  {
   self->setFactionHubTemplate(hub);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSideLength of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getSideLength00
static int tolua_CenterSpace_StoryMissionTemplate_getSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSideLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSideLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSideLength of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setSideLength00
static int tolua_CenterSpace_StoryMissionTemplate_setSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int length = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSideLength'", NULL);
#endif
  {
   self->setSideLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRequiredRank of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getRequiredRank00
static int tolua_CenterSpace_StoryMissionTemplate_getRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRequiredRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRequiredRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRequiredRank of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setRequiredRank00
static int tolua_CenterSpace_StoryMissionTemplate_setRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRequiredRank'", NULL);
#endif
  {
   self->setRequiredRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMissionScriptFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getMissionScriptFilename00
static int tolua_CenterSpace_StoryMissionTemplate_getMissionScriptFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMissionScriptFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMissionScriptFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMissionScriptFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMissionScriptFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setMissionScriptFilename00
static int tolua_CenterSpace_StoryMissionTemplate_setMissionScriptFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMissionScriptFilename'", NULL);
#endif
  {
   self->setMissionScriptFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMissionScriptFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainGenerationFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getTerrainGenerationFilename00
static int tolua_CenterSpace_StoryMissionTemplate_getTerrainGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainGenerationFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTerrainGenerationFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainGenerationFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setTerrainGenerationFilename00
static int tolua_CenterSpace_StoryMissionTemplate_setTerrainGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainGenerationFilename'", NULL);
#endif
  {
   self->setTerrainGenerationFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainGenerationEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getTerrainGenerationEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_getTerrainGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainGenerationEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTerrainGenerationEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainGenerationEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setTerrainGenerationEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_setTerrainGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainGenerationEntryPoint'", NULL);
#endif
  {
   self->setTerrainGenerationEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyGenerationFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemyGenerationFilename00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemyGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyGenerationFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyGenerationFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyGenerationFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemyGenerationFilename00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemyGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyGenerationFilename'", NULL);
#endif
  {
   self->setEnemyGenerationFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyGenerationEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemyGenerationEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemyGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyGenerationEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyGenerationEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyGenerationEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemyGenerationEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemyGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyGenerationEntryPoint'", NULL);
#endif
  {
   self->setEnemyGenerationEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlacementFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getPlacementFilename00
static int tolua_CenterSpace_StoryMissionTemplate_getPlacementFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlacementFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getPlacementFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlacementFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlacementFilename of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setPlacementFilename00
static int tolua_CenterSpace_StoryMissionTemplate_setPlacementFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlacementFilename'", NULL);
#endif
  {
   self->setPlacementFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlacementFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerPlacementEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getPlayerPlacementEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_getPlayerPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerPlacementEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getPlayerPlacementEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerPlacementEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setPlayerPlacementEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_setPlayerPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerPlacementEntryPoint'", NULL);
#endif
  {
   self->setPlayerPlacementEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyPlacementEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemyPlacementEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemyPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyPlacementEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyPlacementEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyPlacementEntryPoint of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemyPlacementEntryPoint00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemyPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyPlacementEntryPoint'", NULL);
#endif
  {
   self->setEnemyPlacementEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerLocationX of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getPlayerLocationX00
static int tolua_CenterSpace_StoryMissionTemplate_getPlayerLocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerLocationX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerLocationX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerLocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerLocationX of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setPlayerLocationX00
static int tolua_CenterSpace_StoryMissionTemplate_setPlayerLocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerLocationX'", NULL);
#endif
  {
   self->setPlayerLocationX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerLocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerLocationZ of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getPlayerLocationZ00
static int tolua_CenterSpace_StoryMissionTemplate_getPlayerLocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerLocationZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerLocationZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerLocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerLocationZ of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setPlayerLocationZ00
static int tolua_CenterSpace_StoryMissionTemplate_setPlayerLocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerLocationZ'", NULL);
#endif
  {
   self->setPlayerLocationZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerLocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy1LocationX of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemy1LocationX00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemy1LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy1LocationX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy1LocationX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy1LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy1LocationX of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemy1LocationX00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemy1LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy1LocationX'", NULL);
#endif
  {
   self->setEnemy1LocationX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy1LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy1LocationZ of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemy1LocationZ00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemy1LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy1LocationZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy1LocationZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy1LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy1LocationZ of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemy1LocationZ00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemy1LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy1LocationZ'", NULL);
#endif
  {
   self->setEnemy1LocationZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy1LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy2LocationX of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemy2LocationX00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemy2LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy2LocationX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy2LocationX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy2LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy2LocationX of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemy2LocationX00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemy2LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy2LocationX'", NULL);
#endif
  {
   self->setEnemy2LocationX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy2LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy2LocationZ of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getEnemy2LocationZ00
static int tolua_CenterSpace_StoryMissionTemplate_getEnemy2LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy2LocationZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy2LocationZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy2LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy2LocationZ of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setEnemy2LocationZ00
static int tolua_CenterSpace_StoryMissionTemplate_setEnemy2LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy2LocationZ'", NULL);
#endif
  {
   self->setEnemy2LocationZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy2LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam1 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getLuaParam100
static int tolua_CenterSpace_StoryMissionTemplate_getLuaParam100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam1'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam1();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam1 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setLuaParam100
static int tolua_CenterSpace_StoryMissionTemplate_setLuaParam100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam1'", NULL);
#endif
  {
   self->setLuaParam1(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam2 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getLuaParam200
static int tolua_CenterSpace_StoryMissionTemplate_getLuaParam200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam2'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam2();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam2 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setLuaParam200
static int tolua_CenterSpace_StoryMissionTemplate_setLuaParam200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam2'", NULL);
#endif
  {
   self->setLuaParam2(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam3 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getLuaParam300
static int tolua_CenterSpace_StoryMissionTemplate_getLuaParam300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam3'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam3();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam3 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setLuaParam300
static int tolua_CenterSpace_StoryMissionTemplate_setLuaParam300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam3'", NULL);
#endif
  {
   self->setLuaParam3(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam4 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_getLuaParam400
static int tolua_CenterSpace_StoryMissionTemplate_getLuaParam400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam4'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam4();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam4 of class  StoryMissionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplate_setLuaParam400
static int tolua_CenterSpace_StoryMissionTemplate_setLuaParam400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplate* self = (StoryMissionTemplate*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam4'", NULL);
#endif
  {
   self->setLuaParam4(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProjectileTemplate_delete00
static int tolua_CenterSpace_ProjectileTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProjectileTemplate* self = (ProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExplosionName of class  ProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProjectileTemplate_getExplosionName00
static int tolua_CenterSpace_ProjectileTemplate_getExplosionName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProjectileTemplate* self = (ProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExplosionName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getExplosionName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExplosionName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setExplosionName of class  ProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProjectileTemplate_setExplosionName00
static int tolua_CenterSpace_ProjectileTemplate_setExplosionName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProjectileTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProjectileTemplate* self = (ProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setExplosionName'", NULL);
#endif
  {
   self->setExplosionName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setExplosionName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_new00
static int tolua_CenterSpace_BeamProjectileTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BeamProjectileTemplate* tolua_ret = (BeamProjectileTemplate*)  Mtolua_new((BeamProjectileTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_new00_local
static int tolua_CenterSpace_BeamProjectileTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BeamProjectileTemplate* tolua_ret = (BeamProjectileTemplate*)  Mtolua_new((BeamProjectileTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_delete00
static int tolua_CenterSpace_BeamProjectileTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDuration of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_getDuration00
static int tolua_CenterSpace_BeamProjectileTemplate_getDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDuration'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getDuration();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDuration of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_setDuration00
static int tolua_CenterSpace_BeamProjectileTemplate_setDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float duration = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDuration'", NULL);
#endif
  {
   self->setDuration(duration);
   tolua_pushnumber(tolua_S,(lua_Number)duration);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialName of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_getMaterialName00
static int tolua_CenterSpace_BeamProjectileTemplate_getMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMaterialName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialName of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_setMaterialName00
static int tolua_CenterSpace_BeamProjectileTemplate_setMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialName'", NULL);
#endif
  {
   self->setMaterialName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBeamWidth of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_getBeamWidth00
static int tolua_CenterSpace_BeamProjectileTemplate_getBeamWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBeamWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getBeamWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBeamWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBeamWidth of class  BeamProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplate_setBeamWidth00
static int tolua_CenterSpace_BeamProjectileTemplate_setBeamWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplate* self = (BeamProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float width = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBeamWidth'", NULL);
#endif
  {
   self->setBeamWidth(width);
   tolua_pushnumber(tolua_S,(lua_Number)width);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBeamWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_new00
static int tolua_CenterSpace_PhysicalProjectileTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PhysicalProjectileTemplate* tolua_ret = (PhysicalProjectileTemplate*)  Mtolua_new((PhysicalProjectileTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_new00_local
static int tolua_CenterSpace_PhysicalProjectileTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PhysicalProjectileTemplate* tolua_ret = (PhysicalProjectileTemplate*)  Mtolua_new((PhysicalProjectileTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_delete00
static int tolua_CenterSpace_PhysicalProjectileTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshName of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_getMeshName00
static int tolua_CenterSpace_PhysicalProjectileTemplate_getMeshName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMeshName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMeshName of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_setMeshName00
static int tolua_CenterSpace_PhysicalProjectileTemplate_setMeshName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMeshName'", NULL);
#endif
  {
   self->setMeshName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMeshName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialName of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_getMaterialName00
static int tolua_CenterSpace_PhysicalProjectileTemplate_getMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMaterialName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialName of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_setMaterialName00
static int tolua_CenterSpace_PhysicalProjectileTemplate_setMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialName'", NULL);
#endif
  {
   self->setMaterialName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementSpeed of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_getMovementSpeed00
static int tolua_CenterSpace_PhysicalProjectileTemplate_getMovementSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMovementSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMovementSpeed of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_setMovementSpeed00
static int tolua_CenterSpace_PhysicalProjectileTemplate_setMovementSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float speed = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMovementSpeed'", NULL);
#endif
  {
   self->setMovementSpeed(speed);
   tolua_pushnumber(tolua_S,(lua_Number)speed);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMovementSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeight of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_getWeight00
static int tolua_CenterSpace_PhysicalProjectileTemplate_getWeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getWeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeight of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_setWeight00
static int tolua_CenterSpace_PhysicalProjectileTemplate_setWeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float weight = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeight'", NULL);
#endif
  {
   self->setWeight(weight);
   tolua_pushnumber(tolua_S,(lua_Number)weight);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSelfPropelled of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_isSelfPropelled00
static int tolua_CenterSpace_PhysicalProjectileTemplate_isSelfPropelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSelfPropelled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSelfPropelled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSelfPropelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSelfPropelled of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_setSelfPropelled00
static int tolua_CenterSpace_PhysicalProjectileTemplate_setSelfPropelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSelfPropelled'", NULL);
#endif
  {
   self->setSelfPropelled(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSelfPropelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isArching of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_isArching00
static int tolua_CenterSpace_PhysicalProjectileTemplate_isArching00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isArching'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isArching();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isArching'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setArching of class  PhysicalProjectileTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplate_setArching00
static int tolua_CenterSpace_PhysicalProjectileTemplate_setArching00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplate* self = (PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setArching'", NULL);
#endif
  {
   self->setArching(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArching'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_new00
static int tolua_CenterSpace_WeaponTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  Mtolua_new((WeaponTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_new00_local
static int tolua_CenterSpace_WeaponTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  Mtolua_new((WeaponTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_delete00
static int tolua_CenterSpace_WeaponTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponType of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getWeaponType00
static int tolua_CenterSpace_WeaponTemplate_getWeaponType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponType'", NULL);
#endif
  {
   WeaponType tolua_ret = (WeaponType)  self->getWeaponType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeaponType of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setWeaponType00
static int tolua_CenterSpace_WeaponTemplate_setWeaponType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  WeaponType type = ((WeaponType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeaponType'", NULL);
#endif
  {
   self->setWeaponType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeaponType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeaponType of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setWeaponType01
static int tolua_CenterSpace_WeaponTemplate_setWeaponType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeaponType'", NULL);
#endif
  {
   self->setWeaponType(i);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_WeaponTemplate_setWeaponType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShieldDamage of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getShieldDamage00
static int tolua_CenterSpace_WeaponTemplate_getShieldDamage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShieldDamage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getShieldDamage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShieldDamage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShieldDamage of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setShieldDamage00
static int tolua_CenterSpace_WeaponTemplate_setShieldDamage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  float damage = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShieldDamage'", NULL);
#endif
  {
   self->setShieldDamage(damage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShieldDamage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmorDamage of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getArmorDamage00
static int tolua_CenterSpace_WeaponTemplate_getArmorDamage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmorDamage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getArmorDamage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmorDamage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setArmorDamage of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setArmorDamage00
static int tolua_CenterSpace_WeaponTemplate_setArmorDamage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setArmorDamage'", NULL);
#endif
  {
   self->setArmorDamage(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArmorDamage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPiercingDamage of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getPiercingDamage00
static int tolua_CenterSpace_WeaponTemplate_getPiercingDamage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPiercingDamage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getPiercingDamage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPiercingDamage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPiercingDamage of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setPiercingDamage00
static int tolua_CenterSpace_WeaponTemplate_setPiercingDamage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  const float damage = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPiercingDamage'", NULL);
#endif
  {
   self->setPiercingDamage(damage);
   tolua_pushnumber(tolua_S,(lua_Number)damage);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPiercingDamage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRange of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getRange00
static int tolua_CenterSpace_WeaponTemplate_getRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRange of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setRange00
static int tolua_CenterSpace_WeaponTemplate_setRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  float range = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRange'", NULL);
#endif
  {
   self->setRange(range);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRoundsPerTurn of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getRoundsPerTurn00
static int tolua_CenterSpace_WeaponTemplate_getRoundsPerTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRoundsPerTurn'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRoundsPerTurn();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRoundsPerTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRoundsPerTurn of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setRoundsPerTurn00
static int tolua_CenterSpace_WeaponTemplate_setRoundsPerTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  int rounds = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRoundsPerTurn'", NULL);
#endif
  {
   self->setRoundsPerTurn(rounds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRoundsPerTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxAmmo of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getMaxAmmo00
static int tolua_CenterSpace_WeaponTemplate_getMaxAmmo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxAmmo'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxAmmo();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxAmmo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxAmmo of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setMaxAmmo00
static int tolua_CenterSpace_WeaponTemplate_setMaxAmmo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxAmmo = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxAmmo'", NULL);
#endif
  {
   self->setMaxAmmo(maxAmmo);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxAmmo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnergyDrain of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getEnergyDrain00
static int tolua_CenterSpace_WeaponTemplate_getEnergyDrain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnergyDrain'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEnergyDrain();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnergyDrain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnergyDrain of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setEnergyDrain00
static int tolua_CenterSpace_WeaponTemplate_setEnergyDrain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  float drain = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnergyDrain'", NULL);
#endif
  {
   self->setEnergyDrain(drain);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnergyDrain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFit of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_canFit00
static int tolua_CenterSpace_WeaponTemplate_canFit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  HardpointType hType = ((HardpointType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFit'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFit(hType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canFit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isIndirectFireCapable of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_isIndirectFireCapable00
static int tolua_CenterSpace_WeaponTemplate_isIndirectFireCapable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isIndirectFireCapable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isIndirectFireCapable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isIndirectFireCapable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIndirectFireCapable of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setIndirectFireCapable00
static int tolua_CenterSpace_WeaponTemplate_setIndirectFireCapable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIndirectFireCapable'", NULL);
#endif
  {
   self->setIndirectFireCapable(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIndirectFireCapable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProjectileTemplate of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getProjectileTemplate00
static int tolua_CenterSpace_WeaponTemplate_getProjectileTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProjectileTemplate'", NULL);
#endif
  {
   ProjectileTemplate* tolua_ret = (ProjectileTemplate*)  self->getProjectileTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProjectileTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProjectileTemplate of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setProjectileTemplate00
static int tolua_CenterSpace_WeaponTemplate_setProjectileTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  ProjectileTemplate* t = ((ProjectileTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProjectileTemplate'", NULL);
#endif
  {
   self->setProjectileTemplate(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProjectileTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDamageType of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getDamageType00
static int tolua_CenterSpace_WeaponTemplate_getDamageType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDamageType'", NULL);
#endif
  {
   DamageType tolua_ret = (DamageType)  self->getDamageType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDamageType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDamageType of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_setDamageType00
static int tolua_CenterSpace_WeaponTemplate_setDamageType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
  DamageType type = ((DamageType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDamageType'", NULL);
#endif
  {
   self->setDamageType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDamageType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  WeaponTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplate_getGuiValues00
static int tolua_CenterSpace_WeaponTemplate_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplate* self = (WeaponTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_new00
static int tolua_CenterSpace_WeaponHardpointTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponHardpointTemplate* tolua_ret = (WeaponHardpointTemplate*)  Mtolua_new((WeaponHardpointTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpointTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_new00_local
static int tolua_CenterSpace_WeaponHardpointTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponHardpointTemplate* tolua_ret = (WeaponHardpointTemplate*)  Mtolua_new((WeaponHardpointTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpointTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_delete00
static int tolua_CenterSpace_WeaponHardpointTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHardpointType of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_getHardpointType00
static int tolua_CenterSpace_WeaponHardpointTemplate_getHardpointType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHardpointType'", NULL);
#endif
  {
   HardpointType tolua_ret = (HardpointType)  self->getHardpointType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHardpointType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHardpointType of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType00
static int tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  HardpointType type = ((HardpointType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHardpointType'", NULL);
#endif
  {
   self->setHardpointType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHardpointType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHardpointType of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType01
static int tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHardpointType'", NULL);
#endif
  {
   self->setHardpointType(i);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxWeaponSize of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_getMaxWeaponSize00
static int tolua_CenterSpace_WeaponHardpointTemplate_getMaxWeaponSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxWeaponSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxWeaponSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxWeaponSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxWeaponSize of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setMaxWeaponSize00
static int tolua_CenterSpace_WeaponHardpointTemplate_setMaxWeaponSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxSize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxWeaponSize'", NULL);
#endif
  {
   self->setMaxWeaponSize(maxSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxWeaponSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultWeapon of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_getDefaultWeapon00
static int tolua_CenterSpace_WeaponHardpointTemplate_getDefaultWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultWeapon'", NULL);
#endif
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  self->getDefaultWeapon();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultWeapon of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setDefaultWeapon00
static int tolua_CenterSpace_WeaponHardpointTemplate_setDefaultWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  WeaponTemplate* defaultWeapon = ((WeaponTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultWeapon'", NULL);
#endif
  {
   self->setDefaultWeapon(defaultWeapon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHardpointNumber of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_getHardpointNumber00
static int tolua_CenterSpace_WeaponHardpointTemplate_getHardpointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHardpointNumber'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getHardpointNumber();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHardpointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHardpointNumber of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setHardpointNumber00
static int tolua_CenterSpace_WeaponHardpointTemplate_setHardpointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  int hNumber = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHardpointNumber'", NULL);
#endif
  {
   self->setHardpointNumber(hNumber);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHardpointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBarrelOffset of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_getBarrelOffset00
static int tolua_CenterSpace_WeaponHardpointTemplate_getBarrelOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBarrelOffset'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getBarrelOffset();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBarrelOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBarrelOffset of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset00
static int tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBarrelOffset'", NULL);
#endif
  {
   self->setBarrelOffset(x,y,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBarrelOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBarrelOffset of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset01
static int tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Vector3 location = *((Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBarrelOffset'", NULL);
#endif
  {
   self->setBarrelOffset(location);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFiringBoneName of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_getFiringBoneName00
static int tolua_CenterSpace_WeaponHardpointTemplate_getFiringBoneName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFiringBoneName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getFiringBoneName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFiringBoneName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFiringBoneName of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_setFiringBoneName00
static int tolua_CenterSpace_WeaponHardpointTemplate_setFiringBoneName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string bone = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFiringBoneName'", NULL);
#endif
  {
   self->setFiringBoneName(bone);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFiringBoneName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: instantiate of class  WeaponHardpointTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplate_instantiate00
static int tolua_CenterSpace_WeaponHardpointTemplate_instantiate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplate* self = (WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool useDefaults = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'instantiate'", NULL);
#endif
  {
   WeaponHardpoint* tolua_ret = (WeaponHardpoint*)  self->instantiate(useDefaults);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'instantiate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_new00
static int tolua_CenterSpace_MCUTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  Mtolua_new((MCUTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_new00_local
static int tolua_CenterSpace_MCUTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  Mtolua_new((MCUTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_delete00
static int tolua_CenterSpace_MCUTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultArmor of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultArmor00
static int tolua_CenterSpace_MCUTemplate_getDefaultArmor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultArmor'", NULL);
#endif
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  self->getDefaultArmor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultArmor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultArmor of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultArmor00
static int tolua_CenterSpace_MCUTemplate_setDefaultArmor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  ArmorTemplate* armor = ((ArmorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultArmor'", NULL);
#endif
  {
   self->setDefaultArmor(armor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultArmor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultBattery of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultBattery00
static int tolua_CenterSpace_MCUTemplate_getDefaultBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultBattery'", NULL);
#endif
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  self->getDefaultBattery();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultBattery of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultBattery00
static int tolua_CenterSpace_MCUTemplate_setDefaultBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  BatteryTemplate* battery = ((BatteryTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultBattery'", NULL);
#endif
  {
   self->setDefaultBattery(battery);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultDrive of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultDrive00
static int tolua_CenterSpace_MCUTemplate_getDefaultDrive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultDrive'", NULL);
#endif
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  self->getDefaultDrive();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultDrive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultDrive of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultDrive00
static int tolua_CenterSpace_MCUTemplate_setDefaultDrive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  DriveTemplate* drive = ((DriveTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultDrive'", NULL);
#endif
  {
   self->setDefaultDrive(drive);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultDrive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultReactor of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultReactor00
static int tolua_CenterSpace_MCUTemplate_getDefaultReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultReactor'", NULL);
#endif
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  self->getDefaultReactor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultReactor of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultReactor00
static int tolua_CenterSpace_MCUTemplate_setDefaultReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  ReactorTemplate* reactor = ((ReactorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultReactor'", NULL);
#endif
  {
   self->setDefaultReactor(reactor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultSensorSystem of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultSensorSystem00
static int tolua_CenterSpace_MCUTemplate_getDefaultSensorSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultSensorSystem'", NULL);
#endif
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  self->getDefaultSensorSystem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultSensorSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultSensorSystem of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultSensorSystem00
static int tolua_CenterSpace_MCUTemplate_setDefaultSensorSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  SensorSystemTemplate* sensor = ((SensorSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultSensorSystem'", NULL);
#endif
  {
   self->setDefaultSensorSystem(sensor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultSensorSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultShield of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultShield00
static int tolua_CenterSpace_MCUTemplate_getDefaultShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultShield'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->getDefaultShield();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultShield of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultShield00
static int tolua_CenterSpace_MCUTemplate_setDefaultShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  ShieldTemplate* shield = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultShield'", NULL);
#endif
  {
   self->setDefaultShield(shield);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultTargetingSystemTemplate of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getDefaultTargetingSystemTemplate00
static int tolua_CenterSpace_MCUTemplate_getDefaultTargetingSystemTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultTargetingSystemTemplate'", NULL);
#endif
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  self->getDefaultTargetingSystemTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultTargetingSystemTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultTargetingSystemTemplate of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setDefaultTargetingSystemTemplate00
static int tolua_CenterSpace_MCUTemplate_setDefaultTargetingSystemTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  TargetingSystemTemplate* target = ((TargetingSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultTargetingSystemTemplate'", NULL);
#endif
  {
   self->setDefaultTargetingSystemTemplate(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultTargetingSystemTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHardpoint of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getHardpoint00
static int tolua_CenterSpace_MCUTemplate_getHardpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int hardpoint = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHardpoint'", NULL);
#endif
  {
   WeaponHardpointTemplate* tolua_ret = (WeaponHardpointTemplate*)  self->getHardpoint(hardpoint);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpointTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHardpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addWeaponHardpointTemplate of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_addWeaponHardpointTemplate00
static int tolua_CenterSpace_MCUTemplate_addWeaponHardpointTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpointTemplate* weapon = ((WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addWeaponHardpointTemplate'", NULL);
#endif
  {
   self->addWeaponHardpointTemplate(weapon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addWeaponHardpointTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxArmorSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaxArmorSize00
static int tolua_CenterSpace_MCUTemplate_getMaxArmorSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxArmorSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxArmorSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxArmorSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxArmorSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaxArmorSize00
static int tolua_CenterSpace_MCUTemplate_setMaxArmorSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int max = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxArmorSize'", NULL);
#endif
  {
   self->setMaxArmorSize(max);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxArmorSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxBatterySize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaxBatterySize00
static int tolua_CenterSpace_MCUTemplate_getMaxBatterySize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxBatterySize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxBatterySize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxBatterySize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxBatterySize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaxBatterySize00
static int tolua_CenterSpace_MCUTemplate_setMaxBatterySize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxBatterySize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxBatterySize'", NULL);
#endif
  {
   self->setMaxBatterySize(maxBatterySize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxBatterySize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxDriveSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaxDriveSize00
static int tolua_CenterSpace_MCUTemplate_getMaxDriveSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxDriveSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxDriveSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxDriveSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxDriveSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaxDriveSize00
static int tolua_CenterSpace_MCUTemplate_setMaxDriveSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxDriveSize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxDriveSize'", NULL);
#endif
  {
   self->setMaxDriveSize(maxDriveSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxDriveSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxReactorSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaxReactorSize00
static int tolua_CenterSpace_MCUTemplate_getMaxReactorSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxReactorSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxReactorSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxReactorSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxReactorSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaxReactorSize00
static int tolua_CenterSpace_MCUTemplate_setMaxReactorSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxReactorSize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxReactorSize'", NULL);
#endif
  {
   self->setMaxReactorSize(maxReactorSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxReactorSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxShieldSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaxShieldSize00
static int tolua_CenterSpace_MCUTemplate_getMaxShieldSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxShieldSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxShieldSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxShieldSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxShieldSize of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaxShieldSize00
static int tolua_CenterSpace_MCUTemplate_setMaxShieldSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxShieldSize = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxShieldSize'", NULL);
#endif
  {
   self->setMaxShieldSize(maxShieldSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxShieldSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxComponentSlots of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaxComponentSlots00
static int tolua_CenterSpace_MCUTemplate_getMaxComponentSlots00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxComponentSlots'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMaxComponentSlots();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxComponentSlots'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxComponentSlots of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaxComponentSlots00
static int tolua_CenterSpace_MCUTemplate_setMaxComponentSlots00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int maxComponentSlots = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxComponentSlots'", NULL);
#endif
  {
   self->setMaxComponentSlots(maxComponentSlots);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxComponentSlots'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaterialName of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMaterialName00
static int tolua_CenterSpace_MCUTemplate_getMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaterialName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMaterialName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaterialName of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMaterialName00
static int tolua_CenterSpace_MCUTemplate_setMaterialName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaterialName'", NULL);
#endif
  {
   self->setMaterialName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaterialName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMeshName of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMeshName00
static int tolua_CenterSpace_MCUTemplate_getMeshName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMeshName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMeshName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMeshName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMeshName of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMeshName00
static int tolua_CenterSpace_MCUTemplate_setMeshName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMeshName'", NULL);
#endif
  {
   self->setMeshName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMeshName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationDefinitionTemplate of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getAnimationDefinitionTemplate00
static int tolua_CenterSpace_MCUTemplate_getAnimationDefinitionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationDefinitionTemplate'", NULL);
#endif
  {
   AnimationDefinitionTemplate* tolua_ret = (AnimationDefinitionTemplate*)  self->getAnimationDefinitionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationDefinitionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationDefinitionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationDefinitionTemplate of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setAnimationDefinitionTemplate00
static int tolua_CenterSpace_MCUTemplate_setAnimationDefinitionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  AnimationDefinitionTemplate* anim = ((AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationDefinitionTemplate'", NULL);
#endif
  {
   self->setAnimationDefinitionTemplate(anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationDefinitionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementSpeed of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getMovementSpeed00
static int tolua_CenterSpace_MCUTemplate_getMovementSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMovementSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMovementSpeed of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setMovementSpeed00
static int tolua_CenterSpace_MCUTemplate_setMovementSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMovementSpeed'", NULL);
#endif
  {
   self->setMovementSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMovementSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWalkingAnimationSpeed of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getWalkingAnimationSpeed00
static int tolua_CenterSpace_MCUTemplate_getWalkingAnimationSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWalkingAnimationSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getWalkingAnimationSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWalkingAnimationSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWalkingAnimationSpeed of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_setWalkingAnimationSpeed00
static int tolua_CenterSpace_MCUTemplate_setWalkingAnimationSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWalkingAnimationSpeed'", NULL);
#endif
  {
   self->setWalkingAnimationSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWalkingAnimationSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponsDescription of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getWeaponsDescription00
static int tolua_CenterSpace_MCUTemplate_getWeaponsDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponsDescription'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getWeaponsDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponsDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalCost of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getTotalCost00
static int tolua_CenterSpace_MCUTemplate_getTotalCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalCost'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTotalCost();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_getGuiValues00
static int tolua_CenterSpace_MCUTemplate_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: instantiate of class  MCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplate_instantiate00
static int tolua_CenterSpace_MCUTemplate_instantiate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplate* self = (MCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool useDefaults = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'instantiate'", NULL);
#endif
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  self->instantiate(useDefaults);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'instantiate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_new00
static int tolua_CenterSpace_AnimationDefinitionTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationDefinitionTemplate* tolua_ret = (AnimationDefinitionTemplate*)  Mtolua_new((AnimationDefinitionTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationDefinitionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_new00_local
static int tolua_CenterSpace_AnimationDefinitionTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationDefinitionTemplate* tolua_ret = (AnimationDefinitionTemplate*)  Mtolua_new((AnimationDefinitionTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationDefinitionTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_delete00
static int tolua_CenterSpace_AnimationDefinitionTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWalkAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getWalkAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getWalkAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWalkAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getWalkAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWalkAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWalkAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setWalkAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setWalkAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWalkAnimationName'", NULL);
#endif
  {
   self->setWalkAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWalkAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGetHitAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getGetHitAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getGetHitAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGetHitAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getGetHitAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGetHitAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGetHitAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setGetHitAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setGetHitAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGetHitAnimationName'", NULL);
#endif
  {
   self->setGetHitAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGetHitAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTakeOffAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getTakeOffAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getTakeOffAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTakeOffAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTakeOffAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTakeOffAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTakeOffAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setTakeOffAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setTakeOffAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTakeOffAnimationName'", NULL);
#endif
  {
   self->setTakeOffAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTakeOffAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLandAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getLandAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getLandAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLandAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getLandAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLandAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLandAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setLandAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setLandAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLandAnimationName'", NULL);
#endif
  {
   self->setLandAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLandAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFlyAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getFlyAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getFlyAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFlyAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getFlyAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFlyAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFlyAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setFlyAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setFlyAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFlyAnimationName'", NULL);
#endif
  {
   self->setFlyAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFlyAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIdleAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getIdleAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getIdleAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIdleAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getIdleAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIdleAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIdleAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setIdleAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setIdleAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIdleAnimationName'", NULL);
#endif
  {
   self->setIdleAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIdleAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDeathAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getDeathAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getDeathAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDeathAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getDeathAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDeathAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDeathAnimationName of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setDeathAnimationName00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setDeathAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDeathAnimationName'", NULL);
#endif
  {
   self->setDeathAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDeathAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUTemplate of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getMCUTemplate00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getMCUTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUTemplate'", NULL);
#endif
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  self->getMCUTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUTemplate of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setMCUTemplate00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setMCUTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  MCUTemplate* mcu = ((MCUTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUTemplate'", NULL);
#endif
  {
   self->setMCUTemplate(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNumWeaponAnimations of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getNumWeaponAnimations00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getNumWeaponAnimations00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNumWeaponAnimations'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNumWeaponAnimations();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNumWeaponAnimations'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNumWeaponAnimations of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_setNumWeaponAnimations00
static int tolua_CenterSpace_AnimationDefinitionTemplate_setNumWeaponAnimations00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNumWeaponAnimations'", NULL);
#endif
  {
   self->setNumWeaponAnimations(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNumWeaponAnimations'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponAnimation of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_getWeaponAnimation00
static int tolua_CenterSpace_AnimationDefinitionTemplate_getWeaponAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponAnimation'", NULL);
#endif
  {
   WeaponAnimationTemplate* tolua_ret = (WeaponAnimationTemplate*)  self->getWeaponAnimation(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponAnimationTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addWeaponAnimationTemplate of class  AnimationDefinitionTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplate_addWeaponAnimationTemplate00
static int tolua_CenterSpace_AnimationDefinitionTemplate_addWeaponAnimationTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplate* self = (AnimationDefinitionTemplate*)  tolua_tousertype(tolua_S,1,0);
  int hardpoint = ((int)  tolua_tonumber(tolua_S,2,0));
  WeaponAnimationTemplate* anim = ((WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addWeaponAnimationTemplate'", NULL);
#endif
  {
   self->addWeaponAnimationTemplate(hardpoint,anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addWeaponAnimationTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_new00
static int tolua_CenterSpace_WeaponAnimationTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponAnimationTemplate* tolua_ret = (WeaponAnimationTemplate*)  Mtolua_new((WeaponAnimationTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponAnimationTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_new00_local
static int tolua_CenterSpace_WeaponAnimationTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponAnimationTemplate* tolua_ret = (WeaponAnimationTemplate*)  Mtolua_new((WeaponAnimationTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponAnimationTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_delete00
static int tolua_CenterSpace_WeaponAnimationTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHardpointNumber of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_getHardpointNumber00
static int tolua_CenterSpace_WeaponAnimationTemplate_getHardpointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHardpointNumber'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getHardpointNumber();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHardpointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHardpointNumber of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_setHardpointNumber00
static int tolua_CenterSpace_WeaponAnimationTemplate_setHardpointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHardpointNumber'", NULL);
#endif
  {
   self->setHardpointNumber(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHardpointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasEnterAnimation of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_hasEnterAnimation00
static int tolua_CenterSpace_WeaponAnimationTemplate_hasEnterAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasEnterAnimation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasEnterAnimation();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasEnterAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnterAnimationName of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_getEnterAnimationName00
static int tolua_CenterSpace_WeaponAnimationTemplate_getEnterAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnterAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnterAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnterAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnterAnimationName of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_setEnterAnimationName00
static int tolua_CenterSpace_WeaponAnimationTemplate_setEnterAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnterAnimationName'", NULL);
#endif
  {
   self->setEnterAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnterAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFireAnimationName of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_getFireAnimationName00
static int tolua_CenterSpace_WeaponAnimationTemplate_getFireAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFireAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getFireAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFireAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFireAnimationName of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_setFireAnimationName00
static int tolua_CenterSpace_WeaponAnimationTemplate_setFireAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFireAnimationName'", NULL);
#endif
  {
   self->setFireAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFireAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasExitAnimation of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_hasExitAnimation00
static int tolua_CenterSpace_WeaponAnimationTemplate_hasExitAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasExitAnimation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasExitAnimation();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasExitAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getExitAnimationName of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_getExitAnimationName00
static int tolua_CenterSpace_WeaponAnimationTemplate_getExitAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getExitAnimationName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getExitAnimationName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getExitAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setExitAnimationName of class  WeaponAnimationTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplate_setExitAnimationName00
static int tolua_CenterSpace_WeaponAnimationTemplate_setExitAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplate",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplate* self = (WeaponAnimationTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setExitAnimationName'", NULL);
#endif
  {
   self->setExitAnimationName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setExitAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_new00
static int tolua_CenterSpace_AIMCUTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIMCUTemplate* tolua_ret = (AIMCUTemplate*)  Mtolua_new((AIMCUTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIMCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_new00_local
static int tolua_CenterSpace_AIMCUTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIMCUTemplate* tolua_ret = (AIMCUTemplate*)  Mtolua_new((AIMCUTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIMCUTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_delete00
static int tolua_CenterSpace_AIMCUTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultArmor of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultArmor00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultArmor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultArmor'", NULL);
#endif
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  self->getDefaultArmor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultArmor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultArmor of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultArmor00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultArmor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  ArmorTemplate* armor = ((ArmorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultArmor'", NULL);
#endif
  {
   self->setDefaultArmor(armor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultArmor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultBattery of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultBattery00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultBattery'", NULL);
#endif
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  self->getDefaultBattery();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultBattery of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultBattery00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  BatteryTemplate* battery = ((BatteryTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultBattery'", NULL);
#endif
  {
   self->setDefaultBattery(battery);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultDrive of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultDrive00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultDrive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultDrive'", NULL);
#endif
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  self->getDefaultDrive();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultDrive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultDrive of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultDrive00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultDrive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  DriveTemplate* drive = ((DriveTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultDrive'", NULL);
#endif
  {
   self->setDefaultDrive(drive);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultDrive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultReactor of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultReactor00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultReactor'", NULL);
#endif
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  self->getDefaultReactor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultReactor of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultReactor00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  ReactorTemplate* reactor = ((ReactorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultReactor'", NULL);
#endif
  {
   self->setDefaultReactor(reactor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultSensorSystem of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultSensorSystem00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultSensorSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultSensorSystem'", NULL);
#endif
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  self->getDefaultSensorSystem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultSensorSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultSensorSystem of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultSensorSystem00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultSensorSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  SensorSystemTemplate* sensor = ((SensorSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultSensorSystem'", NULL);
#endif
  {
   self->setDefaultSensorSystem(sensor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultSensorSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultShield of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultShield00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultShield'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->getDefaultShield();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultShield of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultShield00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  ShieldTemplate* shield = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultShield'", NULL);
#endif
  {
   self->setDefaultShield(shield);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDefaultTargetingSystem of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getDefaultTargetingSystem00
static int tolua_CenterSpace_AIMCUTemplate_getDefaultTargetingSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDefaultTargetingSystem'", NULL);
#endif
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  self->getDefaultTargetingSystem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDefaultTargetingSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultTargetingSystem of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setDefaultTargetingSystem00
static int tolua_CenterSpace_AIMCUTemplate_setDefaultTargetingSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  TargetingSystemTemplate* target = ((TargetingSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultTargetingSystem'", NULL);
#endif
  {
   self->setDefaultTargetingSystem(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultTargetingSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getFactionTemplate00
static int tolua_CenterSpace_AIMCUTemplate_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setFactionTemplate00
static int tolua_CenterSpace_AIMCUTemplate_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUTemplate of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_getMCUTemplate00
static int tolua_CenterSpace_AIMCUTemplate_getMCUTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUTemplate'", NULL);
#endif
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  self->getMCUTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUTemplate of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setMCUTemplate00
static int tolua_CenterSpace_AIMCUTemplate_setMCUTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  MCUTemplate* mcu = ((MCUTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUTemplate'", NULL);
#endif
  {
   self->setMCUTemplate(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeapon of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_setWeapon00
static int tolua_CenterSpace_AIMCUTemplate_setWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  int slot = ((int)  tolua_tonumber(tolua_S,2,0));
  WeaponTemplate* weapon = ((WeaponTemplate*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeapon'", NULL);
#endif
  {
   self->setWeapon(slot,weapon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: instantiate of class  AIMCUTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplate_instantiate00
static int tolua_CenterSpace_AIMCUTemplate_instantiate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplate* self = (AIMCUTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool useDefaults = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'instantiate'", NULL);
#endif
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  self->instantiate(useDefaults);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'instantiate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_new00
static int tolua_CenterSpace_AIGroupTemplate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIGroupTemplate* tolua_ret = (AIGroupTemplate*)  Mtolua_new((AIGroupTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_new00_local
static int tolua_CenterSpace_AIGroupTemplate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIGroupTemplate* tolua_ret = (AIGroupTemplate*)  Mtolua_new((AIGroupTemplate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_delete00
static int tolua_CenterSpace_AIGroupTemplate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIMCUs of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_getAIMCUs00
static int tolua_CenterSpace_AIGroupTemplate_getAIMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIMCUs'", NULL);
#endif
  {
   std::deque<std::pair<int,AIMCUTemplate*> >& tolua_ret = (std::deque<std::pair<int,AIMCUTemplate*> >&)  self->getAIMCUs();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<std::pair<int,AIMCUTemplate*> >");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAIMCUs of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_setAIMCUs00
static int tolua_CenterSpace_AIGroupTemplate_setAIMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<std::pair<int,AIMCUTemplate*> >",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::deque<std::pair<int,AIMCUTemplate*> >* mcus = ((std::deque<std::pair<int,AIMCUTemplate*> >*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAIMCUs'", NULL);
#endif
  {
   self->setAIMCUs(*mcus);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAIMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAIMCU of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_addAIMCU00
static int tolua_CenterSpace_AIGroupTemplate_addAIMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
  int count = ((int)  tolua_tonumber(tolua_S,2,0));
  AIMCUTemplate* mcu = ((AIMCUTemplate*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAIMCU'", NULL);
#endif
  {
   self->addAIMCU(count,mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAIMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAIMCU of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_addAIMCU01
static int tolua_CenterSpace_AIGroupTemplate_addAIMCU01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::pair<int,AIMCUTemplate*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
  std::pair<int,AIMCUTemplate*> mcu = *((std::pair<int,AIMCUTemplate*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAIMCU'", NULL);
#endif
  {
   self->addAIMCU(mcu);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_AIGroupTemplate_addAIMCU00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_getType00
static int tolua_CenterSpace_AIGroupTemplate_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'", NULL);
#endif
  {
   AIGroupTemplate::AIGroupType tolua_ret = (AIGroupTemplate::AIGroupType)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setType of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_setType00
static int tolua_CenterSpace_AIGroupTemplate_setType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
  AIGroupTemplate::AIGroupType type = ((AIGroupTemplate::AIGroupType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setType'", NULL);
#endif
  {
   self->setType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setType of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_setType01
static int tolua_CenterSpace_AIGroupTemplate_setType01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
  int type = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setType'", NULL);
#endif
  {
   self->setType(type);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_AIGroupTemplate_setType00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUs of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_getMCUs00
static int tolua_CenterSpace_AIGroupTemplate_getMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUs'", NULL);
#endif
  {
   std::deque<MechanizedCombatUnit*>& tolua_ret = (std::deque<MechanizedCombatUnit*>&)  self->getMCUs();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<MechanizedCombatUnit*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_getFactionTemplate00
static int tolua_CenterSpace_AIGroupTemplate_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_setFactionTemplate00
static int tolua_CenterSpace_AIGroupTemplate_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSize of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_getSize00
static int tolua_CenterSpace_AIGroupTemplate_getSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSize'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStrength of class  AIGroupTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplate_getStrength00
static int tolua_CenterSpace_AIGroupTemplate_getStrength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplate* self = (AIGroupTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStrength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getStrength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStrength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<AIGroupTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIGroupTemplate__at00
static int tolua_CenterSpace_Repository_AIGroupTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIGroupTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIGroupTemplate>* self = (Repository<AIGroupTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   AIGroupTemplate* tolua_ret = (AIGroupTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<AIGroupTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIGroupTemplate__findByName00
static int tolua_CenterSpace_Repository_AIGroupTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIGroupTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIGroupTemplate>* self = (Repository<AIGroupTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   AIGroupTemplate* tolua_ret = (AIGroupTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<AIGroupTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIGroupTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_AIGroupTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIGroupTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIGroupTemplate>* self = (Repository<AIGroupTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   AIGroupTemplate* tolua_ret = (AIGroupTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<AIGroupTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIGroupTemplate__size00
static int tolua_CenterSpace_Repository_AIGroupTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIGroupTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIGroupTemplate>* self = (Repository<AIGroupTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<AIGroupTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIGroupTemplate__getNextId00
static int tolua_CenterSpace_Repository_AIGroupTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIGroupTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIGroupTemplate>* self = (Repository<AIGroupTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<AIGroupTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIGroupTemplate__add00
static int tolua_CenterSpace_Repository_AIGroupTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIGroupTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIGroupTemplate>* self = (Repository<AIGroupTemplate>*)  tolua_tousertype(tolua_S,1,0);
  AIGroupTemplate* tolua_var_1 = ((AIGroupTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_1);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<AIMCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIMCUTemplate__at00
static int tolua_CenterSpace_Repository_AIMCUTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIMCUTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIMCUTemplate>* self = (Repository<AIMCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   AIMCUTemplate* tolua_ret = (AIMCUTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIMCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<AIMCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIMCUTemplate__findByName00
static int tolua_CenterSpace_Repository_AIMCUTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIMCUTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIMCUTemplate>* self = (Repository<AIMCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   AIMCUTemplate* tolua_ret = (AIMCUTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIMCUTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<AIMCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIMCUTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_AIMCUTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIMCUTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIMCUTemplate>* self = (Repository<AIMCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   AIMCUTemplate* tolua_ret = (AIMCUTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIMCUTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<AIMCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIMCUTemplate__size00
static int tolua_CenterSpace_Repository_AIMCUTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIMCUTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIMCUTemplate>* self = (Repository<AIMCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<AIMCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIMCUTemplate__getNextId00
static int tolua_CenterSpace_Repository_AIMCUTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIMCUTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIMCUTemplate>* self = (Repository<AIMCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<AIMCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_AIMCUTemplate__add00
static int tolua_CenterSpace_Repository_AIMCUTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<AIMCUTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIMCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<AIMCUTemplate>* self = (Repository<AIMCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  AIMCUTemplate* tolua_var_2 = ((AIMCUTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<ArmorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ArmorTemplate__at00
static int tolua_CenterSpace_Repository_ArmorTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ArmorTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ArmorTemplate>* self = (Repository<ArmorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<ArmorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ArmorTemplate__findByName00
static int tolua_CenterSpace_Repository_ArmorTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ArmorTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ArmorTemplate>* self = (Repository<ArmorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<ArmorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ArmorTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_ArmorTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ArmorTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ArmorTemplate>* self = (Repository<ArmorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<ArmorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ArmorTemplate__size00
static int tolua_CenterSpace_Repository_ArmorTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ArmorTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ArmorTemplate>* self = (Repository<ArmorTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<ArmorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ArmorTemplate__getNextId00
static int tolua_CenterSpace_Repository_ArmorTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ArmorTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ArmorTemplate>* self = (Repository<ArmorTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<ArmorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ArmorTemplate__add00
static int tolua_CenterSpace_Repository_ArmorTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ArmorTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ArmorTemplate>* self = (Repository<ArmorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  ArmorTemplate* tolua_var_3 = ((ArmorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_3);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<BatteryTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BatteryTemplate__at00
static int tolua_CenterSpace_Repository_BatteryTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BatteryTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BatteryTemplate>* self = (Repository<BatteryTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<BatteryTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BatteryTemplate__findByName00
static int tolua_CenterSpace_Repository_BatteryTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BatteryTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BatteryTemplate>* self = (Repository<BatteryTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<BatteryTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BatteryTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_BatteryTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BatteryTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BatteryTemplate>* self = (Repository<BatteryTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<BatteryTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BatteryTemplate__size00
static int tolua_CenterSpace_Repository_BatteryTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BatteryTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BatteryTemplate>* self = (Repository<BatteryTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<BatteryTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BatteryTemplate__getNextId00
static int tolua_CenterSpace_Repository_BatteryTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BatteryTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BatteryTemplate>* self = (Repository<BatteryTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<BatteryTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BatteryTemplate__add00
static int tolua_CenterSpace_Repository_BatteryTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BatteryTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BatteryTemplate>* self = (Repository<BatteryTemplate>*)  tolua_tousertype(tolua_S,1,0);
  BatteryTemplate* tolua_var_4 = ((BatteryTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_4);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<BattlefieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BattlefieldTemplate__at00
static int tolua_CenterSpace_Repository_BattlefieldTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BattlefieldTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BattlefieldTemplate>* self = (Repository<BattlefieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   BattlefieldTemplate* tolua_ret = (BattlefieldTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<BattlefieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BattlefieldTemplate__findByName00
static int tolua_CenterSpace_Repository_BattlefieldTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BattlefieldTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BattlefieldTemplate>* self = (Repository<BattlefieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   BattlefieldTemplate* tolua_ret = (BattlefieldTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<BattlefieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BattlefieldTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_BattlefieldTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BattlefieldTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BattlefieldTemplate>* self = (Repository<BattlefieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   BattlefieldTemplate* tolua_ret = (BattlefieldTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<BattlefieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BattlefieldTemplate__size00
static int tolua_CenterSpace_Repository_BattlefieldTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BattlefieldTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BattlefieldTemplate>* self = (Repository<BattlefieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<BattlefieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BattlefieldTemplate__getNextId00
static int tolua_CenterSpace_Repository_BattlefieldTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BattlefieldTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BattlefieldTemplate>* self = (Repository<BattlefieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<BattlefieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BattlefieldTemplate__add00
static int tolua_CenterSpace_Repository_BattlefieldTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BattlefieldTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BattlefieldTemplate>* self = (Repository<BattlefieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldTemplate* tolua_var_5 = ((BattlefieldTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_5);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<BeamProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BeamProjectileTemplate__at00
static int tolua_CenterSpace_Repository_BeamProjectileTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BeamProjectileTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BeamProjectileTemplate>* self = (Repository<BeamProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   BeamProjectileTemplate* tolua_ret = (BeamProjectileTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<BeamProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BeamProjectileTemplate__findByName00
static int tolua_CenterSpace_Repository_BeamProjectileTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BeamProjectileTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BeamProjectileTemplate>* self = (Repository<BeamProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   BeamProjectileTemplate* tolua_ret = (BeamProjectileTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<BeamProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BeamProjectileTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_BeamProjectileTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BeamProjectileTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BeamProjectileTemplate>* self = (Repository<BeamProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   BeamProjectileTemplate* tolua_ret = (BeamProjectileTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<BeamProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BeamProjectileTemplate__size00
static int tolua_CenterSpace_Repository_BeamProjectileTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BeamProjectileTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BeamProjectileTemplate>* self = (Repository<BeamProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<BeamProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BeamProjectileTemplate__getNextId00
static int tolua_CenterSpace_Repository_BeamProjectileTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BeamProjectileTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BeamProjectileTemplate>* self = (Repository<BeamProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<BeamProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_BeamProjectileTemplate__add00
static int tolua_CenterSpace_Repository_BeamProjectileTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<BeamProjectileTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BeamProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<BeamProjectileTemplate>* self = (Repository<BeamProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  BeamProjectileTemplate* tolua_var_6 = ((BeamProjectileTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_6);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<DriveTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_DriveTemplate__at00
static int tolua_CenterSpace_Repository_DriveTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<DriveTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<DriveTemplate>* self = (Repository<DriveTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<DriveTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_DriveTemplate__findByName00
static int tolua_CenterSpace_Repository_DriveTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<DriveTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<DriveTemplate>* self = (Repository<DriveTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<DriveTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_DriveTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_DriveTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<DriveTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<DriveTemplate>* self = (Repository<DriveTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<DriveTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_DriveTemplate__size00
static int tolua_CenterSpace_Repository_DriveTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<DriveTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<DriveTemplate>* self = (Repository<DriveTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<DriveTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_DriveTemplate__getNextId00
static int tolua_CenterSpace_Repository_DriveTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<DriveTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<DriveTemplate>* self = (Repository<DriveTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<DriveTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_DriveTemplate__add00
static int tolua_CenterSpace_Repository_DriveTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<DriveTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<DriveTemplate>* self = (Repository<DriveTemplate>*)  tolua_tousertype(tolua_S,1,0);
  DriveTemplate* tolua_var_7 = ((DriveTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_7);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<FactionHubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionHubTemplate__at00
static int tolua_CenterSpace_Repository_FactionHubTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionHubTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionHubTemplate>* self = (Repository<FactionHubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<FactionHubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionHubTemplate__findByName00
static int tolua_CenterSpace_Repository_FactionHubTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionHubTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionHubTemplate>* self = (Repository<FactionHubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<FactionHubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionHubTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_FactionHubTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionHubTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionHubTemplate>* self = (Repository<FactionHubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<FactionHubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionHubTemplate__size00
static int tolua_CenterSpace_Repository_FactionHubTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionHubTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionHubTemplate>* self = (Repository<FactionHubTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<FactionHubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionHubTemplate__getNextId00
static int tolua_CenterSpace_Repository_FactionHubTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionHubTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionHubTemplate>* self = (Repository<FactionHubTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<FactionHubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionHubTemplate__add00
static int tolua_CenterSpace_Repository_FactionHubTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionHubTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionHubTemplate>* self = (Repository<FactionHubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  FactionHubTemplate* tolua_var_8 = ((FactionHubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_8);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<FactionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionTemplate__at00
static int tolua_CenterSpace_Repository_FactionTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionTemplate>* self = (Repository<FactionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<FactionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionTemplate__findByName00
static int tolua_CenterSpace_Repository_FactionTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionTemplate>* self = (Repository<FactionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<FactionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_FactionTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionTemplate>* self = (Repository<FactionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<FactionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionTemplate__size00
static int tolua_CenterSpace_Repository_FactionTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionTemplate>* self = (Repository<FactionTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<FactionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionTemplate__getNextId00
static int tolua_CenterSpace_Repository_FactionTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionTemplate>* self = (Repository<FactionTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<FactionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_FactionTemplate__add00
static int tolua_CenterSpace_Repository_FactionTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<FactionTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<FactionTemplate>* self = (Repository<FactionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* tolua_var_9 = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_9);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<HubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_HubTemplate__at00
static int tolua_CenterSpace_Repository_HubTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<HubTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<HubTemplate>* self = (Repository<HubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   HubTemplate* tolua_ret = (HubTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<HubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_HubTemplate__findByName00
static int tolua_CenterSpace_Repository_HubTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<HubTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<HubTemplate>* self = (Repository<HubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   HubTemplate* tolua_ret = (HubTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<HubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_HubTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_HubTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<HubTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<HubTemplate>* self = (Repository<HubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   HubTemplate* tolua_ret = (HubTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<HubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_HubTemplate__size00
static int tolua_CenterSpace_Repository_HubTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<HubTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<HubTemplate>* self = (Repository<HubTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<HubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_HubTemplate__getNextId00
static int tolua_CenterSpace_Repository_HubTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<HubTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<HubTemplate>* self = (Repository<HubTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<HubTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_HubTemplate__add00
static int tolua_CenterSpace_Repository_HubTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<HubTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"HubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<HubTemplate>* self = (Repository<HubTemplate>*)  tolua_tousertype(tolua_S,1,0);
  HubTemplate* tolua_var_10 = ((HubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_10);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<MCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_MCUTemplate__at00
static int tolua_CenterSpace_Repository_MCUTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<MCUTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<MCUTemplate>* self = (Repository<MCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<MCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_MCUTemplate__findByName00
static int tolua_CenterSpace_Repository_MCUTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<MCUTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<MCUTemplate>* self = (Repository<MCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<MCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_MCUTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_MCUTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<MCUTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<MCUTemplate>* self = (Repository<MCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<MCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_MCUTemplate__size00
static int tolua_CenterSpace_Repository_MCUTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<MCUTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<MCUTemplate>* self = (Repository<MCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<MCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_MCUTemplate__getNextId00
static int tolua_CenterSpace_Repository_MCUTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<MCUTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<MCUTemplate>* self = (Repository<MCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<MCUTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_MCUTemplate__add00
static int tolua_CenterSpace_Repository_MCUTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<MCUTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<MCUTemplate>* self = (Repository<MCUTemplate>*)  tolua_tousertype(tolua_S,1,0);
  MCUTemplate* tolua_var_11 = ((MCUTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_11);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<PhysicalProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_PhysicalProjectileTemplate__at00
static int tolua_CenterSpace_Repository_PhysicalProjectileTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<PhysicalProjectileTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<PhysicalProjectileTemplate>* self = (Repository<PhysicalProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   PhysicalProjectileTemplate* tolua_ret = (PhysicalProjectileTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<PhysicalProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_PhysicalProjectileTemplate__findByName00
static int tolua_CenterSpace_Repository_PhysicalProjectileTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<PhysicalProjectileTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<PhysicalProjectileTemplate>* self = (Repository<PhysicalProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   PhysicalProjectileTemplate* tolua_ret = (PhysicalProjectileTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<PhysicalProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_PhysicalProjectileTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_PhysicalProjectileTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<PhysicalProjectileTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<PhysicalProjectileTemplate>* self = (Repository<PhysicalProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   PhysicalProjectileTemplate* tolua_ret = (PhysicalProjectileTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<PhysicalProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_PhysicalProjectileTemplate__size00
static int tolua_CenterSpace_Repository_PhysicalProjectileTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<PhysicalProjectileTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<PhysicalProjectileTemplate>* self = (Repository<PhysicalProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<PhysicalProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_PhysicalProjectileTemplate__getNextId00
static int tolua_CenterSpace_Repository_PhysicalProjectileTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<PhysicalProjectileTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<PhysicalProjectileTemplate>* self = (Repository<PhysicalProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<PhysicalProjectileTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_PhysicalProjectileTemplate__add00
static int tolua_CenterSpace_Repository_PhysicalProjectileTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<PhysicalProjectileTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PhysicalProjectileTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<PhysicalProjectileTemplate>* self = (Repository<PhysicalProjectileTemplate>*)  tolua_tousertype(tolua_S,1,0);
  PhysicalProjectileTemplate* tolua_var_12 = ((PhysicalProjectileTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_12);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<RandomMissionTypeTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_RandomMissionTypeTemplate__at00
static int tolua_CenterSpace_Repository_RandomMissionTypeTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<RandomMissionTypeTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<RandomMissionTypeTemplate>* self = (Repository<RandomMissionTypeTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   RandomMissionTypeTemplate* tolua_ret = (RandomMissionTypeTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<RandomMissionTypeTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_RandomMissionTypeTemplate__findByName00
static int tolua_CenterSpace_Repository_RandomMissionTypeTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<RandomMissionTypeTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<RandomMissionTypeTemplate>* self = (Repository<RandomMissionTypeTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   RandomMissionTypeTemplate* tolua_ret = (RandomMissionTypeTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<RandomMissionTypeTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_RandomMissionTypeTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_RandomMissionTypeTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<RandomMissionTypeTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<RandomMissionTypeTemplate>* self = (Repository<RandomMissionTypeTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   RandomMissionTypeTemplate* tolua_ret = (RandomMissionTypeTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<RandomMissionTypeTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_RandomMissionTypeTemplate__size00
static int tolua_CenterSpace_Repository_RandomMissionTypeTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<RandomMissionTypeTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<RandomMissionTypeTemplate>* self = (Repository<RandomMissionTypeTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<RandomMissionTypeTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_RandomMissionTypeTemplate__getNextId00
static int tolua_CenterSpace_Repository_RandomMissionTypeTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<RandomMissionTypeTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<RandomMissionTypeTemplate>* self = (Repository<RandomMissionTypeTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<RandomMissionTypeTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_RandomMissionTypeTemplate__add00
static int tolua_CenterSpace_Repository_RandomMissionTypeTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<RandomMissionTypeTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<RandomMissionTypeTemplate>* self = (Repository<RandomMissionTypeTemplate>*)  tolua_tousertype(tolua_S,1,0);
  RandomMissionTypeTemplate* tolua_var_13 = ((RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_13);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<ReactorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ReactorTemplate__at00
static int tolua_CenterSpace_Repository_ReactorTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ReactorTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ReactorTemplate>* self = (Repository<ReactorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<ReactorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ReactorTemplate__findByName00
static int tolua_CenterSpace_Repository_ReactorTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ReactorTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ReactorTemplate>* self = (Repository<ReactorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<ReactorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ReactorTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_ReactorTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ReactorTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ReactorTemplate>* self = (Repository<ReactorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<ReactorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ReactorTemplate__size00
static int tolua_CenterSpace_Repository_ReactorTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ReactorTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ReactorTemplate>* self = (Repository<ReactorTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<ReactorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ReactorTemplate__getNextId00
static int tolua_CenterSpace_Repository_ReactorTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ReactorTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ReactorTemplate>* self = (Repository<ReactorTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<ReactorTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ReactorTemplate__add00
static int tolua_CenterSpace_Repository_ReactorTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ReactorTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ReactorTemplate>* self = (Repository<ReactorTemplate>*)  tolua_tousertype(tolua_S,1,0);
  ReactorTemplate* tolua_var_14 = ((ReactorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_14);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<SensorSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_SensorSystemTemplate__at00
static int tolua_CenterSpace_Repository_SensorSystemTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<SensorSystemTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<SensorSystemTemplate>* self = (Repository<SensorSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<SensorSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_SensorSystemTemplate__findByName00
static int tolua_CenterSpace_Repository_SensorSystemTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<SensorSystemTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<SensorSystemTemplate>* self = (Repository<SensorSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<SensorSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_SensorSystemTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_SensorSystemTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<SensorSystemTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<SensorSystemTemplate>* self = (Repository<SensorSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<SensorSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_SensorSystemTemplate__size00
static int tolua_CenterSpace_Repository_SensorSystemTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<SensorSystemTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<SensorSystemTemplate>* self = (Repository<SensorSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<SensorSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_SensorSystemTemplate__getNextId00
static int tolua_CenterSpace_Repository_SensorSystemTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<SensorSystemTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<SensorSystemTemplate>* self = (Repository<SensorSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<SensorSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_SensorSystemTemplate__add00
static int tolua_CenterSpace_Repository_SensorSystemTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<SensorSystemTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<SensorSystemTemplate>* self = (Repository<SensorSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  SensorSystemTemplate* tolua_var_15 = ((SensorSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_15);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<ShieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ShieldTemplate__at00
static int tolua_CenterSpace_Repository_ShieldTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ShieldTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ShieldTemplate>* self = (Repository<ShieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<ShieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ShieldTemplate__findByName00
static int tolua_CenterSpace_Repository_ShieldTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ShieldTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ShieldTemplate>* self = (Repository<ShieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<ShieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ShieldTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_ShieldTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ShieldTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ShieldTemplate>* self = (Repository<ShieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<ShieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ShieldTemplate__size00
static int tolua_CenterSpace_Repository_ShieldTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ShieldTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ShieldTemplate>* self = (Repository<ShieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<ShieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ShieldTemplate__getNextId00
static int tolua_CenterSpace_Repository_ShieldTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ShieldTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ShieldTemplate>* self = (Repository<ShieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<ShieldTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_ShieldTemplate__add00
static int tolua_CenterSpace_Repository_ShieldTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<ShieldTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<ShieldTemplate>* self = (Repository<ShieldTemplate>*)  tolua_tousertype(tolua_S,1,0);
  ShieldTemplate* tolua_var_16 = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_16);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<StoryMissionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_StoryMissionTemplate__at00
static int tolua_CenterSpace_Repository_StoryMissionTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<StoryMissionTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<StoryMissionTemplate>* self = (Repository<StoryMissionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   StoryMissionTemplate* tolua_ret = (StoryMissionTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StoryMissionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<StoryMissionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_StoryMissionTemplate__findByName00
static int tolua_CenterSpace_Repository_StoryMissionTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<StoryMissionTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<StoryMissionTemplate>* self = (Repository<StoryMissionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   StoryMissionTemplate* tolua_ret = (StoryMissionTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StoryMissionTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<StoryMissionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_StoryMissionTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_StoryMissionTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<StoryMissionTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<StoryMissionTemplate>* self = (Repository<StoryMissionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   StoryMissionTemplate* tolua_ret = (StoryMissionTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StoryMissionTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<StoryMissionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_StoryMissionTemplate__size00
static int tolua_CenterSpace_Repository_StoryMissionTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<StoryMissionTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<StoryMissionTemplate>* self = (Repository<StoryMissionTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<StoryMissionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_StoryMissionTemplate__getNextId00
static int tolua_CenterSpace_Repository_StoryMissionTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<StoryMissionTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<StoryMissionTemplate>* self = (Repository<StoryMissionTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<StoryMissionTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_StoryMissionTemplate__add00
static int tolua_CenterSpace_Repository_StoryMissionTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<StoryMissionTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<StoryMissionTemplate>* self = (Repository<StoryMissionTemplate>*)  tolua_tousertype(tolua_S,1,0);
  StoryMissionTemplate* tolua_var_17 = ((StoryMissionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_17);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<TargetingSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TargetingSystemTemplate__at00
static int tolua_CenterSpace_Repository_TargetingSystemTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TargetingSystemTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TargetingSystemTemplate>* self = (Repository<TargetingSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<TargetingSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TargetingSystemTemplate__findByName00
static int tolua_CenterSpace_Repository_TargetingSystemTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TargetingSystemTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TargetingSystemTemplate>* self = (Repository<TargetingSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<TargetingSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TargetingSystemTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_TargetingSystemTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TargetingSystemTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TargetingSystemTemplate>* self = (Repository<TargetingSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<TargetingSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TargetingSystemTemplate__size00
static int tolua_CenterSpace_Repository_TargetingSystemTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TargetingSystemTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TargetingSystemTemplate>* self = (Repository<TargetingSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<TargetingSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TargetingSystemTemplate__getNextId00
static int tolua_CenterSpace_Repository_TargetingSystemTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TargetingSystemTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TargetingSystemTemplate>* self = (Repository<TargetingSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<TargetingSystemTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TargetingSystemTemplate__add00
static int tolua_CenterSpace_Repository_TargetingSystemTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TargetingSystemTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TargetingSystemTemplate>* self = (Repository<TargetingSystemTemplate>*)  tolua_tousertype(tolua_S,1,0);
  TargetingSystemTemplate* tolua_var_18 = ((TargetingSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_18);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<TerrainTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TerrainTemplate__at00
static int tolua_CenterSpace_Repository_TerrainTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TerrainTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TerrainTemplate>* self = (Repository<TerrainTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<TerrainTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TerrainTemplate__findByName00
static int tolua_CenterSpace_Repository_TerrainTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TerrainTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TerrainTemplate>* self = (Repository<TerrainTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<TerrainTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TerrainTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_TerrainTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TerrainTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TerrainTemplate>* self = (Repository<TerrainTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<TerrainTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TerrainTemplate__size00
static int tolua_CenterSpace_Repository_TerrainTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TerrainTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TerrainTemplate>* self = (Repository<TerrainTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<TerrainTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TerrainTemplate__getNextId00
static int tolua_CenterSpace_Repository_TerrainTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TerrainTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TerrainTemplate>* self = (Repository<TerrainTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<TerrainTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_TerrainTemplate__add00
static int tolua_CenterSpace_Repository_TerrainTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<TerrainTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<TerrainTemplate>* self = (Repository<TerrainTemplate>*)  tolua_tousertype(tolua_S,1,0);
  TerrainTemplate* tolua_var_19 = ((TerrainTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_19);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: at of class  Repository<WeaponTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_WeaponTemplate__at00
static int tolua_CenterSpace_Repository_WeaponTemplate__at00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<WeaponTemplate>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<WeaponTemplate>* self = (Repository<WeaponTemplate>*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'at'", NULL);
#endif
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  self->at(n);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'at'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByName of class  Repository<WeaponTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_WeaponTemplate__findByName00
static int tolua_CenterSpace_Repository_WeaponTemplate__findByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<WeaponTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<WeaponTemplate>* self = (Repository<WeaponTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByName'", NULL);
#endif
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  self->findByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findByNameOrID of class  Repository<WeaponTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_WeaponTemplate__findByNameOrID00
static int tolua_CenterSpace_Repository_WeaponTemplate__findByNameOrID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<WeaponTemplate>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<WeaponTemplate>* self = (Repository<WeaponTemplate>*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findByNameOrID'", NULL);
#endif
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  self->findByNameOrID(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findByNameOrID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: size of class  Repository<WeaponTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_WeaponTemplate__size00
static int tolua_CenterSpace_Repository_WeaponTemplate__size00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<WeaponTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<WeaponTemplate>* self = (Repository<WeaponTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'size'", NULL);
#endif
  {
   int tolua_ret = (int)  self->size();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'size'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextId of class  Repository<WeaponTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_WeaponTemplate__getNextId00
static int tolua_CenterSpace_Repository_WeaponTemplate__getNextId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<WeaponTemplate>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<WeaponTemplate>* self = (Repository<WeaponTemplate>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: add of class  Repository<WeaponTemplate> */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Repository_WeaponTemplate__add00
static int tolua_CenterSpace_Repository_WeaponTemplate__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Repository<WeaponTemplate>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Repository<WeaponTemplate>* self = (Repository<WeaponTemplate>*)  tolua_tousertype(tolua_S,1,0);
  WeaponTemplate* tolua_var_20 = ((WeaponTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'add'", NULL);
#endif
  {
   int tolua_ret = (int)  self->add(tolua_var_20);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  BeamProjectileTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_BeamProjectileTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BeamProjectileTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BeamProjectileTemplateRepository* tolua_ret = (BeamProjectileTemplateRepository*)  BeamProjectileTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BeamProjectileTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplateRepository_delete00
static int tolua_CenterSpace_BeamProjectileTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplateRepository* self = (BeamProjectileTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  PhysicalProjectileTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_PhysicalProjectileTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PhysicalProjectileTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PhysicalProjectileTemplateRepository* tolua_ret = (PhysicalProjectileTemplateRepository*)  PhysicalProjectileTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PhysicalProjectileTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplateRepository_delete00
static int tolua_CenterSpace_PhysicalProjectileTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplateRepository* self = (PhysicalProjectileTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  AIGroupTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_AIGroupTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIGroupTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIGroupTemplateRepository* tolua_ret = (AIGroupTemplateRepository*)  AIGroupTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AIGroupTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplateRepository_delete00
static int tolua_CenterSpace_AIGroupTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplateRepository* self = (AIGroupTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableAIGroupTemplates of class  AIGroupTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates00
static int tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplateRepository* self = (AIGroupTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableAIGroupTemplates'", NULL);
#endif
  {
   std::deque<AIGroupTemplate*>& tolua_ret = (std::deque<AIGroupTemplate*>&)  self->getAvailableAIGroupTemplates(factionId,rank);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<AIGroupTemplate*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableAIGroupTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableAIGroupTemplates of class  AIGroupTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates01
static int tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroupTemplateRepository* self = (AIGroupTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  AIGroupTemplate::AIGroupType type = ((AIGroupTemplate::AIGroupType) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableAIGroupTemplates'", NULL);
#endif
  {
   std::deque<AIGroupTemplate*>& tolua_ret = (std::deque<AIGroupTemplate*>&)  self->getAvailableAIGroupTemplates(factionId,rank,type);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<AIGroupTemplate*>");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRandomAIGroupTemplate of class  AIGroupTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplateRepository_getRandomAIGroupTemplate00
static int tolua_CenterSpace_AIGroupTemplateRepository_getRandomAIGroupTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplateRepository* self = (AIGroupTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRandomAIGroupTemplate'", NULL);
#endif
  {
   AIGroupTemplate* tolua_ret = (AIGroupTemplate*)  self->getRandomAIGroupTemplate(factionId,rank);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroupTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRandomAIGroupTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  AIMCUTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_AIMCUTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIMCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIMCUTemplateRepository* tolua_ret = (AIMCUTemplateRepository*)  AIMCUTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIMCUTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AIMCUTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplateRepository_delete00
static int tolua_CenterSpace_AIMCUTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplateRepository* self = (AIMCUTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableAIMCUTemplates of class  AIMCUTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplateRepository_getAvailableAIMCUTemplates00
static int tolua_CenterSpace_AIMCUTemplateRepository_getAvailableAIMCUTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplateRepository* self = (AIMCUTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableAIMCUTemplates'", NULL);
#endif
  {
   std::vector<AIMCUTemplate*> tolua_ret = (std::vector<AIMCUTemplate*>)  self->getAvailableAIMCUTemplates(factionId,rank);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<AIMCUTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<AIMCUTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<AIMCUTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<AIMCUTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableAIMCUTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  ArmorTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_ArmorTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ArmorTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ArmorTemplateRepository* tolua_ret = (ArmorTemplateRepository*)  ArmorTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ArmorTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplateRepository_delete00
static int tolua_CenterSpace_ArmorTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplateRepository* self = (ArmorTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  ArmorTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_ArmorTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplateRepository* self = (ArmorTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<ArmorTemplate*> tolua_ret = (std::vector<ArmorTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<ArmorTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<ArmorTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<ArmorTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<ArmorTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  BatteryTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_BatteryTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BatteryTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BatteryTemplateRepository* tolua_ret = (BatteryTemplateRepository*)  BatteryTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BatteryTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplateRepository_delete00
static int tolua_CenterSpace_BatteryTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BatteryTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BatteryTemplateRepository* self = (BatteryTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  BatteryTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_BatteryTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BatteryTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BatteryTemplateRepository* self = (BatteryTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<BatteryTemplate*> tolua_ret = (std::vector<BatteryTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<BatteryTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<BatteryTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<BatteryTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<BatteryTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  DriveTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_DriveTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"DriveTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   DriveTemplateRepository* tolua_ret = (DriveTemplateRepository*)  DriveTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  DriveTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplateRepository_delete00
static int tolua_CenterSpace_DriveTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DriveTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DriveTemplateRepository* self = (DriveTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  DriveTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_DriveTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DriveTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DriveTemplateRepository* self = (DriveTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<DriveTemplate*> tolua_ret = (std::vector<DriveTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<DriveTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<DriveTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<DriveTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<DriveTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  ReactorTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_ReactorTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ReactorTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ReactorTemplateRepository* tolua_ret = (ReactorTemplateRepository*)  ReactorTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ReactorTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplateRepository_delete00
static int tolua_CenterSpace_ReactorTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ReactorTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ReactorTemplateRepository* self = (ReactorTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  ReactorTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_ReactorTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ReactorTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ReactorTemplateRepository* self = (ReactorTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<ReactorTemplate*> tolua_ret = (std::vector<ReactorTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<ReactorTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<ReactorTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<ReactorTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<ReactorTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  SensorSystemTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_SensorSystemTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SensorSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SensorSystemTemplateRepository* tolua_ret = (SensorSystemTemplateRepository*)  SensorSystemTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SensorSystemTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplateRepository_delete00
static int tolua_CenterSpace_SensorSystemTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplateRepository* self = (SensorSystemTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  SensorSystemTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_SensorSystemTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplateRepository* self = (SensorSystemTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<SensorSystemTemplate*> tolua_ret = (std::vector<SensorSystemTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<SensorSystemTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<SensorSystemTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<SensorSystemTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<SensorSystemTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  ShieldTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_ShieldTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ShieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ShieldTemplateRepository* tolua_ret = (ShieldTemplateRepository*)  ShieldTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ShieldTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplateRepository_delete00
static int tolua_CenterSpace_ShieldTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplateRepository* self = (ShieldTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  ShieldTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_ShieldTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplateRepository* self = (ShieldTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<ShieldTemplate*> tolua_ret = (std::vector<ShieldTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<ShieldTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<ShieldTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<ShieldTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<ShieldTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  TargetingSystemTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_TargetingSystemTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TargetingSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TargetingSystemTemplateRepository* tolua_ret = (TargetingSystemTemplateRepository*)  TargetingSystemTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TargetingSystemTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplateRepository_delete00
static int tolua_CenterSpace_TargetingSystemTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplateRepository* self = (TargetingSystemTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  TargetingSystemTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_TargetingSystemTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplateRepository* self = (TargetingSystemTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<TargetingSystemTemplate*> tolua_ret = (std::vector<TargetingSystemTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<TargetingSystemTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<TargetingSystemTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<TargetingSystemTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<TargetingSystemTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  WeaponTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_WeaponTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponTemplateRepository* tolua_ret = (WeaponTemplateRepository*)  WeaponTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  WeaponTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplateRepository_delete00
static int tolua_CenterSpace_WeaponTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplateRepository* self = (WeaponTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  WeaponTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplateRepository* self = (WeaponTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<WeaponTemplate*> tolua_ret = (std::vector<WeaponTemplate*>)  self->getAvailableTemplates(factionId,rank,size);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<WeaponTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<WeaponTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<WeaponTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<WeaponTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  WeaponTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates01
static int tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  WeaponTemplateRepository* self = (WeaponTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
  int size = ((int)  tolua_tonumber(tolua_S,4,0));
  HardpointType hardpointType = ((HardpointType) (int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<WeaponTemplate*> tolua_ret = (std::vector<WeaponTemplate*>)  self->getAvailableTemplates(factionId,rank,size,hardpointType);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<WeaponTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<WeaponTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<WeaponTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<WeaponTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  MCUTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_MCUTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUTemplateRepository* tolua_ret = (MCUTemplateRepository*)  MCUTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MCUTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplateRepository_delete00
static int tolua_CenterSpace_MCUTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplateRepository* self = (MCUTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableMCUTemplates of class  MCUTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplateRepository_getAvailableMCUTemplates00
static int tolua_CenterSpace_MCUTemplateRepository_getAvailableMCUTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplateRepository* self = (MCUTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableMCUTemplates'", NULL);
#endif
  {
   std::vector<MCUTemplate*> tolua_ret = (std::vector<MCUTemplate*>)  self->getAvailableMCUTemplates(factionId,rank);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<MCUTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<MCUTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<MCUTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<MCUTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableMCUTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  RandomMissionTypeTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_RandomMissionTypeTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMissionTypeTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMissionTypeTemplateRepository* tolua_ret = (RandomMissionTypeTemplateRepository*)  RandomMissionTypeTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RandomMissionTypeTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepository_delete00
static int tolua_CenterSpace_RandomMissionTypeTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplateRepository* self = (RandomMissionTypeTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  RandomMissionTypeTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_RandomMissionTypeTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplateRepository* self = (RandomMissionTypeTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::deque<RandomMissionTypeTemplate*> tolua_ret = (std::deque<RandomMissionTypeTemplate*>)  self->getAvailableTemplates();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<RandomMissionTypeTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<RandomMissionTypeTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<RandomMissionTypeTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<RandomMissionTypeTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  StoryMissionTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_StoryMissionTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"StoryMissionTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   StoryMissionTemplateRepository* tolua_ret = (StoryMissionTemplateRepository*)  StoryMissionTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StoryMissionTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  StoryMissionTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplateRepository_delete00
static int tolua_CenterSpace_StoryMissionTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplateRepository* self = (StoryMissionTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  StoryMissionTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_StoryMissionTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_StoryMissionTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"StoryMissionTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  StoryMissionTemplateRepository* self = (StoryMissionTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionHubId = ((int)  tolua_tonumber(tolua_S,2,0));
  int rank = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<StoryMissionTemplate*> tolua_ret = (std::vector<StoryMissionTemplate*>)  self->getAvailableTemplates(factionHubId,rank);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<StoryMissionTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<StoryMissionTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<StoryMissionTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<StoryMissionTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  BattlefieldTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_BattlefieldTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplateRepository* self = (BattlefieldTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::deque<BattlefieldTemplate*> tolua_ret = (std::deque<BattlefieldTemplate*>)  self->getAvailableTemplates();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<BattlefieldTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<BattlefieldTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<BattlefieldTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<BattlefieldTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  BattlefieldTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_BattlefieldTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattlefieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   BattlefieldTemplateRepository* tolua_ret = (BattlefieldTemplateRepository*)  BattlefieldTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BattlefieldTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplateRepository_delete00
static int tolua_CenterSpace_BattlefieldTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplateRepository* self = (BattlefieldTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  TerrainTextureTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_TerrainTextureTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TerrainTextureTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TerrainTextureTemplateRepository* tolua_ret = (TerrainTextureTemplateRepository*)  TerrainTextureTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTextureTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TerrainTextureTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplateRepository_delete00
static int tolua_CenterSpace_TerrainTextureTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplateRepository* self = (TerrainTextureTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  TerrainTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_TerrainTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplateRepository* self = (TerrainTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int hubId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::deque<TerrainTemplate*> tolua_ret = (std::deque<TerrainTemplate*>)  self->getAvailableTemplates(hubId);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<TerrainTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<TerrainTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<TerrainTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<TerrainTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  TerrainTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_TerrainTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TerrainTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   TerrainTemplateRepository* tolua_ret = (TerrainTemplateRepository*)  TerrainTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TerrainTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplateRepository_delete00
static int tolua_CenterSpace_TerrainTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplateRepository* self = (TerrainTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  HubTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_HubTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HubTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HubTemplateRepository* tolua_ret = (HubTemplateRepository*)  HubTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HubTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HubTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplateRepository_delete00
static int tolua_CenterSpace_HubTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplateRepository* self = (HubTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  HubTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_HubTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplateRepository* self = (HubTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::vector<HubTemplate*> tolua_ret = (std::vector<HubTemplate*>)  self->getAvailableTemplates(rank);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<HubTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<HubTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<HubTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<HubTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  FactionTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_FactionTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FactionTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FactionTemplateRepository* tolua_ret = (FactionTemplateRepository*)  FactionTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FactionTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplateRepository_delete00
static int tolua_CenterSpace_FactionTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplateRepository* self = (FactionTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  RankTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_RankTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RankTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RankTemplateRepository* tolua_ret = (RankTemplateRepository*)  RankTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RankTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RankTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepository_delete00
static int tolua_CenterSpace_RankTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplateRepository* self = (RankTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAvailableTemplates of class  RankTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepository_getAvailableTemplates00
static int tolua_CenterSpace_RankTemplateRepository_getAvailableTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplateRepository* self = (RankTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAvailableTemplates'", NULL);
#endif
  {
   std::deque<RankTemplate*> tolua_ret = (std::deque<RankTemplate*>)  self->getAvailableTemplates();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<RankTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<RankTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<RankTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<RankTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAvailableTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionHubTemplate of class  FactionHubTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplateRepository_getFactionHubTemplate00
static int tolua_CenterSpace_FactionHubTemplateRepository_getFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplateRepository",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplateRepository* self = (FactionHubTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
  int factionId = ((int)  tolua_tonumber(tolua_S,2,0));
  int hubId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionHubTemplate'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->getFactionHubTemplate(factionId,hubId);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  FactionHubTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplateRepository_getSingletonPtr00
static int tolua_CenterSpace_FactionHubTemplateRepository_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FactionHubTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FactionHubTemplateRepository* tolua_ret = (FactionHubTemplateRepository*)  FactionHubTemplateRepository::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplateRepository");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FactionHubTemplateRepository */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplateRepository_delete00
static int tolua_CenterSpace_FactionHubTemplateRepository_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplateRepository* self = (FactionHubTemplateRepository*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  BeamProjectileTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectileTemplateRepositoryLoader_load00
static int tolua_CenterSpace_BeamProjectileTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectileTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BeamProjectileTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectileTemplateRepositoryLoader* self = (BeamProjectileTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  BeamProjectileTemplateRepository* r = ((BeamProjectileTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  PhysicalProjectileTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectileTemplateRepositoryLoader_load00
static int tolua_CenterSpace_PhysicalProjectileTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectileTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"PhysicalProjectileTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectileTemplateRepositoryLoader* self = (PhysicalProjectileTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  PhysicalProjectileTemplateRepository* r = ((PhysicalProjectileTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  AIGroupTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroupTemplateRepositoryLoader_load00
static int tolua_CenterSpace_AIGroupTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroupTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"AIGroupTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroupTemplateRepositoryLoader* self = (AIGroupTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  AIGroupTemplateRepository* r = ((AIGroupTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  AIMCUTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIMCUTemplateRepositoryLoader_load00
static int tolua_CenterSpace_AIMCUTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIMCUTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"AIMCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIMCUTemplateRepositoryLoader* self = (AIMCUTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  AIMCUTemplateRepository* r = ((AIMCUTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  ArmorTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ArmorTemplateRepositoryLoader_load00
static int tolua_CenterSpace_ArmorTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ArmorTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ArmorTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ArmorTemplateRepositoryLoader* self = (ArmorTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  ArmorTemplateRepository* r = ((ArmorTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  BatteryTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BatteryTemplateRepositoryLoader_load00
static int tolua_CenterSpace_BatteryTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BatteryTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BatteryTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BatteryTemplateRepositoryLoader* self = (BatteryTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  BatteryTemplateRepository* r = ((BatteryTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  DriveTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_DriveTemplateRepositoryLoader_load00
static int tolua_CenterSpace_DriveTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"DriveTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"DriveTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  DriveTemplateRepositoryLoader* self = (DriveTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  DriveTemplateRepository* r = ((DriveTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  ReactorTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ReactorTemplateRepositoryLoader_load00
static int tolua_CenterSpace_ReactorTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ReactorTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ReactorTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ReactorTemplateRepositoryLoader* self = (ReactorTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  ReactorTemplateRepository* r = ((ReactorTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  SensorSystemTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_SensorSystemTemplateRepositoryLoader_load00
static int tolua_CenterSpace_SensorSystemTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SensorSystemTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"SensorSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SensorSystemTemplateRepositoryLoader* self = (SensorSystemTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  SensorSystemTemplateRepository* r = ((SensorSystemTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  ShieldTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ShieldTemplateRepositoryLoader_load00
static int tolua_CenterSpace_ShieldTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ShieldTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"ShieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplateRepositoryLoader* self = (ShieldTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  ShieldTemplateRepository* r = ((ShieldTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  TargetingSystemTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TargetingSystemTemplateRepositoryLoader_load00
static int tolua_CenterSpace_TargetingSystemTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TargetingSystemTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TargetingSystemTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TargetingSystemTemplateRepositoryLoader* self = (TargetingSystemTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  TargetingSystemTemplateRepository* r = ((TargetingSystemTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  WeaponTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponTemplateRepositoryLoader_load00
static int tolua_CenterSpace_WeaponTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponTemplateRepositoryLoader* self = (WeaponTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  WeaponTemplateRepository* r = ((WeaponTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  MCUTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUTemplateRepositoryLoader_load00
static int tolua_CenterSpace_MCUTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUTemplateRepositoryLoader* self = (MCUTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  MCUTemplateRepository* r = ((MCUTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  BattlefieldTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldTemplateRepositoryLoader_load00
static int tolua_CenterSpace_BattlefieldTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BattlefieldTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldTemplateRepositoryLoader* self = (BattlefieldTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  BattlefieldTemplateRepository* r = ((BattlefieldTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  TerrainTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTemplateRepositoryLoader_load00
static int tolua_CenterSpace_TerrainTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TerrainTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTemplateRepositoryLoader* self = (TerrainTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  TerrainTemplateRepository* r = ((TerrainTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  HubTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_HubTemplateRepositoryLoader_load00
static int tolua_CenterSpace_HubTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HubTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"HubTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HubTemplateRepositoryLoader* self = (HubTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  HubTemplateRepository* r = ((HubTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  FactionTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionTemplateRepositoryLoader_load00
static int tolua_CenterSpace_FactionTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"FactionTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionTemplateRepositoryLoader* self = (FactionTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FactionTemplateRepository* r = ((FactionTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  FactionHubTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_FactionHubTemplateRepositoryLoader_load00
static int tolua_CenterSpace_FactionHubTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FactionHubTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"FactionHubTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FactionHubTemplateRepositoryLoader* self = (FactionHubTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  FactionHubTemplateRepository* r = ((FactionHubTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  TerrainTextureTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TerrainTextureTemplateRepositoryLoader_load00
static int tolua_CenterSpace_TerrainTextureTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TerrainTextureTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TerrainTextureTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TerrainTextureTemplateRepositoryLoader* self = (TerrainTextureTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  TerrainTextureTemplateRepository* r = ((TerrainTextureTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  WeaponAnimationTemplateDataLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponAnimationTemplateDataLoader_load00
static int tolua_CenterSpace_WeaponAnimationTemplateDataLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponAnimationTemplateDataLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponAnimationTemplateDataLoader* self = (WeaponAnimationTemplateDataLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  WeaponHardpointTemplateDataLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpointTemplateDataLoader_load00
static int tolua_CenterSpace_WeaponHardpointTemplateDataLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpointTemplateDataLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpointTemplateDataLoader* self = (WeaponHardpointTemplateDataLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AnimationDefinitionTemplateDataLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00
static int tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationDefinitionTemplateDataLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationDefinitionTemplateDataLoader* tolua_ret = (AnimationDefinitionTemplateDataLoader*)  Mtolua_new((AnimationDefinitionTemplateDataLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationDefinitionTemplateDataLoader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AnimationDefinitionTemplateDataLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00_local
static int tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AnimationDefinitionTemplateDataLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AnimationDefinitionTemplateDataLoader* tolua_ret = (AnimationDefinitionTemplateDataLoader*)  Mtolua_new((AnimationDefinitionTemplateDataLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AnimationDefinitionTemplateDataLoader");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AnimationDefinitionTemplateDataLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_delete00
static int tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplateDataLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplateDataLoader* self = (AnimationDefinitionTemplateDataLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  AnimationDefinitionTemplateDataLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_load00
static int tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AnimationDefinitionTemplateDataLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AnimationDefinitionTemplateDataLoader* self = (AnimationDefinitionTemplateDataLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RandomMissionTypeTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00
static int tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMissionTypeTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMissionTypeTemplateRepositoryLoader* tolua_ret = (RandomMissionTypeTemplateRepositoryLoader*)  Mtolua_new((RandomMissionTypeTemplateRepositoryLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplateRepositoryLoader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RandomMissionTypeTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00_local
static int tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMissionTypeTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMissionTypeTemplateRepositoryLoader* tolua_ret = (RandomMissionTypeTemplateRepositoryLoader*)  Mtolua_new((RandomMissionTypeTemplateRepositoryLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMissionTypeTemplateRepositoryLoader");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RandomMissionTypeTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_delete00
static int tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplateRepositoryLoader* self = (RandomMissionTypeTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  RandomMissionTypeTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_load00
static int tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMissionTypeTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"RandomMissionTypeTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMissionTypeTemplateRepositoryLoader* self = (RandomMissionTypeTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  RandomMissionTypeTemplateRepository* r = ((RandomMissionTypeTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RankTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepositoryLoader_new00
static int tolua_CenterSpace_RankTemplateRepositoryLoader_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RankTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RankTemplateRepositoryLoader* tolua_ret = (RankTemplateRepositoryLoader*)  Mtolua_new((RankTemplateRepositoryLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RankTemplateRepositoryLoader");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RankTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepositoryLoader_new00_local
static int tolua_CenterSpace_RankTemplateRepositoryLoader_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RankTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RankTemplateRepositoryLoader* tolua_ret = (RankTemplateRepositoryLoader*)  Mtolua_new((RankTemplateRepositoryLoader)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RankTemplateRepositoryLoader");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  RankTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepositoryLoader_delete00
static int tolua_CenterSpace_RankTemplateRepositoryLoader_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplateRepositoryLoader* self = (RankTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  RankTemplateRepositoryLoader */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RankTemplateRepositoryLoader_load00
static int tolua_CenterSpace_RankTemplateRepositoryLoader_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RankTemplateRepositoryLoader",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"RankTemplateRepository",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RankTemplateRepositoryLoader* self = (RankTemplateRepositoryLoader*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  RankTemplateRepository* r = ((RankTemplateRepository*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load(fileName,r);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadAIMCUs of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadAIMCUs00
static int tolua_CenterSpace_RepositoryManager_loadAIMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadAIMCUs'", NULL);
#endif
  {
   self->loadAIMCUs(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadAIMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadAIGroups of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadAIGroups00
static int tolua_CenterSpace_RepositoryManager_loadAIGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadAIGroups'", NULL);
#endif
  {
   self->loadAIGroups(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadAIGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadAnimations of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadAnimations00
static int tolua_CenterSpace_RepositoryManager_loadAnimations00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadAnimations'", NULL);
#endif
  {
   self->loadAnimations(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadAnimations'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadArmors of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadArmors00
static int tolua_CenterSpace_RepositoryManager_loadArmors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadArmors'", NULL);
#endif
  {
   self->loadArmors(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadArmors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadBatteries of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadBatteries00
static int tolua_CenterSpace_RepositoryManager_loadBatteries00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadBatteries'", NULL);
#endif
  {
   self->loadBatteries(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadBatteries'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadBattlefields of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadBattlefields00
static int tolua_CenterSpace_RepositoryManager_loadBattlefields00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadBattlefields'", NULL);
#endif
  {
   self->loadBattlefields(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadBattlefields'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadBeamProjectiles of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadBeamProjectiles00
static int tolua_CenterSpace_RepositoryManager_loadBeamProjectiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadBeamProjectiles'", NULL);
#endif
  {
   self->loadBeamProjectiles(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadBeamProjectiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadDrives of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadDrives00
static int tolua_CenterSpace_RepositoryManager_loadDrives00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadDrives'", NULL);
#endif
  {
   self->loadDrives(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadDrives'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadFactions of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadFactions00
static int tolua_CenterSpace_RepositoryManager_loadFactions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadFactions'", NULL);
#endif
  {
   self->loadFactions(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadFactions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadFactionHubs of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadFactionHubs00
static int tolua_CenterSpace_RepositoryManager_loadFactionHubs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadFactionHubs'", NULL);
#endif
  {
   self->loadFactionHubs(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadFactionHubs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadHubs of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadHubs00
static int tolua_CenterSpace_RepositoryManager_loadHubs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadHubs'", NULL);
#endif
  {
   self->loadHubs(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadHubs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadMCUs of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadMCUs00
static int tolua_CenterSpace_RepositoryManager_loadMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadMCUs'", NULL);
#endif
  {
   self->loadMCUs(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadPhysicalProjectiles of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadPhysicalProjectiles00
static int tolua_CenterSpace_RepositoryManager_loadPhysicalProjectiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadPhysicalProjectiles'", NULL);
#endif
  {
   self->loadPhysicalProjectiles(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadPhysicalProjectiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadRandomMissionTypes of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadRandomMissionTypes00
static int tolua_CenterSpace_RepositoryManager_loadRandomMissionTypes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadRandomMissionTypes'", NULL);
#endif
  {
   self->loadRandomMissionTypes(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadRandomMissionTypes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadRanks of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadRanks00
static int tolua_CenterSpace_RepositoryManager_loadRanks00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadRanks'", NULL);
#endif
  {
   self->loadRanks(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadRanks'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadReactors of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadReactors00
static int tolua_CenterSpace_RepositoryManager_loadReactors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadReactors'", NULL);
#endif
  {
   self->loadReactors(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadReactors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSensors of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadSensors00
static int tolua_CenterSpace_RepositoryManager_loadSensors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSensors'", NULL);
#endif
  {
   self->loadSensors(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSensors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadShields of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadShields00
static int tolua_CenterSpace_RepositoryManager_loadShields00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadShields'", NULL);
#endif
  {
   self->loadShields(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadShields'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSounds of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadSounds00
static int tolua_CenterSpace_RepositoryManager_loadSounds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSounds'", NULL);
#endif
  {
   self->loadSounds(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSounds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTargetingSystems of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadTargetingSystems00
static int tolua_CenterSpace_RepositoryManager_loadTargetingSystems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTargetingSystems'", NULL);
#endif
  {
   self->loadTargetingSystems(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTargetingSystems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTerrains of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadTerrains00
static int tolua_CenterSpace_RepositoryManager_loadTerrains00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTerrains'", NULL);
#endif
  {
   self->loadTerrains(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTerrains'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadTerrainTextures of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadTerrainTextures00
static int tolua_CenterSpace_RepositoryManager_loadTerrainTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadTerrainTextures'", NULL);
#endif
  {
   self->loadTerrainTextures(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadTerrainTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadWeaponAnimations of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadWeaponAnimations00
static int tolua_CenterSpace_RepositoryManager_loadWeaponAnimations00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadWeaponAnimations'", NULL);
#endif
  {
   self->loadWeaponAnimations(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadWeaponAnimations'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadWeapons of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadWeapons00
static int tolua_CenterSpace_RepositoryManager_loadWeapons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadWeapons'", NULL);
#endif
  {
   self->loadWeapons(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadWeapons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadWeaponHardpoints of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_loadWeaponHardpoints00
static int tolua_CenterSpace_RepositoryManager_loadWeaponHardpoints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RepositoryManager* self = (RepositoryManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadWeaponHardpoints'", NULL);
#endif
  {
   self->loadWeaponHardpoints(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadWeaponHardpoints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  RepositoryManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RepositoryManager_getSingletonPtr00
static int tolua_CenterSpace_RepositoryManager_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RepositoryManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RepositoryManager* tolua_ret = (RepositoryManager*)  RepositoryManager::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RepositoryManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_new00
static int tolua_CenterSpace_WeaponHardpoint_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponHardpoint* tolua_ret = (WeaponHardpoint*)  Mtolua_new((WeaponHardpoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_new00_local
static int tolua_CenterSpace_WeaponHardpoint_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   WeaponHardpoint* tolua_ret = (WeaponHardpoint*)  Mtolua_new((WeaponHardpoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_delete00
static int tolua_CenterSpace_WeaponHardpoint_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCU of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_getMCU00
static int tolua_CenterSpace_WeaponHardpoint_getMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCU'", NULL);
#endif
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  self->getMCU();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCU of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_setMCU00
static int tolua_CenterSpace_WeaponHardpoint_setMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCU'", NULL);
#endif
  {
   self->setMCU(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeapon of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_setWeapon00
static int tolua_CenterSpace_WeaponHardpoint_setWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
  WeaponTemplate* weapon = ((WeaponTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeapon'", NULL);
#endif
  {
   self->setWeapon(weapon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeapon of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_getWeapon00
static int tolua_CenterSpace_WeaponHardpoint_getWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeapon'", NULL);
#endif
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  self->getWeapon();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHardpointNumber of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_setHardpointNumber00
static int tolua_CenterSpace_WeaponHardpoint_setHardpointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
  int tolua_var_21 = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHardpointNumber'", NULL);
#endif
  {
   self->setHardpointNumber(tolua_var_21);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHardpointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFire of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_canFire00
static int tolua_CenterSpace_WeaponHardpoint_canFire00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFire'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFire();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canFire'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: decrementAmmo of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_decrementAmmo00
static int tolua_CenterSpace_WeaponHardpoint_decrementAmmo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'decrementAmmo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->decrementAmmo();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'decrementAmmo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resetAmmoRemaining of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_resetAmmoRemaining00
static int tolua_CenterSpace_WeaponHardpoint_resetAmmoRemaining00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resetAmmoRemaining'", NULL);
#endif
  {
   self->resetAmmoRemaining();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetAmmoRemaining'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endTurn of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_endTurn00
static int tolua_CenterSpace_WeaponHardpoint_endTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endTurn'", NULL);
#endif
  {
   self->endTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHardpointNumber of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_getHardpointNumber00
static int tolua_CenterSpace_WeaponHardpoint_getHardpointNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHardpointNumber'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getHardpointNumber();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHardpointNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fire of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_fire00
static int tolua_CenterSpace_WeaponHardpoint_fire00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const FireInstruction",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  const FireInstruction* instruction = ((const FireInstruction*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fire'", NULL);
#endif
  {
   self->fire(mcu,*instruction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fire'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponHardpointTemplate of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_getWeaponHardpointTemplate00
static int tolua_CenterSpace_WeaponHardpoint_getWeaponHardpointTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponHardpointTemplate'", NULL);
#endif
  {
   WeaponHardpointTemplate* tolua_ret = (WeaponHardpointTemplate*)  self->getWeaponHardpointTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpointTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponHardpointTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeaponHardpointTemplate of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_setWeaponHardpointTemplate00
static int tolua_CenterSpace_WeaponHardpoint_setWeaponHardpointTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpointTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpointTemplate* t = ((WeaponHardpointTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeaponHardpointTemplate'", NULL);
#endif
  {
   self->setWeaponHardpointTemplate(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeaponHardpointTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentChanceToHit of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_getCurrentChanceToHit00
static int tolua_CenterSpace_WeaponHardpoint_getCurrentChanceToHit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentChanceToHit'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getCurrentChanceToHit();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentChanceToHit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentChanceToHit of class  WeaponHardpoint */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_WeaponHardpoint_setCurrentChanceToHit00
static int tolua_CenterSpace_WeaponHardpoint_setCurrentChanceToHit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  WeaponHardpoint* self = (WeaponHardpoint*)  tolua_tousertype(tolua_S,1,0);
  const float chance = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentChanceToHit'", NULL);
#endif
  {
   self->setCurrentChanceToHit(chance);
   tolua_pushnumber(tolua_S,(lua_Number)chance);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentChanceToHit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_new00
static int tolua_CenterSpace_MechanizedCombatUnit_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  Mtolua_new((MechanizedCombatUnit)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_new00_local
static int tolua_CenterSpace_MechanizedCombatUnit_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  Mtolua_new((MechanizedCombatUnit)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_delete00
static int tolua_CenterSpace_MechanizedCombatUnit_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getArmor of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getArmor00
static int tolua_CenterSpace_MechanizedCombatUnit_getArmor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getArmor'", NULL);
#endif
  {
   ArmorTemplate* tolua_ret = (ArmorTemplate*)  self->getArmor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ArmorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getArmor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setArmor of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setArmor00
static int tolua_CenterSpace_MechanizedCombatUnit_setArmor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ArmorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  ArmorTemplate* armor = ((ArmorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setArmor'", NULL);
#endif
  {
   self->setArmor(armor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setArmor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattery of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getBattery00
static int tolua_CenterSpace_MechanizedCombatUnit_getBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattery'", NULL);
#endif
  {
   BatteryTemplate* tolua_ret = (BatteryTemplate*)  self->getBattery();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BatteryTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBattery of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setBattery00
static int tolua_CenterSpace_MechanizedCombatUnit_setBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BatteryTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  BatteryTemplate* battery = ((BatteryTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBattery'", NULL);
#endif
  {
   self->setBattery(battery);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDrive of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getDrive00
static int tolua_CenterSpace_MechanizedCombatUnit_getDrive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDrive'", NULL);
#endif
  {
   DriveTemplate* tolua_ret = (DriveTemplate*)  self->getDrive();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DriveTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDrive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDrive of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setDrive00
static int tolua_CenterSpace_MechanizedCombatUnit_setDrive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  DriveTemplate* drive = ((DriveTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDrive'", NULL);
#endif
  {
   self->setDrive(drive);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDrive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInventoryState of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getInventoryState00
static int tolua_CenterSpace_MechanizedCombatUnit_getInventoryState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInventoryState'", NULL);
#endif
  {
   InventoryState* tolua_ret = (InventoryState*)  self->getInventoryState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InventoryState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInventoryState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInventoryState of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setInventoryState00
static int tolua_CenterSpace_MechanizedCombatUnit_setInventoryState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  InventoryState* state = ((InventoryState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInventoryState'", NULL);
#endif
  {
   self->setInventoryState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInventoryState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUTemplate of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getMCUTemplate00
static int tolua_CenterSpace_MechanizedCombatUnit_getMCUTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUTemplate'", NULL);
#endif
  {
   MCUTemplate* tolua_ret = (MCUTemplate*)  self->getMCUTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUTemplate of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setMCUTemplate00
static int tolua_CenterSpace_MechanizedCombatUnit_setMCUTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  MCUTemplate* t = ((MCUTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUTemplate'", NULL);
#endif
  {
   self->setMCUTemplate(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getReactor of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getReactor00
static int tolua_CenterSpace_MechanizedCombatUnit_getReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getReactor'", NULL);
#endif
  {
   ReactorTemplate* tolua_ret = (ReactorTemplate*)  self->getReactor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ReactorTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setReactor of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setReactor00
static int tolua_CenterSpace_MechanizedCombatUnit_setReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ReactorTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  ReactorTemplate* reactor = ((ReactorTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setReactor'", NULL);
#endif
  {
   self->setReactor(reactor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSensorSystem of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getSensorSystem00
static int tolua_CenterSpace_MechanizedCombatUnit_getSensorSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSensorSystem'", NULL);
#endif
  {
   SensorSystemTemplate* tolua_ret = (SensorSystemTemplate*)  self->getSensorSystem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SensorSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSensorSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSensorSystem of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setSensorSystem00
static int tolua_CenterSpace_MechanizedCombatUnit_setSensorSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SensorSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  SensorSystemTemplate* sensor = ((SensorSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSensorSystem'", NULL);
#endif
  {
   self->setSensorSystem(sensor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSensorSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShield of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getShield00
static int tolua_CenterSpace_MechanizedCombatUnit_getShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShield'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->getShield();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShield of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setShield00
static int tolua_CenterSpace_MechanizedCombatUnit_setShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  ShieldTemplate* shield = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShield'", NULL);
#endif
  {
   self->setShield(shield);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTargetingSystem of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getTargetingSystem00
static int tolua_CenterSpace_MechanizedCombatUnit_getTargetingSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTargetingSystem'", NULL);
#endif
  {
   TargetingSystemTemplate* tolua_ret = (TargetingSystemTemplate*)  self->getTargetingSystem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TargetingSystemTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTargetingSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTargetingSystem of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setTargetingSystem00
static int tolua_CenterSpace_MechanizedCombatUnit_setTargetingSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TargetingSystemTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  TargetingSystemTemplate* target = ((TargetingSystemTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTargetingSystem'", NULL);
#endif
  {
   self->setTargetingSystem(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTargetingSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponHardpoint of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getWeaponHardpoint00
static int tolua_CenterSpace_MechanizedCombatUnit_getWeaponHardpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  int slot = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponHardpoint'", NULL);
#endif
  {
   WeaponHardpoint* tolua_ret = (WeaponHardpoint*)  self->getWeaponHardpoint(slot);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponHardpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeapons of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getWeapons00
static int tolua_CenterSpace_MechanizedCombatUnit_getWeapons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeapons'", NULL);
#endif
  {
   std::vector<WeaponHardpoint*> tolua_ret = (std::vector<WeaponHardpoint*>)  self->getWeapons();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<WeaponHardpoint*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<WeaponHardpoint*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<WeaponHardpoint*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<WeaponHardpoint*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeapons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeapon of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setWeapon00
static int tolua_CenterSpace_MechanizedCombatUnit_setWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  int slot = ((int)  tolua_tonumber(tolua_S,2,0));
  WeaponTemplate* weapon = ((WeaponTemplate*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeapon'", NULL);
#endif
  {
   self->setWeapon(slot,weapon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addWeapon of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_addWeapon00
static int tolua_CenterSpace_MechanizedCombatUnit_addWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpoint* hardpoint = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addWeapon'", NULL);
#endif
  {
   self->addWeapon(hardpoint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWeapons of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setWeapons00
static int tolua_CenterSpace_MechanizedCombatUnit_setWeapons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const std::vector<WeaponHardpoint*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  const std::vector<WeaponHardpoint*>* weapons = ((const std::vector<WeaponHardpoint*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWeapons'", NULL);
#endif
  {
   self->setWeapons(*weapons);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWeapons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeWeapon of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_removeWeapon00
static int tolua_CenterSpace_MechanizedCombatUnit_removeWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  int slot = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeWeapon'", NULL);
#endif
  {
   self->removeWeapon(slot);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalWeight of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getTotalWeight00
static int tolua_CenterSpace_MechanizedCombatUnit_getTotalWeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalWeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTotalWeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalWeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementCostPerSquare of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getMovementCostPerSquare00
static int tolua_CenterSpace_MechanizedCombatUnit_getMovementCostPerSquare00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementCostPerSquare'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMovementCostPerSquare();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementCostPerSquare'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSequence of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getSequence00
static int tolua_CenterSpace_MechanizedCombatUnit_getSequence00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSequence'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSequence();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSequence'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSequence of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_setSequence00
static int tolua_CenterSpace_MechanizedCombatUnit_setSequence00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  int sequence = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSequence'", NULL);
#endif
  {
   self->setSequence(sequence);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSequence'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: applyWarhead of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_applyWarhead00
static int tolua_CenterSpace_MechanizedCombatUnit_applyWarhead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
  WeaponTemplate* weapon = ((WeaponTemplate*)  tolua_tousertype(tolua_S,2,0));
  const float shieldDamageNotAbsorbed = ((const float)  tolua_tonumber(tolua_S,3,0));
  bool shieldWasActive = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'applyWarhead'", NULL);
#endif
  {
   self->applyWarhead(weapon,shieldDamageNotAbsorbed,shieldWasActive);
   tolua_pushnumber(tolua_S,(lua_Number)shieldDamageNotAbsorbed);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'applyWarhead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getGuiValues00
static int tolua_CenterSpace_MechanizedCombatUnit_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponGuiData of class  MechanizedCombatUnit */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MechanizedCombatUnit_getWeaponGuiData00
static int tolua_CenterSpace_MechanizedCombatUnit_getWeaponGuiData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MechanizedCombatUnit* self = (MechanizedCombatUnit*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponGuiData'", NULL);
#endif
  {
   DataSet* tolua_ret = (DataSet*)  self->getWeaponGuiData();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DataSet");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponGuiData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUPlacement_new00
static int tolua_CenterSpace_MCUPlacement_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUPlacement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,4,0));
  {
   MCUPlacement* tolua_ret = (MCUPlacement*)  Mtolua_new((MCUPlacement)(x,z,mcu));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUPlacement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUPlacement_new00_local
static int tolua_CenterSpace_MCUPlacement_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUPlacement",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,4,0));
  {
   MCUPlacement* tolua_ret = (MCUPlacement*)  Mtolua_new((MCUPlacement)(x,z,mcu));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUPlacement");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: X of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_get_MCUPlacement_X
static int tolua_get_MCUPlacement_X(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->X);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: X of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_set_MCUPlacement_X
static int tolua_set_MCUPlacement_X(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'X'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->X = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Z of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_get_MCUPlacement_Z
static int tolua_get_MCUPlacement_Z(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Z of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_set_MCUPlacement_Z
static int tolua_set_MCUPlacement_Z(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Z = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: OwnerAIGroup of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_get_MCUPlacement_OwnerAIGroup_ptr
static int tolua_get_MCUPlacement_OwnerAIGroup_ptr(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OwnerAIGroup'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->OwnerAIGroup,"AIGroup");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: OwnerAIGroup of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_set_MCUPlacement_OwnerAIGroup_ptr
static int tolua_set_MCUPlacement_OwnerAIGroup_ptr(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'OwnerAIGroup'",NULL);
  if (!tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->OwnerAIGroup = ((AIGroup*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MCU of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_get_MCUPlacement_MCU_ptr
static int tolua_get_MCUPlacement_MCU_ptr(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MCU'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->MCU,"MechanizedCombatUnit");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MCU of class  MCUPlacement */
#ifndef TOLUA_DISABLE_tolua_set_MCUPlacement_MCU_ptr
static int tolua_set_MCUPlacement_MCU_ptr(lua_State* tolua_S)
{
  MCUPlacement* self = (MCUPlacement*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MCU'",NULL);
  if (!tolua_isusertype(tolua_S,2,"MechanizedCombatUnit",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MCU = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMechanizedCombatUnit of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_addMechanizedCombatUnit00
static int tolua_CenterSpace_LuaMCUDeque_addMechanizedCombatUnit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMechanizedCombatUnit'", NULL);
#endif
  {
   self->addMechanizedCombatUnit(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMechanizedCombatUnit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUs of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_setMCUs00
static int tolua_CenterSpace_LuaMCUDeque_setMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<MechanizedCombatUnit*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
  std::deque<MechanizedCombatUnit*>* mcus = ((std::deque<MechanizedCombatUnit*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUs'", NULL);
#endif
  {
   self->setMCUs(*mcus);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUPlacements of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_getMCUPlacements00
static int tolua_CenterSpace_LuaMCUDeque_getMCUPlacements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUPlacements'", NULL);
#endif
  {
   std::deque<MCUPlacement*>& tolua_ret = (std::deque<MCUPlacement*>&)  self->getMCUPlacements();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<MCUPlacement*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUPlacements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNext of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_getNext00
static int tolua_CenterSpace_LuaMCUDeque_getNext00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNext'", NULL);
#endif
  {
   MCUPlacement* tolua_ret = (MCUPlacement*)  self->getNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUPlacement");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNext'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreItems of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_hasMoreItems00
static int tolua_CenterSpace_LuaMCUDeque_hasMoreItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreItems'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreItems();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_reset00
static int tolua_CenterSpace_LuaMCUDeque_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'", NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: numItems of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_numItems00
static int tolua_CenterSpace_LuaMCUDeque_numItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'numItems'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->numItems();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'numItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSeedX of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_getSeedX00
static int tolua_CenterSpace_LuaMCUDeque_getSeedX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSeedX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSeedX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSeedX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSeedX of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_setSeedX00
static int tolua_CenterSpace_LuaMCUDeque_setSeedX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
  int seed = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSeedX'", NULL);
#endif
  {
   self->setSeedX(seed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSeedX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSeedZ of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_getSeedZ00
static int tolua_CenterSpace_LuaMCUDeque_getSeedZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSeedZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSeedZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSeedZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSeedZ of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_setSeedZ00
static int tolua_CenterSpace_LuaMCUDeque_setSeedZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
  int seed = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSeedZ'", NULL);
#endif
  {
   self->setSeedZ(seed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSeedZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCellOccupied of class  LuaMCUDeque */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_LuaMCUDeque_isCellOccupied00
static int tolua_CenterSpace_LuaMCUDeque_isCellOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LuaMCUDeque* self = (LuaMCUDeque*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCellOccupied'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCellOccupied(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCellOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_new00
static int tolua_CenterSpace_Shield_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Ogre::SceneNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const btTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* shield = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,4,0));
  const btTransform* transform = ((const btTransform*)  tolua_tousertype(tolua_S,5,0));
  {
   Shield* tolua_ret = (Shield*)  Mtolua_new((Shield)(shield,mcu,node,*transform));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Shield");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_new00_local
static int tolua_CenterSpace_Shield_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Ogre::SceneNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const btTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ShieldTemplate* shield = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,4,0));
  const btTransform* transform = ((const btTransform*)  tolua_tousertype(tolua_S,5,0));
  {
   Shield* tolua_ret = (Shield*)  Mtolua_new((Shield)(shield,mcu,node,*transform));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Shield");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_delete00
static int tolua_CenterSpace_Shield_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: applyWarhead of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_applyWarhead00
static int tolua_CenterSpace_Shield_applyWarhead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Warhead",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  Warhead* warhead = ((Warhead*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'applyWarhead'", NULL);
#endif
  {
   self->applyWarhead(*warhead);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'applyWarhead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: move of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_move00
static int tolua_CenterSpace_Shield_move00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const btTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  const btTransform* transform = ((const btTransform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'move'", NULL);
#endif
  {
   self->move(*transform);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'move'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endTurn of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_endTurn00
static int tolua_CenterSpace_Shield_endTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endTurn'", NULL);
#endif
  {
   self->endTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxHealth of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getMaxHealth00
static int tolua_CenterSpace_Shield_getMaxHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxHealth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxHealth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxHealth of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setMaxHealth00
static int tolua_CenterSpace_Shield_setMaxHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  const float maxHealth = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxHealth'", NULL);
#endif
  {
   self->setMaxHealth(maxHealth);
   tolua_pushnumber(tolua_S,(lua_Number)maxHealth);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentHealth of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getCurrentHealth00
static int tolua_CenterSpace_Shield_getCurrentHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentHealth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getCurrentHealth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentHealth of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setCurrentHealth00
static int tolua_CenterSpace_Shield_setCurrentHealth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  const float currentHealth = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentHealth'", NULL);
#endif
  {
   self->setCurrentHealth(currentHealth);
   tolua_pushnumber(tolua_S,(lua_Number)currentHealth);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentHealth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRadius of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getRadius00
static int tolua_CenterSpace_Shield_getRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRadius of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setRadius00
static int tolua_CenterSpace_Shield_setRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  const float radius = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRadius'", NULL);
#endif
  {
   self->setRadius(radius);
   tolua_pushnumber(tolua_S,(lua_Number)radius);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isActive of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_isActive00
static int tolua_CenterSpace_Shield_isActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isActive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsActive of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setIsActive00
static int tolua_CenterSpace_Shield_setIsActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  bool active = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsActive'", NULL);
#endif
  {
   self->setIsActive(active);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUController of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getMCUController00
static int tolua_CenterSpace_Shield_getMCUController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUController'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getMCUController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUController of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setMCUController00
static int tolua_CenterSpace_Shield_setMCUController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUController'", NULL);
#endif
  {
   self->setMCUController(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShieldTemplate of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getShieldTemplate00
static int tolua_CenterSpace_Shield_getShieldTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShieldTemplate'", NULL);
#endif
  {
   ShieldTemplate* tolua_ret = (ShieldTemplate*)  self->getShieldTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ShieldTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShieldTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShieldTemplate of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setShieldTemplate00
static int tolua_CenterSpace_Shield_setShieldTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"ShieldTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  ShieldTemplate* shield = ((ShieldTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShieldTemplate'", NULL);
#endif
  {
   self->setShieldTemplate(shield);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShieldTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEntity of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getEntity00
static int tolua_CenterSpace_Shield_getEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEntity'", NULL);
#endif
  {
   Ogre::Entity* tolua_ret = (Ogre::Entity*)  self->getEntity();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::Entity");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEntity of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setEntity00
static int tolua_CenterSpace_Shield_setEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEntity'", NULL);
#endif
  {
   self->setEntity(entity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUNode of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getMCUNode00
static int tolua_CenterSpace_Shield_getMCUNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUNode'", NULL);
#endif
  {
   Ogre::SceneNode* tolua_ret = (Ogre::SceneNode*)  self->getMCUNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::SceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUNode of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setMCUNode00
static int tolua_CenterSpace_Shield_setMCUNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUNode'", NULL);
#endif
  {
   self->setMCUNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShieldNode of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getShieldNode00
static int tolua_CenterSpace_Shield_getShieldNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShieldNode'", NULL);
#endif
  {
   Ogre::SceneNode* tolua_ret = (Ogre::SceneNode*)  self->getShieldNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::SceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShieldNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShieldNode of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setShieldNode00
static int tolua_CenterSpace_Shield_setShieldNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShieldNode'", NULL);
#endif
  {
   self->setShieldNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShieldNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGhostObject of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getGhostObject00
static int tolua_CenterSpace_Shield_getGhostObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGhostObject'", NULL);
#endif
  {
   btPairCachingGhostObject* tolua_ret = (btPairCachingGhostObject*)  self->getGhostObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"btPairCachingGhostObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGhostObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGhostObject of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setGhostObject00
static int tolua_CenterSpace_Shield_setGhostObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"btPairCachingGhostObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  btPairCachingGhostObject* ghost = ((btPairCachingGhostObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGhostObject'", NULL);
#endif
  {
   self->setGhostObject(ghost);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGhostObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCollisionShape of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getCollisionShape00
static int tolua_CenterSpace_Shield_getCollisionShape00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCollisionShape'", NULL);
#endif
  {
   btConvexShape* tolua_ret = (btConvexShape*)  self->getCollisionShape();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"btConvexShape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCollisionShape'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCollisionShape of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setCollisionShape00
static int tolua_CenterSpace_Shield_setCollisionShape00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"btConvexShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  btConvexShape* shape = ((btConvexShape*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCollisionShape'", NULL);
#endif
  {
   self->setCollisionShape(shape);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCollisionShape'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentPosition of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_getCurrentPosition00
static int tolua_CenterSpace_Shield_getCurrentPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentPosition'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getCurrentPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentPosition of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setCurrentPosition00
static int tolua_CenterSpace_Shield_setCurrentPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Vector3 pos = *((Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentPosition'", NULL);
#endif
  {
   self->setCurrentPosition(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_isVisible00
static int tolua_CenterSpace_Shield_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_setVisible00
static int tolua_CenterSpace_Shield_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCloserThan of class  Shield */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Shield_isCloserThan00
static int tolua_CenterSpace_Shield_isCloserThan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Shield",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Ogre::Real",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Shield* self = (Shield*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* point = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Real squaredDistance = *((Ogre::Real*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCloserThan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCloserThan(*point,squaredDistance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCloserThan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_delete00
static int tolua_CenterSpace_Projectile_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartpoint of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_getStartpoint00
static int tolua_CenterSpace_Projectile_getStartpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartpoint'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getStartpoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStartpoint of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_setStartpoint00
static int tolua_CenterSpace_Projectile_setStartpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* start = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStartpoint'", NULL);
#endif
  {
   self->setStartpoint(*start);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStartpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEndpoint of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_getEndpoint00
static int tolua_CenterSpace_Projectile_getEndpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEndpoint'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getEndpoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEndpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEndpoint of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_setEndpoint00
static int tolua_CenterSpace_Projectile_setEndpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* end = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEndpoint'", NULL);
#endif
  {
   self->setEndpoint(*end);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEndpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProjectileID of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_getProjectileID00
static int tolua_CenterSpace_Projectile_getProjectileID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProjectileID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getProjectileID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProjectileID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProjectileID of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_setProjectileID00
static int tolua_CenterSpace_Projectile_setProjectileID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProjectileID'", NULL);
#endif
  {
   self->setProjectileID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProjectileID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWeaponTemplate of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_getWeaponTemplate00
static int tolua_CenterSpace_Projectile_getWeaponTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWeaponTemplate'", NULL);
#endif
  {
   WeaponTemplate* tolua_ret = (WeaponTemplate*)  self->getWeaponTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWeaponTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSource of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_getSource00
static int tolua_CenterSpace_Projectile_getSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSource'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getSource();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSource of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_setSource00
static int tolua_CenterSpace_Projectile_setSource00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSource'", NULL);
#endif
  {
   self->setSource(source);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSource'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: applyWarhead of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_applyWarhead00
static int tolua_CenterSpace_Projectile_applyWarhead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'applyWarhead'", NULL);
#endif
  {
   self->applyWarhead(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'applyWarhead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: projectileAdded of class  Projectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Projectile_projectileAdded00
static int tolua_CenterSpace_Projectile_projectileAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Projectile* self = (Projectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'projectileAdded'", NULL);
#endif
  {
   self->projectileAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'projectileAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_delete00
static int tolua_CenterSpace_BeamProjectile_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBeamProjectileTemplate of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_getBeamProjectileTemplate00
static int tolua_CenterSpace_BeamProjectile_getBeamProjectileTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBeamProjectileTemplate'", NULL);
#endif
  {
   BeamProjectileTemplate* tolua_ret = (BeamProjectileTemplate*)  self->getBeamProjectileTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BeamProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBeamProjectileTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTimeElapsed of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_getTimeElapsed00
static int tolua_CenterSpace_BeamProjectile_getTimeElapsed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTimeElapsed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTimeElapsed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimeElapsed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: projectileAdded of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_projectileAdded00
static int tolua_CenterSpace_BeamProjectile_projectileAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'projectileAdded'", NULL);
#endif
  {
   self->projectileAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'projectileAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_update00
static int tolua_CenterSpace_BeamProjectile_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
  float timeSinceLastFrame = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(timeSinceLastFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_isVisible00
static int tolua_CenterSpace_BeamProjectile_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_setVisible00
static int tolua_CenterSpace_BeamProjectile_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCloserThan of class  BeamProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BeamProjectile_isCloserThan00
static int tolua_CenterSpace_BeamProjectile_isCloserThan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BeamProjectile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Ogre::Real",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BeamProjectile* self = (BeamProjectile*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* point = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Real squaredDistance = *((Ogre::Real*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCloserThan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCloserThan(*point,squaredDistance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCloserThan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_delete00
static int tolua_CenterSpace_PhysicalProjectile_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPhysicalProjectileTemplate of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_getPhysicalProjectileTemplate00
static int tolua_CenterSpace_PhysicalProjectile_getPhysicalProjectileTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPhysicalProjectileTemplate'", NULL);
#endif
  {
   PhysicalProjectileTemplate* tolua_ret = (PhysicalProjectileTemplate*)  self->getPhysicalProjectileTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PhysicalProjectileTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPhysicalProjectileTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: projectileAdded of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_projectileAdded00
static int tolua_CenterSpace_PhysicalProjectile_projectileAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'projectileAdded'", NULL);
#endif
  {
   self->projectileAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'projectileAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_isVisible00
static int tolua_CenterSpace_PhysicalProjectile_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_setVisible00
static int tolua_CenterSpace_PhysicalProjectile_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCloserThan of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_isCloserThan00
static int tolua_CenterSpace_PhysicalProjectile_isCloserThan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Ogre::Real",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* point = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Real squaredDistance = *((Ogre::Real*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCloserThan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCloserThan(*point,squaredDistance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCloserThan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWorldTransform of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_getWorldTransform00
static int tolua_CenterSpace_PhysicalProjectile_getWorldTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const PhysicalProjectile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"btTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const PhysicalProjectile* self = (const PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
  btTransform* ret = ((btTransform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWorldTransform'", NULL);
#endif
  {
   self->getWorldTransform(*ret);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWorldTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setWorldTransform of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_setWorldTransform00
static int tolua_CenterSpace_PhysicalProjectile_setWorldTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const btTransform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
  const btTransform* in = ((const btTransform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setWorldTransform'", NULL);
#endif
  {
   self->setWorldTransform(*in);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setWorldTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNode of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_getNode00
static int tolua_CenterSpace_PhysicalProjectile_getNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNode'", NULL);
#endif
  {
   Ogre::SceneNode* tolua_ret = (Ogre::SceneNode*)  self->getNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::SceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNode of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_setNode00
static int tolua_CenterSpace_PhysicalProjectile_setNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNode'", NULL);
#endif
  {
   self->setNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEntity of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_getEntity00
static int tolua_CenterSpace_PhysicalProjectile_getEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEntity'", NULL);
#endif
  {
   Ogre::Entity* tolua_ret = (Ogre::Entity*)  self->getEntity();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::Entity");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEntity of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PhysicalProjectile_setEntity00
static int tolua_CenterSpace_PhysicalProjectile_setEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PhysicalProjectile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEntity'", NULL);
#endif
  {
   self->setEntity(entity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxProjectileLifetime of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_get_PhysicalProjectile_MaxProjectileLifetime
static int tolua_get_PhysicalProjectile_MaxProjectileLifetime(lua_State* tolua_S)
{
  tolua_pushnumber(tolua_S,(lua_Number)PhysicalProjectile::MaxProjectileLifetime);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __btMotionState__ of class  PhysicalProjectile */
#ifndef TOLUA_DISABLE_tolua_get_PhysicalProjectile___btMotionState__
static int tolua_get_PhysicalProjectile___btMotionState__(lua_State* tolua_S)
{
  PhysicalProjectile* self = (PhysicalProjectile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__btMotionState__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<btMotionState*>(self), "btMotionState");
#else
   tolua_pushusertype(tolua_S,(void*)((btMotionState*)self), "btMotionState");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_new00
static int tolua_CenterSpace_AIPreBattleState_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIPreBattleState* tolua_ret = (AIPreBattleState*)  Mtolua_new((AIPreBattleState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIPreBattleState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_new00_local
static int tolua_CenterSpace_AIPreBattleState_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AIPreBattleState* tolua_ret = (AIPreBattleState*)  Mtolua_new((AIPreBattleState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIPreBattleState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_delete00
static int tolua_CenterSpace_AIPreBattleState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIPreBattleState* self = (AIPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyAIGroups of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_getEnemyAIGroups00
static int tolua_CenterSpace_AIPreBattleState_getEnemyAIGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIPreBattleState* self = (AIPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyAIGroups'", NULL);
#endif
  {
   std::deque<AIGroup*> tolua_ret = (std::deque<AIGroup*>)  self->getEnemyAIGroups();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<AIGroup*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<AIGroup*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<AIGroup*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<AIGroup*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyAIGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyAIGroups of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_setEnemyAIGroups00
static int tolua_CenterSpace_AIPreBattleState_setEnemyAIGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<AIGroup*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIPreBattleState* self = (AIPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  std::deque<AIGroup*> aigroups = *((std::deque<AIGroup*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyAIGroups'", NULL);
#endif
  {
   self->setEnemyAIGroups(aigroups);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyAIGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEnemyAIGroup of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_addEnemyAIGroup00
static int tolua_CenterSpace_AIPreBattleState_addEnemyAIGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIPreBattleState* self = (AIPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* aigroup = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEnemyAIGroup'", NULL);
#endif
  {
   self->addEnemyAIGroup(aigroup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEnemyAIGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAllMCUPlacements of class  AIPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIPreBattleState_getAllMCUPlacements00
static int tolua_CenterSpace_AIPreBattleState_getAllMCUPlacements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIPreBattleState* self = (AIPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAllMCUPlacements'", NULL);
#endif
  {
   std::deque<MCUPlacement*>& tolua_ret = (std::deque<MCUPlacement*>&)  self->getAllMCUPlacements();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<MCUPlacement*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAllMCUPlacements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_new00
static int tolua_CenterSpace_Mission_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Mission* tolua_ret = (Mission*)  Mtolua_new((Mission)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_new00_local
static int tolua_CenterSpace_Mission_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Mission* tolua_ret = (Mission*)  Mtolua_new((Mission)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_new01
static int tolua_CenterSpace_Mission_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  StoryMissionTemplate* mission = ((StoryMissionTemplate*)  tolua_tousertype(tolua_S,2,0));
  {
   Mission* tolua_ret = (Mission*)  Mtolua_new((Mission)(mission));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_Mission_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_new01_local
static int tolua_CenterSpace_Mission_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"StoryMissionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  StoryMissionTemplate* mission = ((StoryMissionTemplate*)  tolua_tousertype(tolua_S,2,0));
  {
   Mission* tolua_ret = (Mission*)  Mtolua_new((Mission)(mission));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_Mission_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_new02
static int tolua_CenterSpace_Mission_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  RandomMissionTypeTemplate* type = ((RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,2,0));
  int sideLength = ((int)  tolua_tonumber(tolua_S,3,0));
  int requiredRank = ((int)  tolua_tonumber(tolua_S,4,0));
  TerrainTemplate* terrain = ((TerrainTemplate*)  tolua_tousertype(tolua_S,5,0));
  FactionHubTemplate* factionHub = ((FactionHubTemplate*)  tolua_tousertype(tolua_S,6,0));
  {
   Mission* tolua_ret = (Mission*)  Mtolua_new((Mission)(type,sideLength,requiredRank,terrain,factionHub));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_Mission_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_new02_local
static int tolua_CenterSpace_Mission_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"RandomMissionTypeTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  RandomMissionTypeTemplate* type = ((RandomMissionTypeTemplate*)  tolua_tousertype(tolua_S,2,0));
  int sideLength = ((int)  tolua_tonumber(tolua_S,3,0));
  int requiredRank = ((int)  tolua_tonumber(tolua_S,4,0));
  TerrainTemplate* terrain = ((TerrainTemplate*)  tolua_tousertype(tolua_S,5,0));
  FactionHubTemplate* factionHub = ((FactionHubTemplate*)  tolua_tousertype(tolua_S,6,0));
  {
   Mission* tolua_ret = (Mission*)  Mtolua_new((Mission)(type,sideLength,requiredRank,terrain,factionHub));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_Mission_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_delete00
static int tolua_CenterSpace_Mission_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getId of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getId00
static int tolua_CenterSpace_Mission_getId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setId of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setId00
static int tolua_CenterSpace_Mission_setId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setId'", NULL);
#endif
  {
   self->setId(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getName00
static int tolua_CenterSpace_Mission_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setName00
static int tolua_CenterSpace_Mission_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainTemplate of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getTerrainTemplate00
static int tolua_CenterSpace_Mission_getTerrainTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainTemplate'", NULL);
#endif
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  self->getTerrainTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainTemplate of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setTerrainTemplate00
static int tolua_CenterSpace_Mission_setTerrainTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  TerrainTemplate* terrain = ((TerrainTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainTemplate'", NULL);
#endif
  {
   self->setTerrainTemplate(terrain);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionHubTemplate of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getFactionHubTemplate00
static int tolua_CenterSpace_Mission_getFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionHubTemplate'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->getFactionHubTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionHubTemplate of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setFactionHubTemplate00
static int tolua_CenterSpace_Mission_setFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  FactionHubTemplate* hub = ((FactionHubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionHubTemplate'", NULL);
#endif
  {
   self->setFactionHubTemplate(hub);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSideLength of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getSideLength00
static int tolua_CenterSpace_Mission_getSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSideLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSideLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSideLength of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setSideLength00
static int tolua_CenterSpace_Mission_setSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int length = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSideLength'", NULL);
#endif
  {
   self->setSideLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRequiredRank of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getRequiredRank00
static int tolua_CenterSpace_Mission_getRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRequiredRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRequiredRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRequiredRank of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setRequiredRank00
static int tolua_CenterSpace_Mission_setRequiredRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRequiredRank'", NULL);
#endif
  {
   self->setRequiredRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRequiredRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMissionScriptFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getMissionScriptFilename00
static int tolua_CenterSpace_Mission_getMissionScriptFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMissionScriptFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getMissionScriptFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMissionScriptFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMissionScriptFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setMissionScriptFilename00
static int tolua_CenterSpace_Mission_setMissionScriptFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMissionScriptFilename'", NULL);
#endif
  {
   self->setMissionScriptFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMissionScriptFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainGenerationFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getTerrainGenerationFilename00
static int tolua_CenterSpace_Mission_getTerrainGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainGenerationFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTerrainGenerationFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainGenerationFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setTerrainGenerationFilename00
static int tolua_CenterSpace_Mission_setTerrainGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainGenerationFilename'", NULL);
#endif
  {
   self->setTerrainGenerationFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainGenerationEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getTerrainGenerationEntryPoint00
static int tolua_CenterSpace_Mission_getTerrainGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainGenerationEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getTerrainGenerationEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainGenerationEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setTerrainGenerationEntryPoint00
static int tolua_CenterSpace_Mission_setTerrainGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainGenerationEntryPoint'", NULL);
#endif
  {
   self->setTerrainGenerationEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyGenerationFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemyGenerationFilename00
static int tolua_CenterSpace_Mission_getEnemyGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyGenerationFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyGenerationFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyGenerationFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemyGenerationFilename00
static int tolua_CenterSpace_Mission_setEnemyGenerationFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyGenerationFilename'", NULL);
#endif
  {
   self->setEnemyGenerationFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyGenerationFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyGenerationEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemyGenerationEntryPoint00
static int tolua_CenterSpace_Mission_getEnemyGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyGenerationEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyGenerationEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyGenerationEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemyGenerationEntryPoint00
static int tolua_CenterSpace_Mission_setEnemyGenerationEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyGenerationEntryPoint'", NULL);
#endif
  {
   self->setEnemyGenerationEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyGenerationEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlacementFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getPlacementFilename00
static int tolua_CenterSpace_Mission_getPlacementFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlacementFilename'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getPlacementFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlacementFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlacementFilename of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setPlacementFilename00
static int tolua_CenterSpace_Mission_setPlacementFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlacementFilename'", NULL);
#endif
  {
   self->setPlacementFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlacementFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerPlacementEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getPlayerPlacementEntryPoint00
static int tolua_CenterSpace_Mission_getPlayerPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerPlacementEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getPlayerPlacementEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerPlacementEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setPlayerPlacementEntryPoint00
static int tolua_CenterSpace_Mission_setPlayerPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerPlacementEntryPoint'", NULL);
#endif
  {
   self->setPlayerPlacementEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemyPlacementEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemyPlacementEntryPoint00
static int tolua_CenterSpace_Mission_getEnemyPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemyPlacementEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getEnemyPlacementEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemyPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemyPlacementEntryPoint of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemyPlacementEntryPoint00
static int tolua_CenterSpace_Mission_setEnemyPlacementEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemyPlacementEntryPoint'", NULL);
#endif
  {
   self->setEnemyPlacementEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemyPlacementEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerLocationX of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getPlayerLocationX00
static int tolua_CenterSpace_Mission_getPlayerLocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerLocationX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerLocationX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerLocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerLocationX of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setPlayerLocationX00
static int tolua_CenterSpace_Mission_setPlayerLocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerLocationX'", NULL);
#endif
  {
   self->setPlayerLocationX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerLocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerLocationZ of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getPlayerLocationZ00
static int tolua_CenterSpace_Mission_getPlayerLocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerLocationZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerLocationZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerLocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerLocationZ of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setPlayerLocationZ00
static int tolua_CenterSpace_Mission_setPlayerLocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerLocationZ'", NULL);
#endif
  {
   self->setPlayerLocationZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerLocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy1LocationX of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemy1LocationX00
static int tolua_CenterSpace_Mission_getEnemy1LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy1LocationX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy1LocationX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy1LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy1LocationX of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemy1LocationX00
static int tolua_CenterSpace_Mission_setEnemy1LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy1LocationX'", NULL);
#endif
  {
   self->setEnemy1LocationX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy1LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy1LocationZ of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemy1LocationZ00
static int tolua_CenterSpace_Mission_getEnemy1LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy1LocationZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy1LocationZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy1LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy1LocationZ of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemy1LocationZ00
static int tolua_CenterSpace_Mission_setEnemy1LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy1LocationZ'", NULL);
#endif
  {
   self->setEnemy1LocationZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy1LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy2LocationX of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemy2LocationX00
static int tolua_CenterSpace_Mission_getEnemy2LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy2LocationX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy2LocationX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy2LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy2LocationX of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemy2LocationX00
static int tolua_CenterSpace_Mission_setEnemy2LocationX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy2LocationX'", NULL);
#endif
  {
   self->setEnemy2LocationX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy2LocationX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEnemy2LocationZ of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getEnemy2LocationZ00
static int tolua_CenterSpace_Mission_getEnemy2LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEnemy2LocationZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getEnemy2LocationZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEnemy2LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEnemy2LocationZ of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setEnemy2LocationZ00
static int tolua_CenterSpace_Mission_setEnemy2LocationZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEnemy2LocationZ'", NULL);
#endif
  {
   self->setEnemy2LocationZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEnemy2LocationZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam1 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getLuaParam100
static int tolua_CenterSpace_Mission_getLuaParam100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam1'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam1();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam1 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setLuaParam100
static int tolua_CenterSpace_Mission_setLuaParam100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam1'", NULL);
#endif
  {
   self->setLuaParam1(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam2 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getLuaParam200
static int tolua_CenterSpace_Mission_getLuaParam200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam2'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam2();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam2 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setLuaParam200
static int tolua_CenterSpace_Mission_setLuaParam200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam2'", NULL);
#endif
  {
   self->setLuaParam2(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam3 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getLuaParam300
static int tolua_CenterSpace_Mission_getLuaParam300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam3'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam3();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam3 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setLuaParam300
static int tolua_CenterSpace_Mission_setLuaParam300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam3'", NULL);
#endif
  {
   self->setLuaParam3(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaParam4 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getLuaParam400
static int tolua_CenterSpace_Mission_getLuaParam400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaParam4'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLuaParam4();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaParam4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaParam4 of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setLuaParam400
static int tolua_CenterSpace_Mission_setLuaParam400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  float param = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaParam4'", NULL);
#endif
  {
   self->setLuaParam4(param);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaParam4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerPreBattleStates of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_getPlayerPreBattleStates00
static int tolua_CenterSpace_Mission_getPlayerPreBattleStates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerPreBattleStates'", NULL);
#endif
  {
   std::deque<PlayerPreBattleState*>& tolua_ret = (std::deque<PlayerPreBattleState*>&)  self->getPlayerPreBattleStates();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<PlayerPreBattleState*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerPreBattleStates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerPreBattleStates of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_setPlayerPreBattleStates00
static int tolua_CenterSpace_Mission_setPlayerPreBattleStates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<PlayerPreBattleState*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  std::deque<PlayerPreBattleState*>* states = ((std::deque<PlayerPreBattleState*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerPreBattleStates'", NULL);
#endif
  {
   self->setPlayerPreBattleStates(*states);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerPreBattleStates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCellOccupied of class  Mission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_Mission_isCellOccupied00
static int tolua_CenterSpace_Mission_isCellOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Mission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Mission* self = (Mission*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCellOccupied'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCellOccupied(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCellOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  RandomMission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMission_new00
static int tolua_CenterSpace_RandomMission_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMission* tolua_ret = (RandomMission*)  Mtolua_new((RandomMission)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMission");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  RandomMission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMission_new00_local
static int tolua_CenterSpace_RandomMission_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   RandomMission* tolua_ret = (RandomMission*)  Mtolua_new((RandomMission)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"RandomMission");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRandomMissionType of class  RandomMission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMission_getRandomMissionType00
static int tolua_CenterSpace_RandomMission_getRandomMissionType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMission* self = (RandomMission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRandomMissionType'", NULL);
#endif
  {
   RandomMission::RandomMissionType tolua_ret = (RandomMission::RandomMissionType)  self->getRandomMissionType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRandomMissionType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRandomMissionType of class  RandomMission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMission_setRandomMissionType00
static int tolua_CenterSpace_RandomMission_setRandomMissionType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMission* self = (RandomMission*)  tolua_tousertype(tolua_S,1,0);
  RandomMission::RandomMissionType type = ((RandomMission::RandomMissionType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRandomMissionType'", NULL);
#endif
  {
   self->setRandomMissionType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRandomMissionType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RandomMissionTypeToString of class  RandomMission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMission_RandomMissionTypeToString00
static int tolua_CenterSpace_RandomMission_RandomMissionTypeToString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"RandomMission",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMission::RandomMissionType type = ((RandomMission::RandomMissionType) (int)  tolua_tonumber(tolua_S,2,0));
  {
   std::string tolua_ret = (std::string)  RandomMission::RandomMissionTypeToString(type);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RandomMissionTypeToString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescription of class  RandomMission */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_RandomMission_getDescription00
static int tolua_CenterSpace_RandomMission_getDescription00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"RandomMission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  RandomMission* self = (RandomMission*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescription'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getDescription();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescription'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getX of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_getX00
static int tolua_CenterSpace_GridSquareTemplate_getX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getY of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_getY00
static int tolua_CenterSpace_GridSquareTemplate_getY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getY'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZ of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_getZ00
static int tolua_CenterSpace_GridSquareTemplate_getZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setY of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_setY00
static int tolua_CenterSpace_GridSquareTemplate_setY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setY'", NULL);
#endif
  {
   self->setY(y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: wasRaised of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_wasRaised00
static int tolua_CenterSpace_GridSquareTemplate_wasRaised00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'wasRaised'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->wasRaised();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'wasRaised'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRaised of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_setRaised00
static int tolua_CenterSpace_GridSquareTemplate_setRaised00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRaised'", NULL);
#endif
  {
   self->setRaised(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRaised'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSquareType of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_getSquareType00
static int tolua_CenterSpace_GridSquareTemplate_getSquareType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSquareType'", NULL);
#endif
  {
   SquareType tolua_ret = (SquareType)  self->getSquareType();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((SquareType)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"SquareType");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(SquareType));
     tolua_pushusertype(tolua_S,tolua_obj,"SquareType");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSquareType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSquareType of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_setSquareType00
static int tolua_CenterSpace_GridSquareTemplate_setSquareType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"SquareType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
  SquareType type = *((SquareType*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSquareType'", NULL);
#endif
  {
   self->setSquareType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSquareType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainChange of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_getTerrainChange00
static int tolua_CenterSpace_GridSquareTemplate_getTerrainChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainChange'", NULL);
#endif
  {
   TerrainChange tolua_ret = (TerrainChange)  self->getTerrainChange();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((TerrainChange)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"TerrainChange");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(TerrainChange));
     tolua_pushusertype(tolua_S,tolua_obj,"TerrainChange");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainChange of class  GridSquareTemplate */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplate_setTerrainChange00
static int tolua_CenterSpace_GridSquareTemplate_setTerrainChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplate",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"TerrainChange",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplate* self = (GridSquareTemplate*)  tolua_tousertype(tolua_S,1,0);
  TerrainChange change = *((TerrainChange*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainChange'", NULL);
#endif
  {
   self->setTerrainChange(change);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSideLength of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_getSideLength00
static int tolua_CenterSpace_GridSquareTemplateVector_getSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSideLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSideLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridSquare of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_getGridSquare00
static int tolua_CenterSpace_GridSquareTemplateVector_getGridSquare00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridSquare'", NULL);
#endif
  {
   GridSquareTemplate* tolua_ret = (GridSquareTemplate*)  self->getGridSquare(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquareTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGridSquare'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridSquare of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_getGridSquare01
static int tolua_CenterSpace_GridSquareTemplateVector_getGridSquare01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridSquare'", NULL);
#endif
  {
   GridSquareTemplate* tolua_ret = (GridSquareTemplate*)  self->getGridSquare(x,z);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquareTemplate");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GridSquareTemplateVector_getGridSquare00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultGridHeight of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_setDefaultGridHeight00
static int tolua_CenterSpace_GridSquareTemplateVector_setDefaultGridHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int y = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDefaultGridHeight'", NULL);
#endif
  {
   self->setDefaultGridHeight(y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultGridHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeSquare of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_changeSquare00
static int tolua_CenterSpace_GridSquareTemplateVector_changeSquare00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
  int yDiff = ((int)  tolua_tonumber(tolua_S,4,0));
  bool createCliff = ((bool)  tolua_toboolean(tolua_S,5,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeSquare'", NULL);
#endif
  {
   self->changeSquare(x,z,yDiff,createCliff);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeSquare'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeSquare of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_changeSquare01
static int tolua_CenterSpace_GridSquareTemplateVector_changeSquare01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"SquareType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
  SquareType newType = *((SquareType*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeSquare'", NULL);
#endif
  {
   self->changeSquare(x,z,newType);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_GridSquareTemplateVector_changeSquare00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeSquare of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_changeSquare02
static int tolua_CenterSpace_GridSquareTemplateVector_changeSquare02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"SquareType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
  int yDiff = ((int)  tolua_tonumber(tolua_S,4,0));
  SquareType newType = *((SquareType*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeSquare'", NULL);
#endif
  {
   self->changeSquare(x,z,yDiff,newType);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_GridSquareTemplateVector_changeSquare01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: createValleyOrRidge of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_createValleyOrRidge00
static int tolua_CenterSpace_GridSquareTemplateVector_createValleyOrRidge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,8,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int startX = ((int)  tolua_tonumber(tolua_S,2,0));
  int startZ = ((int)  tolua_tonumber(tolua_S,3,0));
  int endX = ((int)  tolua_tonumber(tolua_S,4,0));
  int endZ = ((int)  tolua_tonumber(tolua_S,5,0));
  int width = ((int)  tolua_tonumber(tolua_S,6,0));
  int targetY = ((int)  tolua_tonumber(tolua_S,7,0));
  bool createCliff = ((bool)  tolua_toboolean(tolua_S,8,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createValleyOrRidge'", NULL);
#endif
  {
   self->createValleyOrRidge(startX,startZ,endX,endZ,width,targetY,createCliff);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createValleyOrRidge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createPlateau of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_createPlateau00
static int tolua_CenterSpace_GridSquareTemplateVector_createPlateau00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int startX = ((int)  tolua_tonumber(tolua_S,2,0));
  int startZ = ((int)  tolua_tonumber(tolua_S,3,0));
  int minRadius = ((int)  tolua_tonumber(tolua_S,4,0));
  int maxRadius = ((int)  tolua_tonumber(tolua_S,5,0));
  int targetY = ((int)  tolua_tonumber(tolua_S,6,0));
  bool createCliff = ((bool)  tolua_toboolean(tolua_S,7,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createPlateau'", NULL);
#endif
  {
   self->createPlateau(startX,startZ,minRadius,maxRadius,targetY,createCliff);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createPlateau'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSquaresBetweenPoints of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_getSquaresBetweenPoints00
static int tolua_CenterSpace_GridSquareTemplateVector_getSquaresBetweenPoints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  int x1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int z1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int z2 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSquaresBetweenPoints'", NULL);
#endif
  {
   std::deque<GridSquareTemplate*> tolua_ret = (std::deque<GridSquareTemplate*>)  self->getSquaresBetweenPoints(x1,z1,x2,z2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<GridSquareTemplate*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<GridSquareTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<GridSquareTemplate*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<GridSquareTemplate*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSquaresBetweenPoints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkEntireGrid of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_checkEntireGrid00
static int tolua_CenterSpace_GridSquareTemplateVector_checkEntireGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkEntireGrid'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->checkEntireGrid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkEntireGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fixSquareType of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_fixSquareType00
static int tolua_CenterSpace_GridSquareTemplateVector_fixSquareType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  GridSquareTemplate* square = ((GridSquareTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fixSquareType'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->fixSquareType(square);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fixSquareType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: checkSurroundings of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_checkSurroundings00
static int tolua_CenterSpace_GridSquareTemplateVector_checkSurroundings00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"TerrainChange",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  GridSquareTemplate* square = ((GridSquareTemplate*)  tolua_tousertype(tolua_S,2,0));
  bool forceOnce = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool createCliff = ((bool)  tolua_toboolean(tolua_S,4,false));
  TerrainChange change = *((TerrainChange*)  tolua_tousertype(tolua_S,5,0));
  bool changeTransitions = ((bool)  tolua_toboolean(tolua_S,6,true));
  bool isCircle = ((bool)  tolua_toboolean(tolua_S,7,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'checkSurroundings'", NULL);
#endif
  {
   self->checkSurroundings(square,forceOnce,createCliff,change,changeTransitions,isCircle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'checkSurroundings'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: adjustHeight of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_adjustHeight00
static int tolua_CenterSpace_GridSquareTemplateVector_adjustHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"TerrainChange",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  GridSquareTemplate* square = ((GridSquareTemplate*)  tolua_tousertype(tolua_S,2,0));
  bool forceOnce = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool createCliff = ((bool)  tolua_toboolean(tolua_S,4,false));
  TerrainChange change = *((TerrainChange*)  tolua_tousertype(tolua_S,5,0));
  bool changeTransitions = ((bool)  tolua_toboolean(tolua_S,6,true));
  bool isCircle = ((bool)  tolua_toboolean(tolua_S,7,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'adjustHeight'", NULL);
#endif
  {
   self->adjustHeight(square,forceOnce,createCliff,change,changeTransitions,isCircle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'adjustHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fixType of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_fixType00
static int tolua_CenterSpace_GridSquareTemplateVector_fixType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"TerrainChange",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,6,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,7,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  GridSquareTemplate* square = ((GridSquareTemplate*)  tolua_tousertype(tolua_S,2,0));
  bool forceOnce = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool createCliff = ((bool)  tolua_toboolean(tolua_S,4,false));
  TerrainChange change = *((TerrainChange*)  tolua_tousertype(tolua_S,5,0));
  bool changeTransitions = ((bool)  tolua_toboolean(tolua_S,6,true));
  bool isCircle = ((bool)  tolua_toboolean(tolua_S,7,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fixType'", NULL);
#endif
  {
   self->fixType(square,forceOnce,createCliff,change,changeTransitions,isCircle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fixType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startRecursiveSubdivision of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_startRecursiveSubdivision00
static int tolua_CenterSpace_GridSquareTemplateVector_startRecursiveSubdivision00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startRecursiveSubdivision'", NULL);
#endif
  {
   self->startRecursiveSubdivision();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startRecursiveSubdivision'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: writeToFile of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_writeToFile00
static int tolua_CenterSpace_GridSquareTemplateVector_writeToFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'writeToFile'", NULL);
#endif
  {
   self->writeToFile(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'writeToFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadFromFile of class  GridSquareTemplateVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareTemplateVector_loadFromFile00
static int tolua_CenterSpace_GridSquareTemplateVector_loadFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareTemplateVector* self = (GridSquareTemplateVector*)  tolua_tousertype(tolua_S,1,0);
  const std::string fileName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadFromFile'", NULL);
#endif
  {
   self->loadFromFile(fileName);
   tolua_pushcppstring(tolua_S,(const char*)fileName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_new00
static int tolua_CenterSpace_GridSquare_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* vector = ((GridSquareVector*)  tolua_tousertype(tolua_S,2,0));
  GridSquareTemplate* squareTemplate = ((GridSquareTemplate*)  tolua_tousertype(tolua_S,3,0));
  {
   GridSquare* tolua_ret = (GridSquare*)  Mtolua_new((GridSquare)(vector,squareTemplate));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquare");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_new00_local
static int tolua_CenterSpace_GridSquare_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GridSquareTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* vector = ((GridSquareVector*)  tolua_tousertype(tolua_S,2,0));
  GridSquareTemplate* squareTemplate = ((GridSquareTemplate*)  tolua_tousertype(tolua_S,3,0));
  {
   GridSquare* tolua_ret = (GridSquare*)  Mtolua_new((GridSquare)(vector,squareTemplate));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquare");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_delete00
static int tolua_CenterSpace_GridSquare_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: computeIndices of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_computeIndices00
static int tolua_CenterSpace_GridSquare_computeIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'computeIndices'", NULL);
#endif
  {
   self->computeIndices();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'computeIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_reset00
static int tolua_CenterSpace_GridSquare_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'", NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreIndices of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_hasMoreIndices00
static int tolua_CenterSpace_GridSquare_hasMoreIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreIndices'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreIndices();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextIndex of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_getNextIndex00
static int tolua_CenterSpace_GridSquare_getNextIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: moveNextIndex of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_moveNextIndex00
static int tolua_CenterSpace_GridSquare_moveNextIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'moveNextIndex'", NULL);
#endif
  {
   self->moveNextIndex();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'moveNextIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCenterX of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_getCenterX00
static int tolua_CenterSpace_GridSquare_getCenterX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCenterX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCenterX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCenterX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCenterY of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_getCenterY00
static int tolua_CenterSpace_GridSquare_getCenterY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCenterY'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCenterY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCenterY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCenterZ of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_getCenterZ00
static int tolua_CenterSpace_GridSquare_getCenterZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCenterZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCenterZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCenterZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureStep of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_getTextureStep00
static int tolua_CenterSpace_GridSquare_getTextureStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureStep'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTextureStep();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertices of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_getVertices00
static int tolua_CenterSpace_GridSquare_getVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertices'", NULL);
#endif
  {
   std::deque<TexturedVertex*> tolua_ret = (std::deque<TexturedVertex*>)  self->getVertices();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<TexturedVertex*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<TexturedVertex*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<TexturedVertex*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<TexturedVertex*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addVertex of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_addVertex00
static int tolua_CenterSpace_GridSquare_addVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addVertex'", NULL);
#endif
  {
   self->addVertex(vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findVertex of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_findVertex00
static int tolua_CenterSpace_GridSquare_findVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
  VertexXLocation xloc = ((VertexXLocation) (int)  tolua_tonumber(tolua_S,2,0));
  VertexYLocation yLoc = ((VertexYLocation) (int)  tolua_tonumber(tolua_S,3,0));
  VertexZLocation zLoc = ((VertexZLocation) (int)  tolua_tonumber(tolua_S,4,0));
  CliffFacing cf = ((CliffFacing) (int)  tolua_tonumber(tolua_S,5,CliffFacing::CF_NA));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findVertex'", NULL);
#endif
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  self->findVertex(xloc,yLoc,zLoc,cf);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findVertex of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_findVertex01
static int tolua_CenterSpace_GridSquare_findVertex01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
  VertexXLocation xloc = ((VertexXLocation) (int)  tolua_tonumber(tolua_S,2,0));
  VertexYLocation yLoc = ((VertexYLocation) (int)  tolua_tonumber(tolua_S,3,0));
  VertexZLocation zLoc = ((VertexZLocation) (int)  tolua_tonumber(tolua_S,4,0));
  bool hasTextureCoordinates = ((bool)  tolua_toboolean(tolua_S,5,0));
  CliffFacing cf = ((CliffFacing) (int)  tolua_tonumber(tolua_S,6,CliffFacing::CF_NA));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findVertex'", NULL);
#endif
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  self->findVertex(xloc,yLoc,zLoc,hasTextureCoordinates,cf);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GridSquare_findVertex00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: findIndex of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_findIndex00
static int tolua_CenterSpace_GridSquare_findIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
  VertexXLocation xloc = ((VertexXLocation) (int)  tolua_tonumber(tolua_S,2,0));
  VertexYLocation yLoc = ((VertexYLocation) (int)  tolua_tonumber(tolua_S,3,0));
  VertexZLocation zLoc = ((VertexZLocation) (int)  tolua_tonumber(tolua_S,4,0));
  CliffFacing cf = ((CliffFacing) (int)  tolua_tonumber(tolua_S,5,CliffFacing::CF_NA));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->findIndex(xloc,yLoc,zLoc,cf);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAlphaSplatCoords of class  GridSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquare_setAlphaSplatCoords00
static int tolua_CenterSpace_GridSquare_setAlphaSplatCoords00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquare",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquare* self = (GridSquare*)  tolua_tousertype(tolua_S,1,0);
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAlphaSplatCoords'", NULL);
#endif
  {
   self->setAlphaSplatCoords(vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAlphaSplatCoords'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_new00
static int tolua_CenterSpace_TexturedVertex_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float _x = ((float)  tolua_tonumber(tolua_S,2,0));
  float _y = ((float)  tolua_tonumber(tolua_S,3,0));
  float _z = ((float)  tolua_tonumber(tolua_S,4,0));
  VertexXLocation xLoc = ((VertexXLocation) (int)  tolua_tonumber(tolua_S,5,0));
  VertexYLocation yLoc = ((VertexYLocation) (int)  tolua_tonumber(tolua_S,6,0));
  VertexZLocation zLoc = ((VertexZLocation) (int)  tolua_tonumber(tolua_S,7,0));
  GridSquare* owner = ((GridSquare*)  tolua_tousertype(tolua_S,8,0));
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  Mtolua_new((TexturedVertex)(_x,_y,_z,xLoc,yLoc,zLoc,owner));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_new00_local
static int tolua_CenterSpace_TexturedVertex_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float _x = ((float)  tolua_tonumber(tolua_S,2,0));
  float _y = ((float)  tolua_tonumber(tolua_S,3,0));
  float _z = ((float)  tolua_tonumber(tolua_S,4,0));
  VertexXLocation xLoc = ((VertexXLocation) (int)  tolua_tonumber(tolua_S,5,0));
  VertexYLocation yLoc = ((VertexYLocation) (int)  tolua_tonumber(tolua_S,6,0));
  VertexZLocation zLoc = ((VertexZLocation) (int)  tolua_tonumber(tolua_S,7,0));
  GridSquare* owner = ((GridSquare*)  tolua_tousertype(tolua_S,8,0));
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  Mtolua_new((TexturedVertex)(_x,_y,_z,xLoc,yLoc,zLoc,owner));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_new01
static int tolua_CenterSpace_TexturedVertex_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,2,0));
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  Mtolua_new((TexturedVertex)(vertex));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_TexturedVertex_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_new01_local
static int tolua_CenterSpace_TexturedVertex_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,2,0));
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  Mtolua_new((TexturedVertex)(vertex));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_TexturedVertex_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_delete00
static int tolua_CenterSpace_TexturedVertex_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TexturedVertex* self = (TexturedVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotTextureCoords of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_gotTextureCoords00
static int tolua_CenterSpace_TexturedVertex_gotTextureCoords00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TexturedVertex* self = (TexturedVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotTextureCoords'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->gotTextureCoords();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'gotTextureCoords'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: gotTextureCoords of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_gotTextureCoords01
static int tolua_CenterSpace_TexturedVertex_gotTextureCoords01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  TexturedVertex* self = (TexturedVertex*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'gotTextureCoords'", NULL);
#endif
  {
   self->gotTextureCoords(value);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_TexturedVertex_gotTextureCoords00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexXYZ of class  TexturedVertex */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_TexturedVertex_getVertexXYZ00
static int tolua_CenterSpace_TexturedVertex_getVertexXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TexturedVertex* self = (TexturedVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexXYZ'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getVertexXYZ();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_new00
static int tolua_CenterSpace_GridSquareVector_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,2,0));
  {
   GridSquareVector* tolua_ret = (GridSquareVector*)  Mtolua_new((GridSquareVector)(grid));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquareVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_new00_local
static int tolua_CenterSpace_GridSquareVector_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,2,0));
  {
   GridSquareVector* tolua_ret = (GridSquareVector*)  Mtolua_new((GridSquareVector)(grid));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquareVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_delete00
static int tolua_CenterSpace_GridSquareVector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initialize of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_initialize00
static int tolua_CenterSpace_GridSquareVector_initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initialize'", NULL);
#endif
  {
   self->initialize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resetGridSquares of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_resetGridSquares00
static int tolua_CenterSpace_GridSquareVector_resetGridSquares00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resetGridSquares'", NULL);
#endif
  {
   self->resetGridSquares();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetGridSquares'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridSquare of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getGridSquare00
static int tolua_CenterSpace_GridSquareVector_getGridSquare00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridSquare'", NULL);
#endif
  {
   GridSquare* tolua_ret = (GridSquare*)  self->getGridSquare(x,z);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquare");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGridSquare'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: computeIndices of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_computeIndices00
static int tolua_CenterSpace_GridSquareVector_computeIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'computeIndices'", NULL);
#endif
  {
   self->computeIndices();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'computeIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreVertices of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_hasMoreVertices00
static int tolua_CenterSpace_GridSquareVector_hasMoreVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreVertices'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreVertices();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextVertex of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getNextVertex00
static int tolua_CenterSpace_GridSquareVector_getNextVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextVertex'", NULL);
#endif
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  self->getNextVertex();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreIndices of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_hasMoreIndices00
static int tolua_CenterSpace_GridSquareVector_hasMoreIndices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreIndices'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreIndices();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreIndices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextIndex of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getNextIndex00
static int tolua_CenterSpace_GridSquareVector_getNextIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextIndex'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getNextIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertVertex of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_insertVertex00
static int tolua_CenterSpace_GridSquareVector_insertVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TexturedVertex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,2,0));
  GridSquare* owner = ((GridSquare*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertVertex'", NULL);
#endif
  {
   self->insertVertex(vertex,owner);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertVertex of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_insertVertex01
static int tolua_CenterSpace_GridSquareVector_insertVertex01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"TexturedVertex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"GridSquare",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,3,0));
  GridSquare* owner = ((GridSquare*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertVertex'", NULL);
#endif
  {
   self->insertVertex(i,vertex,owner);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_GridSquareVector_insertVertex00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertex of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getVertex00
static int tolua_CenterSpace_GridSquareVector_getVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertex'", NULL);
#endif
  {
   TexturedVertex* tolua_ret = (TexturedVertex*)  self->getVertex(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TexturedVertex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateTextureCoordinates of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_updateTextureCoordinates00
static int tolua_CenterSpace_GridSquareVector_updateTextureCoordinates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TexturedVertex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
  TexturedVertex* vertex = ((TexturedVertex*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateTextureCoordinates'", NULL);
#endif
  {
   self->updateTextureCoordinates(vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateTextureCoordinates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattlefield of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getBattlefield00
static int tolua_CenterSpace_GridSquareVector_getBattlefield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattlefield'", NULL);
#endif
  {
   Ogre::ManualObject* tolua_ret = (Ogre::ManualObject*)  self->getBattlefield();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::ManualObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattlefield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattlefieldGrid of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getBattlefieldGrid00
static int tolua_CenterSpace_GridSquareVector_getBattlefieldGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattlefieldGrid'", NULL);
#endif
  {
   BattlefieldGrid* tolua_ret = (BattlefieldGrid*)  self->getBattlefieldGrid();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGrid");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattlefieldGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridSquareTemplateVector of class  GridSquareVector */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GridSquareVector_getGridSquareTemplateVector00
static int tolua_CenterSpace_GridSquareVector_getGridSquareTemplateVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GridSquareVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GridSquareVector* self = (GridSquareVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridSquareTemplateVector'", NULL);
#endif
  {
   GridSquareTemplateVector* tolua_ret = (GridSquareTemplateVector*)  self->getGridSquareTemplateVector();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquareTemplateVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGridSquareTemplateVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_delete00
static int tolua_CenterSpace_BattlefieldGridCell_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: occupyCell of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_occupyCell00
static int tolua_CenterSpace_BattlefieldGridCell_occupyCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'occupyCell'", NULL);
#endif
  {
   self->occupyCell(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'occupyCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: leaveCell of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_leaveCell00
static int tolua_CenterSpace_BattlefieldGridCell_leaveCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'leaveCell'", NULL);
#endif
  {
   self->leaveCell();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'leaveCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOccupied of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_isOccupied00
static int tolua_CenterSpace_BattlefieldGridCell_isOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOccupied'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOccupied();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOccupant of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getOccupant00
static int tolua_CenterSpace_BattlefieldGridCell_getOccupant00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOccupant'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getOccupant();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOccupant'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRoughness of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getRoughness00
static int tolua_CenterSpace_BattlefieldGridCell_getRoughness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRoughness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRoughness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRoughness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRoughness of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setRoughness00
static int tolua_CenterSpace_BattlefieldGridCell_setRoughness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  float roughness = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRoughness'", NULL);
#endif
  {
   self->setRoughness(roughness);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRoughness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSquareType of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getSquareType00
static int tolua_CenterSpace_BattlefieldGridCell_getSquareType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSquareType'", NULL);
#endif
  {
   SquareType tolua_ret = (SquareType)  self->getSquareType();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((SquareType)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"SquareType");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(SquareType));
     tolua_pushusertype(tolua_S,tolua_obj,"SquareType");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSquareType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSquareType of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setSquareType00
static int tolua_CenterSpace_BattlefieldGridCell_setSquareType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"SquareType",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  SquareType slope = *((SquareType*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSquareType'", NULL);
#endif
  {
   self->setSquareType(slope);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSquareType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPassable of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_isPassable00
static int tolua_CenterSpace_BattlefieldGridCell_isPassable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPassable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPassable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPassable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPassable of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setPassable00
static int tolua_CenterSpace_BattlefieldGridCell_setPassable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPassable'", NULL);
#endif
  {
   self->setPassable(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPassable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getX of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getX00
static int tolua_CenterSpace_BattlefieldGridCell_getX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getY of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getY00
static int tolua_CenterSpace_BattlefieldGridCell_getY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getY'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZ of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getZ00
static int tolua_CenterSpace_BattlefieldGridCell_getZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPointInside of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_isPointInside00
static int tolua_CenterSpace_BattlefieldGridCell_isPointInside00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float z = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPointInside'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPointInside(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPointInside'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMiddle of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getMiddle00
static int tolua_CenterSpace_BattlefieldGridCell_getMiddle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMiddle'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getMiddle();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMiddle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMiddle2 of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getMiddle200
static int tolua_CenterSpace_BattlefieldGridCell_getMiddle200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMiddle2'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getMiddle2();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMiddle2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMiddleFloor of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getMiddleFloor00
static int tolua_CenterSpace_BattlefieldGridCell_getMiddleFloor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMiddleFloor'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getMiddleFloor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMiddleFloor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementCost of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getMovementCost00
static int tolua_CenterSpace_BattlefieldGridCell_getMovementCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementCost'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMovementCost();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNegXNegZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getNegXNegZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_getNegXNegZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNegXNegZVertex'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getNegXNegZVertex();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNegXNegZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNegXNegZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setNegXNegZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_setNegXNegZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* vertex = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNegXNegZVertex'", NULL);
#endif
  {
   self->setNegXNegZVertex(*vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNegXNegZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNegXPosZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getNegXPosZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_getNegXPosZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNegXPosZVertex'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getNegXPosZVertex();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNegXPosZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNegXPosZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setNegXPosZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_setNegXPosZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* vertex = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNegXPosZVertex'", NULL);
#endif
  {
   self->setNegXPosZVertex(*vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNegXPosZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosXNegZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getPosXNegZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_getPosXNegZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosXNegZVertex'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getPosXNegZVertex();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosXNegZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosXNegZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setPosXNegZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_setPosXNegZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* vertex = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosXNegZVertex'", NULL);
#endif
  {
   self->setPosXNegZVertex(*vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosXNegZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosXPosZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_getPosXPosZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_getPosXPosZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosXPosZVertex'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getPosXPosZVertex();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosXPosZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosXPosZVertex of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setPosXPosZVertex00
static int tolua_CenterSpace_BattlefieldGridCell_setPosXPosZVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* vertex = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosXPosZVertex'", NULL);
#endif
  {
   self->setPosXPosZVertex(*vertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosXPosZVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMarkedToBeOccupied of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_isMarkedToBeOccupied00
static int tolua_CenterSpace_BattlefieldGridCell_isMarkedToBeOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMarkedToBeOccupied'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMarkedToBeOccupied();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMarkedToBeOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMarkedToBeOccupied of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_setMarkedToBeOccupied00
static int tolua_CenterSpace_BattlefieldGridCell_setMarkedToBeOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMarkedToBeOccupied'", NULL);
#endif
  {
   self->setMarkedToBeOccupied(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMarkedToBeOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAvailable of class  BattlefieldGridCell */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGridCell_isAvailable00
static int tolua_CenterSpace_BattlefieldGridCell_isAvailable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGridCell* self = (BattlefieldGridCell*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAvailable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAvailable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAvailable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTerrainTemplate of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getTerrainTemplate00
static int tolua_CenterSpace_BattlefieldGrid_getTerrainTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTerrainTemplate'", NULL);
#endif
  {
   TerrainTemplate* tolua_ret = (TerrainTemplate*)  self->getTerrainTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTerrainTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTerrainTemplate of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setTerrainTemplate00
static int tolua_CenterSpace_BattlefieldGrid_setTerrainTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"TerrainTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  TerrainTemplate* terrain = ((TerrainTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTerrainTemplate'", NULL);
#endif
  {
   self->setTerrainTemplate(terrain);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTerrainTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSideLength of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getSideLength00
static int tolua_CenterSpace_BattlefieldGrid_getSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSideLength'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getSideLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSideLength of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setSideLength00
static int tolua_CenterSpace_BattlefieldGrid_setSideLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int length = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSideLength'", NULL);
#endif
  {
   self->setSideLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSideLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattlefield of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getBattlefield00
static int tolua_CenterSpace_BattlefieldGrid_getBattlefield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattlefield'", NULL);
#endif
  {
   Ogre::ManualObject* tolua_ret = (Ogre::ManualObject*)  self->getBattlefield();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::ManualObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattlefield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBattlefield of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setBattlefield00
static int tolua_CenterSpace_BattlefieldGrid_setBattlefield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::ManualObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  Ogre::ManualObject* manual = ((Ogre::ManualObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBattlefield'", NULL);
#endif
  {
   self->setBattlefield(manual);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBattlefield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxRoughness of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getMaxRoughness00
static int tolua_CenterSpace_BattlefieldGrid_getMaxRoughness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxRoughness'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxRoughness();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxRoughness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxRoughness of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setMaxRoughness00
static int tolua_CenterSpace_BattlefieldGrid_setMaxRoughness00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxRoughness'", NULL);
#endif
  {
   self->setMaxRoughness(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxRoughness'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxVertexHeight of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getMaxVertexHeight00
static int tolua_CenterSpace_BattlefieldGrid_getMaxVertexHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxVertexHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMaxVertexHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxVertexHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxVertexHeight of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setMaxVertexHeight00
static int tolua_CenterSpace_BattlefieldGrid_setMaxVertexHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxVertexHeight'", NULL);
#endif
  {
   self->setMaxVertexHeight(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxVertexHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getGridCell00
static int tolua_CenterSpace_BattlefieldGrid_getGridCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getGridCell(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGridCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getGridCell01
static int tolua_CenterSpace_BattlefieldGrid_getGridCell01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getGridCell(x,z);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_BattlefieldGrid_getGridCell00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getGridCell02
static int tolua_CenterSpace_BattlefieldGrid_getGridCell02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float z = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getGridCell(x,z);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_BattlefieldGrid_getGridCell01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: seedEmptyGridCellSearch of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_seedEmptyGridCellSearch00
static int tolua_CenterSpace_BattlefieldGrid_seedEmptyGridCellSearch00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'seedEmptyGridCellSearch'", NULL);
#endif
  {
   self->seedEmptyGridCellSearch(x,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'seedEmptyGridCellSearch'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextEmptyGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getNextEmptyGridCell00
static int tolua_CenterSpace_BattlefieldGrid_getNextEmptyGridCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextEmptyGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getNextEmptyGridCell();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextEmptyGridCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCloserGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getCloserGridCell00
static int tolua_CenterSpace_BattlefieldGrid_getCloserGridCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int z1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int z2 = ((int)  tolua_tonumber(tolua_S,5,0));
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCloserGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getCloserGridCell(x1,z1,x2,z2,group);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCloserGridCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCloserGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getCloserGridCell01
static int tolua_CenterSpace_BattlefieldGrid_getCloserGridCell01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int z1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int z2 = ((int)  tolua_tonumber(tolua_S,5,0));
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCloserGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getCloserGridCell(x1,z1,x2,z2,controller);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_BattlefieldGrid_getCloserGridCell00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCloserGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getCloserGridCell02
static int tolua_CenterSpace_BattlefieldGrid_getCloserGridCell02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int z1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int z2 = ((int)  tolua_tonumber(tolua_S,5,0));
  float range = ((float)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCloserGridCell'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getCloserGridCell(x1,z1,x2,z2,range);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_BattlefieldGrid_getCloserGridCell01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_reset00
static int tolua_CenterSpace_BattlefieldGrid_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'", NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGridCell of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setGridCell00
static int tolua_CenterSpace_BattlefieldGrid_setGridCell00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
  BattlefieldGridCell* cell = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGridCell'", NULL);
#endif
  {
   self->setGridCell(index,cell);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGridCell'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGridSquareTemplateVector of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getGridSquareTemplateVector00
static int tolua_CenterSpace_BattlefieldGrid_getGridSquareTemplateVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGridSquareTemplateVector'", NULL);
#endif
  {
   GridSquareTemplateVector* tolua_ret = (GridSquareTemplateVector*)  self->getGridSquareTemplateVector();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GridSquareTemplateVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGridSquareTemplateVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGridSquareTemplateVector of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setGridSquareTemplateVector00
static int tolua_CenterSpace_BattlefieldGrid_setGridSquareTemplateVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GridSquareTemplateVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  GridSquareTemplateVector* vector = ((GridSquareTemplateVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGridSquareTemplateVector'", NULL);
#endif
  {
   self->setGridSquareTemplateVector(vector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGridSquareTemplateVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCentre of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_isCentre00
static int tolua_CenterSpace_BattlefieldGrid_isCentre00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCentre'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCentre(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCentre'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSquareDistance of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getSquareDistance00
static int tolua_CenterSpace_BattlefieldGrid_getSquareDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* a = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
  BattlefieldGridCell* b = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSquareDistance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSquareDistance(a,b);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSquareDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMission of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_getMission00
static int tolua_CenterSpace_BattlefieldGrid_getMission00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMission'", NULL);
#endif
  {
   Mission* tolua_ret = (Mission*)  self->getMission();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Mission");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMission'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMission of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_setMission00
static int tolua_CenterSpace_BattlefieldGrid_setMission00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Mission",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  Mission* mission = ((Mission*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMission'", NULL);
#endif
  {
   self->setMission(mission);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMission'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAvailable of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_isAvailable00
static int tolua_CenterSpace_BattlefieldGrid_isAvailable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAvailable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAvailable(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAvailable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPassable of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_isPassable00
static int tolua_CenterSpace_BattlefieldGrid_isPassable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPassable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPassable(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPassable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isOccupied of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_isOccupied00
static int tolua_CenterSpace_BattlefieldGrid_isOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isOccupied'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isOccupied(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: placeMCUs of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_placeMCUs00
static int tolua_CenterSpace_BattlefieldGrid_placeMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* self = (BattlefieldGrid*)  tolua_tousertype(tolua_S,1,0);
  LuaMCUDeque* mcus = ((LuaMCUDeque*)  tolua_tousertype(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int z = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'placeMCUs'", NULL);
#endif
  {
   self->placeMCUs(mcus,x,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'placeMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: calculateDistance of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_calculateDistance00
static int tolua_CenterSpace_BattlefieldGrid_calculateDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int x1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int z1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int z2 = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   float tolua_ret = (float)  BattlefieldGrid::calculateDistance(x1,z1,x2,z2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'calculateDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: calculateSquareDistance of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_BattlefieldGrid_calculateSquareDistance00
static int tolua_CenterSpace_BattlefieldGrid_calculateSquareDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int x1 = ((int)  tolua_tonumber(tolua_S,2,0));
  int z1 = ((int)  tolua_tonumber(tolua_S,3,0));
  int x2 = ((int)  tolua_tonumber(tolua_S,4,0));
  int z2 = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   float tolua_ret = (float)  BattlefieldGrid::calculateSquareDistance(x1,z1,x2,z2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'calculateSquareDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UnitSize of class  BattlefieldGrid */
#ifndef TOLUA_DISABLE_tolua_get_BattlefieldGrid_UnitSize
static int tolua_get_BattlefieldGrid_UnitSize(lua_State* tolua_S)
{
  tolua_pushnumber(tolua_S,(lua_Number)BattlefieldGrid::UnitSize);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_new00
static int tolua_CenterSpace_PathFindingNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  Mtolua_new((PathFindingNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_new00_local
static int tolua_CenterSpace_PathFindingNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  Mtolua_new((PathFindingNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_new01
static int tolua_CenterSpace_PathFindingNode_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  BattlefieldGridCell* actual = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
  bool isStart = ((bool)  tolua_toboolean(tolua_S,3,false));
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  Mtolua_new((PathFindingNode)(actual,isStart));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_PathFindingNode_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_new01_local
static int tolua_CenterSpace_PathFindingNode_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  BattlefieldGridCell* actual = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
  bool isStart = ((bool)  tolua_toboolean(tolua_S,3,false));
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  Mtolua_new((PathFindingNode)(actual,isStart));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_PathFindingNode_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_new02
static int tolua_CenterSpace_PathFindingNode_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  PathFindingNode* parent = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
  float totalMovementCost = ((float)  tolua_tonumber(tolua_S,3,0));
  BattlefieldGridCell* actual = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,4,0));
  bool isStart = ((bool)  tolua_toboolean(tolua_S,5,false));
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  Mtolua_new((PathFindingNode)(parent,totalMovementCost,actual,isStart));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_PathFindingNode_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_new02_local
static int tolua_CenterSpace_PathFindingNode_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  PathFindingNode* parent = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
  float totalMovementCost = ((float)  tolua_tonumber(tolua_S,3,0));
  BattlefieldGridCell* actual = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,4,0));
  bool isStart = ((bool)  tolua_toboolean(tolua_S,5,false));
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  Mtolua_new((PathFindingNode)(parent,totalMovementCost,actual,isStart));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_PathFindingNode_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_delete00
static int tolua_CenterSpace_PathFindingNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getParent00
static int tolua_CenterSpace_PathFindingNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'", NULL);
#endif
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  self->getParent();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setParent00
static int tolua_CenterSpace_PathFindingNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  PathFindingNode* parent = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'", NULL);
#endif
  {
   self->setParent(parent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMovementCost of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getMovementCost00
static int tolua_CenterSpace_PathFindingNode_getMovementCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMovementCost'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getMovementCost();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMovementCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMovementCost of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setMovementCost00
static int tolua_CenterSpace_PathFindingNode_setMovementCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  float movement = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMovementCost'", NULL);
#endif
  {
   self->setMovementCost(movement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMovementCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalMovementCost of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getTotalMovementCost00
static int tolua_CenterSpace_PathFindingNode_getTotalMovementCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalMovementCost'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTotalMovementCost();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalMovementCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTotalMovementCost of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setTotalMovementCost00
static int tolua_CenterSpace_PathFindingNode_setTotalMovementCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  float total = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTotalMovementCost'", NULL);
#endif
  {
   self->setTotalMovementCost(total);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTotalMovementCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEstimatedCostToGoal of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getEstimatedCostToGoal00
static int tolua_CenterSpace_PathFindingNode_getEstimatedCostToGoal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEstimatedCostToGoal'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEstimatedCostToGoal();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEstimatedCostToGoal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEstimatedCostToGoal of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setEstimatedCostToGoal00
static int tolua_CenterSpace_PathFindingNode_setEstimatedCostToGoal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  float value = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEstimatedCostToGoal'", NULL);
#endif
  {
   self->setEstimatedCostToGoal(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEstimatedCostToGoal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWholePathCost of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getWholePathCost00
static int tolua_CenterSpace_PathFindingNode_getWholePathCost00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWholePathCost'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getWholePathCost();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWholePathCost'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getX of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getX00
static int tolua_CenterSpace_PathFindingNode_getX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getX'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setX of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setX00
static int tolua_CenterSpace_PathFindingNode_setX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setX'", NULL);
#endif
  {
   self->setX(x);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZ of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getZ00
static int tolua_CenterSpace_PathFindingNode_getZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZ'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setZ of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setZ00
static int tolua_CenterSpace_PathFindingNode_setZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  int z = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setZ'", NULL);
#endif
  {
   self->setZ(z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActual of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_getActual00
static int tolua_CenterSpace_PathFindingNode_getActual00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActual'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getActual();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActual'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActual of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_setActual00
static int tolua_CenterSpace_PathFindingNode_setActual00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* actual = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActual'", NULL);
#endif
  {
   self->setActual(actual);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActual'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDiagonal of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_isDiagonal00
static int tolua_CenterSpace_PathFindingNode_isDiagonal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  PathFindingNode* neighbour = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDiagonal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDiagonal(neighbour);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDiagonal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSloped of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_isSloped00
static int tolua_CenterSpace_PathFindingNode_isSloped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  PathFindingNode* neighbour = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSloped'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSloped(neighbour);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSloped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCliff of class  PathFindingNode */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingNode_isCliff00
static int tolua_CenterSpace_PathFindingNode_isCliff00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingNode* self = (PathFindingNode*)  tolua_tousertype(tolua_S,1,0);
  PathFindingNode* neighbour = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCliff'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCliff(neighbour);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCliff'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PathFindingManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingManager_new00
static int tolua_CenterSpace_PathFindingManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,2,0));
  {
   PathFindingManager* tolua_ret = (PathFindingManager*)  Mtolua_new((PathFindingManager)(grid));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PathFindingManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingManager_new00_local
static int tolua_CenterSpace_PathFindingManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PathFindingManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,2,0));
  {
   PathFindingManager* tolua_ret = (PathFindingManager*)  Mtolua_new((PathFindingManager)(grid));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PathFindingManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingManager_delete00
static int tolua_CenterSpace_PathFindingManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingManager* self = (PathFindingManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: findPath of class  PathFindingManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PathFindingManager_findPath00
static int tolua_CenterSpace_PathFindingManager_findPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PathFindingManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"DriveTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PathFindingManager* self = (PathFindingManager*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* start = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
  BattlefieldGridCell* end = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,3,0));
  DriveTemplate* drive = ((DriveTemplate*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'findPath'", NULL);
#endif
  {
   PathFindingNode* tolua_ret = (PathFindingNode*)  self->findPath(start,end,drive);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'findPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_new00
static int tolua_CenterSpace_MCUController_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUController* tolua_ret = (MCUController*)  Mtolua_new((MCUController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_new00_local
static int tolua_CenterSpace_MCUController_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUController* tolua_ret = (MCUController*)  Mtolua_new((MCUController)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_new01
static int tolua_CenterSpace_MCUController_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,3,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,4,0));
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,5,0));
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,6,0));
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,7,0));
  int battlefieldId = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   MCUController* tolua_ret = (MCUController*)  Mtolua_new((MCUController)(node,entity,mcu,player,location,grid,battlefieldId));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUController_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_new01_local
static int tolua_CenterSpace_MCUController_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,3,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,4,0));
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,5,0));
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,6,0));
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,7,0));
  int battlefieldId = ((int)  tolua_tonumber(tolua_S,8,0));
  {
   MCUController* tolua_ret = (MCUController*)  Mtolua_new((MCUController)(node,entity,mcu,player,location,grid,battlefieldId));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUController_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_new02
static int tolua_CenterSpace_MCUController_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MCUAnimationController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"KinematicCharacterController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,9,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,3,0));
  MCUAnimationController* anim = ((MCUAnimationController*)  tolua_tousertype(tolua_S,4,0));
  KinematicCharacterController* physics = ((KinematicCharacterController*)  tolua_tousertype(tolua_S,5,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,6,0));
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,7,0));
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,8,0));
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,9,0));
  float height = ((float)  tolua_tonumber(tolua_S,10,0));
  {
   MCUController* tolua_ret = (MCUController*)  Mtolua_new((MCUController)(node,entity,anim,physics,mcu,player,location,grid,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUController_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_new02_local
static int tolua_CenterSpace_MCUController_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::SceneNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MCUAnimationController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"KinematicCharacterController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,8,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,9,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Ogre::SceneNode* node = ((Ogre::SceneNode*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,3,0));
  MCUAnimationController* anim = ((MCUAnimationController*)  tolua_tousertype(tolua_S,4,0));
  KinematicCharacterController* physics = ((KinematicCharacterController*)  tolua_tousertype(tolua_S,5,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,6,0));
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,7,0));
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,8,0));
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,9,0));
  float height = ((float)  tolua_tonumber(tolua_S,10,0));
  {
   MCUController* tolua_ret = (MCUController*)  Mtolua_new((MCUController)(node,entity,anim,physics,mcu,player,location,grid,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUController_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_delete00
static int tolua_CenterSpace_MCUController_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MCUController::startTurn of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_MCUController__startTurn00
static int tolua_CenterSpace_MCUController_MCUController__startTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MCUController::startTurn'", NULL);
#endif
  {
   self->MCUController::startTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MCUController__startTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MCUController::endTurn of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_MCUController__endTurn00
static int tolua_CenterSpace_MCUController_MCUController__endTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MCUController::endTurn'", NULL);
#endif
  {
   self->MCUController::endTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MCUController__endTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEntity of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getEntity00
static int tolua_CenterSpace_MCUController_getEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEntity'", NULL);
#endif
  {
   Ogre::Entity* tolua_ret = (Ogre::Entity*)  self->getEntity();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::Entity");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEntity of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setEntity00
static int tolua_CenterSpace_MCUController_setEntity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::Entity",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Entity* entity = ((Ogre::Entity*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEntity'", NULL);
#endif
  {
   self->setEntity(entity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEntity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUAnimationController of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getMCUAnimationController00
static int tolua_CenterSpace_MCUController_getMCUAnimationController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUAnimationController'", NULL);
#endif
  {
   MCUAnimationController* tolua_ret = (MCUAnimationController*)  self->getMCUAnimationController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUAnimationController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUAnimationController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUAnimationController of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setMCUAnimationController00
static int tolua_CenterSpace_MCUController_setMCUAnimationController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUAnimationController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUAnimationController* anim = ((MCUAnimationController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUAnimationController'", NULL);
#endif
  {
   self->setMCUAnimationController(anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUAnimationController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getKinematicCharacterController of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getKinematicCharacterController00
static int tolua_CenterSpace_MCUController_getKinematicCharacterController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getKinematicCharacterController'", NULL);
#endif
  {
   KinematicCharacterController* tolua_ret = (KinematicCharacterController*)  self->getKinematicCharacterController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"KinematicCharacterController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getKinematicCharacterController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setKinematicCharacterController of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setKinematicCharacterController00
static int tolua_CenterSpace_MCUController_setKinematicCharacterController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"KinematicCharacterController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  KinematicCharacterController* physics = ((KinematicCharacterController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setKinematicCharacterController'", NULL);
#endif
  {
   self->setKinematicCharacterController(physics);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setKinematicCharacterController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMechanizedCombatUnit of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getMechanizedCombatUnit00
static int tolua_CenterSpace_MCUController_getMechanizedCombatUnit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMechanizedCombatUnit'", NULL);
#endif
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  self->getMechanizedCombatUnit();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMechanizedCombatUnit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMechanizedCombatUnit of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setMechanizedCombatUnit00
static int tolua_CenterSpace_MCUController_setMechanizedCombatUnit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMechanizedCombatUnit'", NULL);
#endif
  {
   self->setMechanizedCombatUnit(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMechanizedCombatUnit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerBattleState of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getPlayerBattleState00
static int tolua_CenterSpace_MCUController_getPlayerBattleState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerBattleState'", NULL);
#endif
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  self->getPlayerBattleState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerBattleState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerBattleState of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setPlayerBattleState00
static int tolua_CenterSpace_MCUController_setPlayerBattleState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerBattleState'", NULL);
#endif
  {
   self->setPlayerBattleState(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerBattleState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentLocation of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getCurrentLocation00
static int tolua_CenterSpace_MCUController_getCurrentLocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentLocation'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getCurrentLocation();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentLocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentLocation of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setCurrentLocation00
static int tolua_CenterSpace_MCUController_setCurrentLocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentLocation'", NULL);
#endif
  {
   self->setCurrentLocation(location);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentLocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShield of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getShield00
static int tolua_CenterSpace_MCUController_getShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShield'", NULL);
#endif
  {
   Shield* tolua_ret = (Shield*)  self->getShield();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Shield");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setShield of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setShield00
static int tolua_CenterSpace_MCUController_setShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  Shield* shield = ((Shield*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setShield'", NULL);
#endif
  {
   self->setShield(shield);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentPath of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getCurrentPath00
static int tolua_CenterSpace_MCUController_getCurrentPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentPath'", NULL);
#endif
  {
   std::deque<BattlefieldGridCell*> tolua_ret = (std::deque<BattlefieldGridCell*>)  self->getCurrentPath();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<BattlefieldGridCell*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<BattlefieldGridCell*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<BattlefieldGridCell*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<BattlefieldGridCell*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentPath of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setCurrentPath00
static int tolua_CenterSpace_MCUController_setCurrentPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PathFindingNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  PathFindingNode* goal = ((PathFindingNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentPath'", NULL);
#endif
  {
   self->setCurrentPath(goal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentGoal of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getCurrentGoal00
static int tolua_CenterSpace_MCUController_getCurrentGoal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentGoal'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getCurrentGoal();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentGoal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: moveAlongPath of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_moveAlongPath00
static int tolua_CenterSpace_MCUController_moveAlongPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'moveAlongPath'", NULL);
#endif
  {
   self->moveAlongPath();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'moveAlongPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMoving of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_isMoving00
static int tolua_CenterSpace_MCUController_isMoving00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMoving'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMoving();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMoving'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopMoving of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_stopMoving00
static int tolua_CenterSpace_MCUController_stopMoving00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopMoving'", NULL);
#endif
  {
   self->stopMoving();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopMoving'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: giveStopOrder of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_giveStopOrder00
static int tolua_CenterSpace_MCUController_giveStopOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'giveStopOrder'", NULL);
#endif
  {
   self->giveStopOrder();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'giveStopOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lowMovementEnergy of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_lowMovementEnergy00
static int tolua_CenterSpace_MCUController_lowMovementEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lowMovementEnergy'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->lowMovementEnergy();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lowMovementEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasPath of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_hasPath00
static int tolua_CenterSpace_MCUController_hasPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasPath'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasPath();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasPath of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_hasPath01
static int tolua_CenterSpace_MCUController_hasPath01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasPath'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasPath();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUController_hasPath00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGrid of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getGrid00
static int tolua_CenterSpace_MCUController_getGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGrid'", NULL);
#endif
  {
   BattlefieldGrid* tolua_ret = (BattlefieldGrid*)  self->getGrid();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGrid");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBattlefieldGrid of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setBattlefieldGrid00
static int tolua_CenterSpace_MCUController_setBattlefieldGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBattlefieldGrid'", NULL);
#endif
  {
   self->setBattlefieldGrid(grid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBattlefieldGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasTarget of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_hasTarget00
static int tolua_CenterSpace_MCUController_hasTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasTarget();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rangeToTarget of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_rangeToTarget00
static int tolua_CenterSpace_MCUController_rangeToTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rangeToTarget'", NULL);
#endif
  {
   float tolua_ret = (float)  self->rangeToTarget();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rangeToTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentTarget of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getCurrentTarget00
static int tolua_CenterSpace_MCUController_getCurrentTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentTarget'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getCurrentTarget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentTarget of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setCurrentTarget00
static int tolua_CenterSpace_MCUController_setCurrentTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentTarget'", NULL);
#endif
  {
   self->setCurrentTarget(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: targetedBy of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_targetedBy00
static int tolua_CenterSpace_MCUController_targetedBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'targetedBy'", NULL);
#endif
  {
   self->targetedBy(source);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'targetedBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: noLongerTargetedBy of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_noLongerTargetedBy00
static int tolua_CenterSpace_MCUController_noLongerTargetedBy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'noLongerTargetedBy'", NULL);
#endif
  {
   self->noLongerTargetedBy(source);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'noLongerTargetedBy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: targetDestroyed of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_targetDestroyed00
static int tolua_CenterSpace_MCUController_targetDestroyed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'targetDestroyed'", NULL);
#endif
  {
   self->targetDestroyed();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'targetDestroyed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIGroup of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getAIGroup00
static int tolua_CenterSpace_MCUController_getAIGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIGroup'", NULL);
#endif
  {
   AIGroup* tolua_ret = (AIGroup*)  self->getAIGroup();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAIGroup of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setAIGroup00
static int tolua_CenterSpace_MCUController_setAIGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAIGroup'", NULL);
#endif
  {
   self->setAIGroup(group);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAIGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattlefieldID of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getBattlefieldID00
static int tolua_CenterSpace_MCUController_getBattlefieldID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattlefieldID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getBattlefieldID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattlefieldID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBattlefieldID of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setBattlefieldID00
static int tolua_CenterSpace_MCUController_setBattlefieldID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBattlefieldID'", NULL);
#endif
  {
   self->setBattlefieldID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBattlefieldID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isActive of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_isActive00
static int tolua_CenterSpace_MCUController_isActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isActive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setActive of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setActive00
static int tolua_CenterSpace_MCUController_setActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setActive'", NULL);
#endif
  {
   self->setActive(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isVisible of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_isVisible00
static int tolua_CenterSpace_MCUController_isVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisible of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setVisible00
static int tolua_CenterSpace_MCUController_setVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisible'", NULL);
#endif
  {
   self->setVisible(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCloserThan of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_isCloserThan00
static int tolua_CenterSpace_MCUController_isCloserThan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Ogre::Real",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* point = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  Ogre::Real squaredDistance = *((Ogre::Real*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCloserThan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCloserThan(*point,squaredDistance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCloserThan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRadarVisible of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_isRadarVisible00
static int tolua_CenterSpace_MCUController_isRadarVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRadarVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRadarVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRadarVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRadarVisible of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_setRadarVisible00
static int tolua_CenterSpace_MCUController_setRadarVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRadarVisible'", NULL);
#endif
  {
   self->setRadarVisible(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRadarVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFiringBone of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getFiringBone00
static int tolua_CenterSpace_MCUController_getFiringBone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFiringBone'", NULL);
#endif
  {
   Ogre::Bone* tolua_ret = (Ogre::Bone*)  self->getFiringBone(weapon);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::Bone");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFiringBone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFire of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_canFire00
static int tolua_CenterSpace_MCUController_canFire00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  int hardpoint = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFire'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFire(hardpoint);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canFire'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFire of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_canFire01
static int tolua_CenterSpace_MCUController_canFire01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFire'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFire(weapon);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUController_canFire00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFireAtLeastOneWeapon of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_canFireAtLeastOneWeapon00
static int tolua_CenterSpace_MCUController_canFireAtLeastOneWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFireAtLeastOneWeapon'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFireAtLeastOneWeapon();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canFireAtLeastOneWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFireUpon of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_canFireUpon00
static int tolua_CenterSpace_MCUController_canFireUpon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFireUpon'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFireUpon(target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canFireUpon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shieldsUp of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_shieldsUp00
static int tolua_CenterSpace_MCUController_shieldsUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shieldsUp'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->shieldsUp();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shieldsUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reachedDestination of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_reachedDestination00
static int tolua_CenterSpace_MCUController_reachedDestination00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reachedDestination'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->reachedDestination();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reachedDestination'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: beginFiringWeapon of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_beginFiringWeapon00
static int tolua_CenterSpace_MCUController_beginFiringWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,2,0));
  const Ogre::Vector3* source = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,3,0));
  const Ogre::Vector3* dest = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,4,0));
  bool returningFire = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'beginFiringWeapon'", NULL);
#endif
  {
   self->beginFiringWeapon(weapon,*source,*dest,returningFire);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'beginFiringWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fireWeapon of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_fireWeapon00
static int tolua_CenterSpace_MCUController_fireWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  int weaponHardpoint = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fireWeapon'", NULL);
#endif
  {
   self->fireWeapon(weaponHardpoint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fireWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBestAntiShieldWeapon of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getBestAntiShieldWeapon00
static int tolua_CenterSpace_MCUController_getBestAntiShieldWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBestAntiShieldWeapon'", NULL);
#endif
  {
   WeaponHardpoint* tolua_ret = (WeaponHardpoint*)  self->getBestAntiShieldWeapon();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBestAntiShieldWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBestAntiArmorWeapon of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getBestAntiArmorWeapon00
static int tolua_CenterSpace_MCUController_getBestAntiArmorWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBestAntiArmorWeapon'", NULL);
#endif
  {
   WeaponHardpoint* tolua_ret = (WeaponHardpoint*)  self->getBestAntiArmorWeapon();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"WeaponHardpoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBestAntiArmorWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFiring of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_isFiring00
static int tolua_CenterSpace_MCUController_isFiring00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFiring'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFiring();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFiring'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: applyWarhead of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_applyWarhead00
static int tolua_CenterSpace_MCUController_applyWarhead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const FireInstruction",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  int projId = ((int)  tolua_tonumber(tolua_S,2,0));
  const FireInstruction* instruction = ((const FireInstruction*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'applyWarhead'", NULL);
#endif
  {
   self->applyWarhead(projId,*instruction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'applyWarhead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: weaponFiringComplete of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_weaponFiringComplete00
static int tolua_CenterSpace_MCUController_weaponFiringComplete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'weaponFiringComplete'", NULL);
#endif
  {
   self->weaponFiringComplete();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'weaponFiringComplete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enableAnimations of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_enableAnimations00
static int tolua_CenterSpace_MCUController_enableAnimations00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enableAnimations'", NULL);
#endif
  {
   self->enableAnimations();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enableAnimations'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Sequence of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_get_MCUController_Sequence
static int tolua_get_MCUController_Sequence(lua_State* tolua_S)
{
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Sequence'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Sequence);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Sequence of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_set_MCUController_Sequence
static int tolua_set_MCUController_Sequence(lua_State* tolua_S)
{
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Sequence'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Sequence = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getPosition00
static int tolua_CenterSpace_MCUController_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMiddle of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getMiddle00
static int tolua_CenterSpace_MCUController_getMiddle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMiddle'", NULL);
#endif
  {
   Ogre::Vector3 tolua_ret = (Ogre::Vector3)  self->getMiddle();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Vector3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Vector3));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Vector3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMiddle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNode of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getNode00
static int tolua_CenterSpace_MCUController_getNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNode'", NULL);
#endif
  {
   Ogre::SceneNode* tolua_ret = (Ogre::SceneNode*)  self->getNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::SceneNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRemainingReactorPower of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getRemainingReactorPower00
static int tolua_CenterSpace_MCUController_getRemainingReactorPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRemainingReactorPower'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRemainingReactorPower();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRemainingReactorPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRemainingBatteryPower of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getRemainingBatteryPower00
static int tolua_CenterSpace_MCUController_getRemainingBatteryPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRemainingBatteryPower'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRemainingBatteryPower();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRemainingBatteryPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalRemainingPower of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getTotalRemainingPower00
static int tolua_CenterSpace_MCUController_getTotalRemainingPower00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalRemainingPower'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTotalRemainingPower();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalRemainingPower'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drainEnergyFromBattery of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_drainEnergyFromBattery00
static int tolua_CenterSpace_MCUController_drainEnergyFromBattery00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  float amount = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drainEnergyFromBattery'", NULL);
#endif
  {
   self->drainEnergyFromBattery(amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drainEnergyFromBattery'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drainEnergyFromReactor of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_drainEnergyFromReactor00
static int tolua_CenterSpace_MCUController_drainEnergyFromReactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  float amount = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drainEnergyFromReactor'", NULL);
#endif
  {
   self->drainEnergyFromReactor(amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drainEnergyFromReactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drainWeaponEnergy of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_drainWeaponEnergy00
static int tolua_CenterSpace_MCUController_drainWeaponEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  float amount = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drainWeaponEnergy'", NULL);
#endif
  {
   self->drainWeaponEnergy(amount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drainWeaponEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: componentDestroyed of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_componentDestroyed00
static int tolua_CenterSpace_MCUController_componentDestroyed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUComponent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUComponent* component = ((MCUComponent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'componentDestroyed'", NULL);
#endif
  {
   self->componentDestroyed(component);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'componentDestroyed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startDestructionSequence of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_startDestructionSequence00
static int tolua_CenterSpace_MCUController_startDestructionSequence00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startDestructionSequence'", NULL);
#endif
  {
   self->startDestructionSequence();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startDestructionSequence'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroy of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_destroy00
static int tolua_CenterSpace_MCUController_destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroy'", NULL);
#endif
  {
   self->destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAllComponents of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getAllComponents00
static int tolua_CenterSpace_MCUController_getAllComponents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAllComponents'", NULL);
#endif
  {
   std::deque<MCUComponent*> tolua_ret = (std::deque<MCUComponent*>)  self->getAllComponents();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<MCUComponent*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUComponent*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<MCUComponent*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUComponent*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAllComponents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateFogOfWar of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_updateFogOfWar00
static int tolua_CenterSpace_MCUController_updateFogOfWar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateFogOfWar'", NULL);
#endif
  {
   self->updateFogOfWar();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateFogOfWar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: renderFogOfWar of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_renderFogOfWar00
static int tolua_CenterSpace_MCUController_renderFogOfWar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'renderFogOfWar'", NULL);
#endif
  {
   self->renderFogOfWar();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'renderFogOfWar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canSee of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_canSee00
static int tolua_CenterSpace_MCUController_canSee00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canSee'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canSee(target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canSee'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getGuiValues00
static int tolua_CenterSpace_MCUController_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateGuiData of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_updateGuiData00
static int tolua_CenterSpace_MCUController_updateGuiData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  const std::string source = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateGuiData'", NULL);
#endif
  {
   self->updateGuiData(source);
   tolua_pushcppstring(tolua_S,(const char*)source);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateGuiData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShortestWeaponRange of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getShortestWeaponRange00
static int tolua_CenterSpace_MCUController_getShortestWeaponRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShortestWeaponRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getShortestWeaponRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShortestWeaponRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLongestWeaponRange of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_getLongestWeaponRange00
static int tolua_CenterSpace_MCUController_getLongestWeaponRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLongestWeaponRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLongestWeaponRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLongestWeaponRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: calculateAccuracy of class  MCUController */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUController_calculateAccuracy00
static int tolua_CenterSpace_MCUController_calculateAccuracy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUController* self = (MCUController*)  tolua_tousertype(tolua_S,1,0);
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'calculateAccuracy'", NULL);
#endif
  {
   float tolua_ret = (float)  self->calculateAccuracy(weapon);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'calculateAccuracy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_new00
static int tolua_CenterSpace_AIGroup_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   AIGroup* tolua_ret = (AIGroup*)  Mtolua_new((AIGroup)(id));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_new00_local
static int tolua_CenterSpace_AIGroup_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   AIGroup* tolua_ret = (AIGroup*)  Mtolua_new((AIGroup)(id));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroup");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_delete00
static int tolua_CenterSpace_AIGroup_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAverageMCUXPos of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getAverageMCUXPos00
static int tolua_CenterSpace_AIGroup_getAverageMCUXPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAverageMCUXPos'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getAverageMCUXPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAverageMCUXPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAverageMCUZPos of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getAverageMCUZPos00
static int tolua_CenterSpace_AIGroup_getAverageMCUZPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAverageMCUZPos'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getAverageMCUZPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAverageMCUZPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUs of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getMCUs00
static int tolua_CenterSpace_AIGroup_getMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUs'", NULL);
#endif
  {
   std::deque<MCUController*> tolua_ret = (std::deque<MCUController*>)  self->getMCUs();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<MCUController*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUController*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<MCUController*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUController*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUs of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setMCUs00
static int tolua_CenterSpace_AIGroup_setMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<MCUController*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  std::deque<MCUController*> mcus = *((std::deque<MCUController*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUs'", NULL);
#endif
  {
   self->setMCUs(mcus);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentGoal of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getCurrentGoal00
static int tolua_CenterSpace_AIGroup_getCurrentGoal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentGoal'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getCurrentGoal();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentGoal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentGoal of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setCurrentGoal00
static int tolua_CenterSpace_AIGroup_setCurrentGoal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* goal = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentGoal'", NULL);
#endif
  {
   self->setCurrentGoal(goal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentGoal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreMCUControllers of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasMoreMCUControllers00
static int tolua_CenterSpace_AIGroup_hasMoreMCUControllers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreMCUControllers'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreMCUControllers();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreMCUControllers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextMCUController of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getNextMCUController00
static int tolua_CenterSpace_AIGroup_getNextMCUController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextMCUController'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getNextMCUController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextMCUController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaMCUDeque of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getLuaMCUDeque00
static int tolua_CenterSpace_AIGroup_getLuaMCUDeque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaMCUDeque'", NULL);
#endif
  {
   LuaMCUDeque* tolua_ret = (LuaMCUDeque*)  self->getLuaMCUDeque();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaMCUDeque");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaMCUDeque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUPlacements of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getMCUPlacements00
static int tolua_CenterSpace_AIGroup_getMCUPlacements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUPlacements'", NULL);
#endif
  {
   std::deque<MCUPlacement*>& tolua_ret = (std::deque<MCUPlacement*>&)  self->getMCUPlacements();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<MCUPlacement*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUPlacements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMCUPlacement of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_addMCUPlacement00
static int tolua_CenterSpace_AIGroup_addMCUPlacement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,2,0));
  int x = ((int)  tolua_tonumber(tolua_S,3,0));
  int z = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMCUPlacement'", NULL);
#endif
  {
   self->addMCUPlacement(mcu,x,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMCUPlacement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUPlacements of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setMCUPlacements00
static int tolua_CenterSpace_AIGroup_setMCUPlacements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<MCUPlacement*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  std::deque<MCUPlacement*>* placements = ((std::deque<MCUPlacement*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUPlacements'", NULL);
#endif
  {
   self->setMCUPlacements(*placements);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUPlacements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerBattleState of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getPlayerBattleState00
static int tolua_CenterSpace_AIGroup_getPlayerBattleState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerBattleState'", NULL);
#endif
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  self->getPlayerBattleState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerBattleState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerBattleState of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setPlayerBattleState00
static int tolua_CenterSpace_AIGroup_setPlayerBattleState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  PlayerBattleState* state = ((PlayerBattleState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerBattleState'", NULL);
#endif
  {
   self->setPlayerBattleState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerBattleState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMCUController of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_addMCUController00
static int tolua_CenterSpace_AIGroup_addMCUController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMCUController'", NULL);
#endif
  {
   self->addMCUController(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMCUController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasFinishedTurn of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasFinishedTurn00
static int tolua_CenterSpace_AIGroup_hasFinishedTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasFinishedTurn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasFinishedTurn();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasFinishedTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startTurn of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_startTurn00
static int tolua_CenterSpace_AIGroup_startTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startTurn'", NULL);
#endif
  {
   self->startTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasAttackOrder00
static int tolua_CenterSpace_AIGroup_hasAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasAttackOrder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasAttackOrder();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGroupAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getGroupAttackOrder00
static int tolua_CenterSpace_AIGroup_getGroupAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGroupAttackOrder'", NULL);
#endif
  {
   GroupAttackOrder* tolua_ret = (GroupAttackOrder*)  self->getGroupAttackOrder();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupAttackOrder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGroupAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGroupAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setGroupAttackOrder00
static int tolua_CenterSpace_AIGroup_setGroupAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  GroupAttackOrder* order = ((GroupAttackOrder*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGroupAttackOrder'", NULL);
#endif
  {
   self->setGroupAttackOrder(order);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGroupAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: giveGroupAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_giveGroupAttackOrder00
static int tolua_CenterSpace_AIGroup_giveGroupAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'giveGroupAttackOrder'", NULL);
#endif
  {
   self->giveGroupAttackOrder(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'giveGroupAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: executeGroupAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_executeGroupAttackOrder00
static int tolua_CenterSpace_AIGroup_executeGroupAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'executeGroupAttackOrder'", NULL);
#endif
  {
   self->executeGroupAttackOrder();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'executeGroupAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: executeGroupAttackOrderIfNecessary of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_executeGroupAttackOrderIfNecessary00
static int tolua_CenterSpace_AIGroup_executeGroupAttackOrderIfNecessary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'executeGroupAttackOrderIfNecessary'", NULL);
#endif
  {
   self->executeGroupAttackOrderIfNecessary();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'executeGroupAttackOrderIfNecessary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: finishedGroupAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_finishedGroupAttackOrder00
static int tolua_CenterSpace_AIGroup_finishedGroupAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  bool issueNewOrders = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'finishedGroupAttackOrder'", NULL);
#endif
  {
   self->finishedGroupAttackOrder(issueNewOrders);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'finishedGroupAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoveOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasMoveOrder00
static int tolua_CenterSpace_AIGroup_hasMoveOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoveOrder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoveOrder();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoveOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGroupMoveOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getGroupMoveOrder00
static int tolua_CenterSpace_AIGroup_getGroupMoveOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGroupMoveOrder'", NULL);
#endif
  {
   GroupMoveOrder* tolua_ret = (GroupMoveOrder*)  self->getGroupMoveOrder();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveOrder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGroupMoveOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGroupMoveOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setGroupMoveOrder00
static int tolua_CenterSpace_AIGroup_setGroupMoveOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  GroupMoveOrder* order = ((GroupMoveOrder*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGroupMoveOrder'", NULL);
#endif
  {
   self->setGroupMoveOrder(order);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGroupMoveOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: giveGroupMoveOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_giveGroupMoveOrder00
static int tolua_CenterSpace_AIGroup_giveGroupMoveOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* dest = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'giveGroupMoveOrder'", NULL);
#endif
  {
   self->giveGroupMoveOrder(dest);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'giveGroupMoveOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: finishedGroupMoveOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_finishedGroupMoveOrder00
static int tolua_CenterSpace_AIGroup_finishedGroupMoveOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  bool issueNewOrders = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'finishedGroupMoveOrder'", NULL);
#endif
  {
   self->finishedGroupMoveOrder(issueNewOrders);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'finishedGroupMoveOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoveToAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasMoveToAttackOrder00
static int tolua_CenterSpace_AIGroup_hasMoveToAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoveToAttackOrder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoveToAttackOrder();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoveToAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGroupMoveToAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getGroupMoveToAttackOrder00
static int tolua_CenterSpace_AIGroup_getGroupMoveToAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGroupMoveToAttackOrder'", NULL);
#endif
  {
   GroupMoveToAttackOrder* tolua_ret = (GroupMoveToAttackOrder*)  self->getGroupMoveToAttackOrder();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveToAttackOrder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGroupMoveToAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGroupMoveToAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_setGroupMoveToAttackOrder00
static int tolua_CenterSpace_AIGroup_setGroupMoveToAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  GroupMoveToAttackOrder* order = ((GroupMoveToAttackOrder*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGroupMoveToAttackOrder'", NULL);
#endif
  {
   self->setGroupMoveToAttackOrder(order);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGroupMoveToAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: giveGroupMoveToAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_giveGroupMoveToAttackOrder00
static int tolua_CenterSpace_AIGroup_giveGroupMoveToAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'giveGroupMoveToAttackOrder'", NULL);
#endif
  {
   self->giveGroupMoveToAttackOrder(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'giveGroupMoveToAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: finishedGroupMoveToAttackOrder of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_finishedGroupMoveToAttackOrder00
static int tolua_CenterSpace_AIGroup_finishedGroupMoveToAttackOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  bool issueNewOrders = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'finishedGroupMoveToAttackOrder'", NULL);
#endif
  {
   self->finishedGroupMoveToAttackOrder(issueNewOrders);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'finishedGroupMoveToAttackOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasOrders of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasOrders00
static int tolua_CenterSpace_AIGroup_hasOrders00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasOrders'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasOrders();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasOrders'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasLowMovementEnergy of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasLowMovementEnergy00
static int tolua_CenterSpace_AIGroup_hasLowMovementEnergy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasLowMovementEnergy'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasLowMovementEnergy();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasLowMovementEnergy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasFiredAllWeapons of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_hasFiredAllWeapons00
static int tolua_CenterSpace_AIGroup_hasFiredAllWeapons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasFiredAllWeapons'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasFiredAllWeapons();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasFiredAllWeapons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canFireUpon of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_canFireUpon00
static int tolua_CenterSpace_AIGroup_canFireUpon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canFireUpon'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canFireUpon(target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canFireUpon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: finishedTurn of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_finishedTurn00
static int tolua_CenterSpace_AIGroup_finishedTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'finishedTurn'", NULL);
#endif
  {
   self->finishedTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'finishedTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfMovementChange of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_notifyOfMovementChange00
static int tolua_CenterSpace_AIGroup_notifyOfMovementChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfMovementChange'", NULL);
#endif
  {
   self->notifyOfMovementChange(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfMovementChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfMovementFailureDueToBlockage of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_notifyOfMovementFailureDueToBlockage00
static int tolua_CenterSpace_AIGroup_notifyOfMovementFailureDueToBlockage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  MCUController* blockage = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  BattlefieldGridCell* destination = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfMovementFailureDueToBlockage'", NULL);
#endif
  {
   self->notifyOfMovementFailureDueToBlockage(controller,blockage,destination);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfMovementFailureDueToBlockage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getClosestVisibleEnemyMCU of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getClosestVisibleEnemyMCU00
static int tolua_CenterSpace_AIGroup_getClosestVisibleEnemyMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getClosestVisibleEnemyMCU'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getClosestVisibleEnemyMCU();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getClosestVisibleEnemyMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getShortWeaponRange of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getShortWeaponRange00
static int tolua_CenterSpace_AIGroup_getShortWeaponRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getShortWeaponRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getShortWeaponRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getShortWeaponRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLongWeaponRange of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getLongWeaponRange00
static int tolua_CenterSpace_AIGroup_getLongWeaponRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLongWeaponRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLongWeaponRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLongWeaponRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loopFinished of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_loopFinished00
static int tolua_CenterSpace_AIGroup_loopFinished00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loopFinished'", NULL);
#endif
  {
   self->loopFinished();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loopFinished'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getId of class  AIGroup */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_AIGroup_getId00
static int tolua_CenterSpace_AIGroup_getId00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AIGroup* self = (AIGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getId'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getId();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getId'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_new00
static int tolua_CenterSpace_MCUOrderStatus_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUOrderStatus* tolua_ret = (MCUOrderStatus*)  Mtolua_new((MCUOrderStatus)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUOrderStatus");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_new00_local
static int tolua_CenterSpace_MCUOrderStatus_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MCUOrderStatus* tolua_ret = (MCUOrderStatus*)  Mtolua_new((MCUOrderStatus)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUOrderStatus");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_new01
static int tolua_CenterSpace_MCUOrderStatus_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  {
   MCUOrderStatus* tolua_ret = (MCUOrderStatus*)  Mtolua_new((MCUOrderStatus)(controller));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUOrderStatus");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUOrderStatus_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_new01_local
static int tolua_CenterSpace_MCUOrderStatus_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  {
   MCUOrderStatus* tolua_ret = (MCUOrderStatus*)  Mtolua_new((MCUOrderStatus)(controller));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUOrderStatus");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_MCUOrderStatus_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_delete00
static int tolua_CenterSpace_MCUOrderStatus_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUOrderStatus* self = (MCUOrderStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUController of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_getMCUController00
static int tolua_CenterSpace_MCUOrderStatus_getMCUController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUOrderStatus* self = (MCUOrderStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUController'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getMCUController();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUController of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_setMCUController00
static int tolua_CenterSpace_MCUOrderStatus_setMCUController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUOrderStatus* self = (MCUOrderStatus*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUController'", NULL);
#endif
  {
   self->setMCUController(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStatus of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_getStatus00
static int tolua_CenterSpace_MCUOrderStatus_getStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUOrderStatus* self = (MCUOrderStatus*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStatus'", NULL);
#endif
  {
   OrderStatus tolua_ret = (OrderStatus)  self->getStatus();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStatus of class  MCUOrderStatus */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MCUOrderStatus_setStatus00
static int tolua_CenterSpace_MCUOrderStatus_setStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MCUOrderStatus",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MCUOrderStatus* self = (MCUOrderStatus*)  tolua_tousertype(tolua_S,1,0);
  OrderStatus status = ((OrderStatus) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStatus'", NULL);
#endif
  {
   self->setStatus(status);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOwner of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_getOwner00
static int tolua_CenterSpace_GroupOrder_getOwner00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOwner'", NULL);
#endif
  {
   AIGroup* tolua_ret = (AIGroup*)  self->getOwner();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOwner'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOwner of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_setOwner00
static int tolua_CenterSpace_GroupOrder_setOwner00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOwner'", NULL);
#endif
  {
   self->setOwner(group);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOwner'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOrderStatuses of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_getOrderStatuses00
static int tolua_CenterSpace_GroupOrder_getOrderStatuses00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOrderStatuses'", NULL);
#endif
  {
   std::deque<MCUOrderStatus*> tolua_ret = (std::deque<MCUOrderStatus*>)  self->getOrderStatuses();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<MCUOrderStatus*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUOrderStatus*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<MCUOrderStatus*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUOrderStatus*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOrderStatuses'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOrderStatuses of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_setOrderStatuses00
static int tolua_CenterSpace_GroupOrder_setOrderStatuses00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<MCUOrderStatus*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
  std::deque<MCUOrderStatus*> orderStatuses = *((std::deque<MCUOrderStatus*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOrderStatuses'", NULL);
#endif
  {
   self->setOrderStatuses(orderStatuses);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOrderStatuses'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOrderStatus of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_setOrderStatus00
static int tolua_CenterSpace_GroupOrder_setOrderStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  OrderStatus status = ((OrderStatus) (int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOrderStatus'", NULL);
#endif
  {
   self->setOrderStatus(controller,status);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOrderStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOrderStatus of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_getOrderStatus00
static int tolua_CenterSpace_GroupOrder_getOrderStatus00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOrderStatus'", NULL);
#endif
  {
   OrderStatus tolua_ret = (OrderStatus)  self->getOrderStatus(controller);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOrderStatus'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allOrdersCompleted of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_allOrdersCompleted00
static int tolua_CenterSpace_GroupOrder_allOrdersCompleted00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allOrdersCompleted'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->allOrdersCompleted();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allOrdersCompleted'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allOrdersFailed of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_allOrdersFailed00
static int tolua_CenterSpace_GroupOrder_allOrdersFailed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allOrdersFailed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->allOrdersFailed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allOrdersFailed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allOrdersCompletedOrFailed of class  GroupOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupOrder_allOrdersCompletedOrFailed00
static int tolua_CenterSpace_GroupOrder_allOrdersCompletedOrFailed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupOrder* self = (GroupOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allOrdersCompletedOrFailed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->allOrdersCompletedOrFailed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allOrdersCompletedOrFailed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_new00
static int tolua_CenterSpace_GroupAttackOrder_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupAttackOrder* tolua_ret = (GroupAttackOrder*)  Mtolua_new((GroupAttackOrder)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupAttackOrder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_new00_local
static int tolua_CenterSpace_GroupAttackOrder_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupAttackOrder* tolua_ret = (GroupAttackOrder*)  Mtolua_new((GroupAttackOrder)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupAttackOrder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_new01
static int tolua_CenterSpace_GroupAttackOrder_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroup* owner = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  {
   GroupAttackOrder* tolua_ret = (GroupAttackOrder*)  Mtolua_new((GroupAttackOrder)(owner,target));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupAttackOrder");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GroupAttackOrder_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_new01_local
static int tolua_CenterSpace_GroupAttackOrder_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroup* owner = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  {
   GroupAttackOrder* tolua_ret = (GroupAttackOrder*)  Mtolua_new((GroupAttackOrder)(owner,target));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupAttackOrder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GroupAttackOrder_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_delete00
static int tolua_CenterSpace_GroupAttackOrder_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupAttackOrder* self = (GroupAttackOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_getTarget00
static int tolua_CenterSpace_GroupAttackOrder_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupAttackOrder* self = (GroupAttackOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getTarget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTarget of class  GroupAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupAttackOrder_setTarget00
static int tolua_CenterSpace_GroupAttackOrder_setTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupAttackOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupAttackOrder* self = (GroupAttackOrder*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTarget'", NULL);
#endif
  {
   self->setTarget(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_new00
static int tolua_CenterSpace_GroupMoveOrder_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupMoveOrder* tolua_ret = (GroupMoveOrder*)  Mtolua_new((GroupMoveOrder)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveOrder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_new00_local
static int tolua_CenterSpace_GroupMoveOrder_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupMoveOrder* tolua_ret = (GroupMoveOrder*)  Mtolua_new((GroupMoveOrder)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveOrder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_new01
static int tolua_CenterSpace_GroupMoveOrder_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroup* owner = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  BattlefieldGridCell* dest = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,3,0));
  {
   GroupMoveOrder* tolua_ret = (GroupMoveOrder*)  Mtolua_new((GroupMoveOrder)(owner,dest));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveOrder");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GroupMoveOrder_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_new01_local
static int tolua_CenterSpace_GroupMoveOrder_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroup* owner = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  BattlefieldGridCell* dest = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,3,0));
  {
   GroupMoveOrder* tolua_ret = (GroupMoveOrder*)  Mtolua_new((GroupMoveOrder)(owner,dest));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveOrder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GroupMoveOrder_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_delete00
static int tolua_CenterSpace_GroupMoveOrder_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupMoveOrder* self = (GroupMoveOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDestination of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_getDestination00
static int tolua_CenterSpace_GroupMoveOrder_getDestination00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupMoveOrder* self = (GroupMoveOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDestination'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getDestination();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDestination'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDestination of class  GroupMoveOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveOrder_setDestination00
static int tolua_CenterSpace_GroupMoveOrder_setDestination00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupMoveOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupMoveOrder* self = (GroupMoveOrder*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* dest = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDestination'", NULL);
#endif
  {
   self->setDestination(dest);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDestination'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_new00
static int tolua_CenterSpace_GroupMoveToAttackOrder_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupMoveToAttackOrder* tolua_ret = (GroupMoveToAttackOrder*)  Mtolua_new((GroupMoveToAttackOrder)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveToAttackOrder");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_new00_local
static int tolua_CenterSpace_GroupMoveToAttackOrder_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupMoveToAttackOrder* tolua_ret = (GroupMoveToAttackOrder*)  Mtolua_new((GroupMoveToAttackOrder)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveToAttackOrder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_new01
static int tolua_CenterSpace_GroupMoveToAttackOrder_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroup* owner = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  {
   GroupMoveToAttackOrder* tolua_ret = (GroupMoveToAttackOrder*)  Mtolua_new((GroupMoveToAttackOrder)(owner,target));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveToAttackOrder");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GroupMoveToAttackOrder_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_new01_local
static int tolua_CenterSpace_GroupMoveToAttackOrder_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AIGroup* owner = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  {
   GroupMoveToAttackOrder* tolua_ret = (GroupMoveToAttackOrder*)  Mtolua_new((GroupMoveToAttackOrder)(owner,target));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupMoveToAttackOrder");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_GroupMoveToAttackOrder_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_delete00
static int tolua_CenterSpace_GroupMoveToAttackOrder_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupMoveToAttackOrder* self = (GroupMoveToAttackOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_getTarget00
static int tolua_CenterSpace_GroupMoveToAttackOrder_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupMoveToAttackOrder* self = (GroupMoveToAttackOrder*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getTarget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTarget of class  GroupMoveToAttackOrder */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GroupMoveToAttackOrder_setTarget00
static int tolua_CenterSpace_GroupMoveToAttackOrder_setTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupMoveToAttackOrder",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupMoveToAttackOrder* self = (GroupMoveToAttackOrder*)  tolua_tousertype(tolua_S,1,0);
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTarget'", NULL);
#endif
  {
   self->setTarget(target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GameState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameState_delete00
static int tolua_CenterSpace_GameState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeState of class  GameState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameState_changeState00
static int tolua_CenterSpace_GameState_changeState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
  GameState* state = ((GameState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeState'", NULL);
#endif
  {
   self->changeState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushState of class  GameState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameState_pushState00
static int tolua_CenterSpace_GameState_pushState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
  GameState* state = ((GameState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushState'", NULL);
#endif
  {
   self->pushState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: popState of class  GameState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameState_popState00
static int tolua_CenterSpace_GameState_popState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'popState'", NULL);
#endif
  {
   self->popState();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'popState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestShutdown of class  GameState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameState_requestShutdown00
static int tolua_CenterSpace_GameState_requestShutdown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestShutdown'", NULL);
#endif
  {
   self->requestShutdown();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestShutdown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __InputListener of class  GameState */
#ifndef TOLUA_DISABLE_tolua_get_GameState___InputListener__Listener__
static int tolua_get_GameState___InputListener__Listener__(lua_State* tolua_S)
{
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__InputListener'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<InputListener::Listener*>(self), "InputListener::Listener");
#else
   tolua_pushusertype(tolua_S,(void*)((InputListener::Listener*)self), "InputListener::Listener");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __Rocket of class  GameState */
#ifndef TOLUA_DISABLE_tolua_get_GameState___Rocket__Core__EventListener__
static int tolua_get_GameState___Rocket__Core__EventListener__(lua_State* tolua_S)
{
  GameState* self = (GameState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__Rocket'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<Rocket::Core::EventListener*>(self), "Rocket::Core::EventListener");
#else
   tolua_pushusertype(tolua_S,(void*)((Rocket::Core::EventListener*)self), "Rocket::Core::EventListener");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PlayerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerState_delete00
static int tolua_CenterSpace_PlayerState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerState* self = (PlayerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  PlayerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerState_enter00
static int tolua_CenterSpace_PlayerState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerState* self = (PlayerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  PlayerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerState_exit00
static int tolua_CenterSpace_PlayerState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerState* self = (PlayerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PlayerProfile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerProfile_new00
static int tolua_CenterSpace_PlayerProfile_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  Mtolua_new((PlayerProfile)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PlayerProfile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerProfile_new00_local
static int tolua_CenterSpace_PlayerProfile_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  Mtolua_new((PlayerProfile)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PlayerProfile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerProfile_delete00
static int tolua_CenterSpace_PlayerProfile_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerProfile* self = (PlayerProfile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  PlayerProfile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerProfile_getGuiValues00
static int tolua_CenterSpace_PlayerProfile_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerProfile* self = (PlayerProfile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAI of class  PlayerProfile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerProfile_isAI00
static int tolua_CenterSpace_PlayerProfile_isAI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerProfile* self = (PlayerProfile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAI'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAI();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsAI of class  PlayerProfile */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerProfile_setIsAI00
static int tolua_CenterSpace_PlayerProfile_setIsAI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerProfile",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerProfile* self = (PlayerProfile*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsAI'", NULL);
#endif
  {
   self->setIsAI(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsAI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_new00
static int tolua_CenterSpace_InventoryState_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InventoryState* tolua_ret = (InventoryState*)  Mtolua_new((InventoryState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InventoryState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_new00_local
static int tolua_CenterSpace_InventoryState_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InventoryState* tolua_ret = (InventoryState*)  Mtolua_new((InventoryState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InventoryState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_delete00
static int tolua_CenterSpace_InventoryState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_enter00
static int tolua_CenterSpace_InventoryState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_exit00
static int tolua_CenterSpace_InventoryState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_load00
static int tolua_CenterSpace_InventoryState_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: save of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_save00
static int tolua_CenterSpace_InventoryState_save00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'save'", NULL);
#endif
  {
   self->save();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'save'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMCU of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_addMCU00
static int tolua_CenterSpace_InventoryState_addMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMCU'", NULL);
#endif
  {
   self->addMCU(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUs of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_setMCUs00
static int tolua_CenterSpace_InventoryState_setMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<MechanizedCombatUnit*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  std::deque<MechanizedCombatUnit*> mcus = *((std::deque<MechanizedCombatUnit*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUs'", NULL);
#endif
  {
   self->setMCUs(mcus);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUs of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_getMCUs00
static int tolua_CenterSpace_InventoryState_getMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUs'", NULL);
#endif
  {
   std::deque<MechanizedCombatUnit*> tolua_ret = (std::deque<MechanizedCombatUnit*>)  self->getMCUs();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<MechanizedCombatUnit*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MechanizedCombatUnit*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<MechanizedCombatUnit*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MechanizedCombatUnit*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCU of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_getMCU00
static int tolua_CenterSpace_InventoryState_getMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  long id = ((long)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCU'", NULL);
#endif
  {
   MechanizedCombatUnit* tolua_ret = (MechanizedCombatUnit*)  self->getMCU(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MechanizedCombatUnit");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRank of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_getRank00
static int tolua_CenterSpace_InventoryState_getRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRank of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_setRank00
static int tolua_CenterSpace_InventoryState_setRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRank'", NULL);
#endif
  {
   self->setRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRemainingCash of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_getRemainingCash00
static int tolua_CenterSpace_InventoryState_getRemainingCash00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRemainingCash'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRemainingCash();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRemainingCash'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRemainingCash of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_setRemainingCash00
static int tolua_CenterSpace_InventoryState_setRemainingCash00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  float cash = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRemainingCash'", NULL);
#endif
  {
   self->setRemainingCash(cash);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRemainingCash'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_getFactionTemplate00
static int tolua_CenterSpace_InventoryState_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_setFactionTemplate00
static int tolua_CenterSpace_InventoryState_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeMCUComponent of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_changeMCUComponent00
static int tolua_CenterSpace_InventoryState_changeMCUComponent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"MCUBayState::ComponentType",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  MCUBayState::ComponentType componentType = *((MCUBayState::ComponentType*)  tolua_tousertype(tolua_S,2,0));
  long mcuId = ((long)  tolua_tonumber(tolua_S,3,0));
  int componentId = ((int)  tolua_tonumber(tolua_S,4,0));
  int hardpoint = ((int)  tolua_tonumber(tolua_S,5,-1));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeMCUComponent'", NULL);
#endif
  {
   self->changeMCUComponent(componentType,mcuId,componentId,hardpoint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeMCUComponent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeMCUComponent of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InventoryState_changeMCUComponent01
static int tolua_CenterSpace_InventoryState_changeMCUComponent01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InventoryState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"MCUBayState::ComponentType",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"MechanizedCombatUnit",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MCUComponentTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
  MCUBayState::ComponentType componentType = *((MCUBayState::ComponentType*)  tolua_tousertype(tolua_S,2,0));
  MechanizedCombatUnit* mcu = ((MechanizedCombatUnit*)  tolua_tousertype(tolua_S,3,0));
  MCUComponentTemplate* component = ((MCUComponentTemplate*)  tolua_tousertype(tolua_S,4,0));
  int hardpoint = ((int)  tolua_tonumber(tolua_S,5,-1));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeMCUComponent'", NULL);
#endif
  {
   self->changeMCUComponent(componentType,mcu,component,hardpoint);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_InventoryState_changeMCUComponent00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __PersistentEntity__ of class  InventoryState */
#ifndef TOLUA_DISABLE_tolua_get_InventoryState___PersistentEntity__
static int tolua_get_InventoryState___PersistentEntity__(lua_State* tolua_S)
{
  InventoryState* self = (InventoryState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__PersistentEntity__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<PersistentEntity*>(self), "PersistentEntity");
#else
   tolua_pushusertype(tolua_S,(void*)((PersistentEntity*)self), "PersistentEntity");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_new00
static int tolua_CenterSpace_CampaignState_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool createInventoryState = ((bool)  tolua_toboolean(tolua_S,2,true));
  {
   CampaignState* tolua_ret = (CampaignState*)  Mtolua_new((CampaignState)(createInventoryState));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CampaignState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_new00_local
static int tolua_CenterSpace_CampaignState_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool createInventoryState = ((bool)  tolua_toboolean(tolua_S,2,true));
  {
   CampaignState* tolua_ret = (CampaignState*)  Mtolua_new((CampaignState)(createInventoryState));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CampaignState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_delete00
static int tolua_CenterSpace_CampaignState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_enter00
static int tolua_CenterSpace_CampaignState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_exit00
static int tolua_CenterSpace_CampaignState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: load of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_load00
static int tolua_CenterSpace_CampaignState_load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'load'", NULL);
#endif
  {
   self->load();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: save of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_save00
static int tolua_CenterSpace_CampaignState_save00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'save'", NULL);
#endif
  {
   self->save();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'save'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_reset00
static int tolua_CenterSpace_CampaignState_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'", NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerProfile of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_getPlayerProfile00
static int tolua_CenterSpace_CampaignState_getPlayerProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerProfile'", NULL);
#endif
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  self->getPlayerProfile();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerProfile of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_setPlayerProfile00
static int tolua_CenterSpace_CampaignState_setPlayerProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
  PlayerProfile* profile = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerProfile'", NULL);
#endif
  {
   self->setPlayerProfile(profile);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRank of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_getRank00
static int tolua_CenterSpace_CampaignState_getRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRank'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getRank();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRank of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_setRank00
static int tolua_CenterSpace_CampaignState_setRank00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
  int rank = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRank'", NULL);
#endif
  {
   self->setRank(rank);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRank'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInventoryState of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_getInventoryState00
static int tolua_CenterSpace_CampaignState_getInventoryState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInventoryState'", NULL);
#endif
  {
   InventoryState* tolua_ret = (InventoryState*)  self->getInventoryState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InventoryState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInventoryState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInventoryState of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_setInventoryState00
static int tolua_CenterSpace_CampaignState_setInventoryState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"InventoryState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
  InventoryState* state = ((InventoryState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInventoryState'", NULL);
#endif
  {
   self->setInventoryState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInventoryState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_getFactionTemplate00
static int tolua_CenterSpace_CampaignState_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_setFactionTemplate00
static int tolua_CenterSpace_CampaignState_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDifficulty of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_getDifficulty00
static int tolua_CenterSpace_CampaignState_getDifficulty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDifficulty'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getDifficulty();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDifficulty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDifficulty of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_setDifficulty00
static int tolua_CenterSpace_CampaignState_setDifficulty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
  int difficulty = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDifficulty'", NULL);
#endif
  {
   self->setDifficulty(difficulty);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDifficulty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionHubTemplate of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_getFactionHubTemplate00
static int tolua_CenterSpace_CampaignState_getFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionHubTemplate'", NULL);
#endif
  {
   FactionHubTemplate* tolua_ret = (FactionHubTemplate*)  self->getFactionHubTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionHubTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionHubTemplate of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignState_setFactionHubTemplate00
static int tolua_CenterSpace_CampaignState_setFactionHubTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionHubTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
  FactionHubTemplate* hub = ((FactionHubTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionHubTemplate'", NULL);
#endif
  {
   self->setFactionHubTemplate(hub);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionHubTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __PersistentEntity__ of class  CampaignState */
#ifndef TOLUA_DISABLE_tolua_get_CampaignState___PersistentEntity__
static int tolua_get_CampaignState___PersistentEntity__(lua_State* tolua_S)
{
  CampaignState* self = (CampaignState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__PersistentEntity__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<PersistentEntity*>(self), "PersistentEntity");
#else
   tolua_pushusertype(tolua_S,(void*)((PersistentEntity*)self), "PersistentEntity");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CoverageSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageSquare_new00
static int tolua_CenterSpace_CoverageSquare_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CoverageSquare",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageStatus cs = ((CoverageStatus) (int)  tolua_tonumber(tolua_S,2,0));
  int interest = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   CoverageSquare* tolua_ret = (CoverageSquare*)  Mtolua_new((CoverageSquare)(cs,interest));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CoverageSquare");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CoverageSquare */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageSquare_new00_local
static int tolua_CenterSpace_CoverageSquare_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CoverageSquare",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageStatus cs = ((CoverageStatus) (int)  tolua_tonumber(tolua_S,2,0));
  int interest = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   CoverageSquare* tolua_ret = (CoverageSquare*)  Mtolua_new((CoverageSquare)(cs,interest));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CoverageSquare");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Status of class  CoverageSquare */
#ifndef TOLUA_DISABLE_tolua_get_CoverageSquare_Status
static int tolua_get_CoverageSquare_Status(lua_State* tolua_S)
{
  CoverageSquare* self = (CoverageSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Status'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Status);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Status of class  CoverageSquare */
#ifndef TOLUA_DISABLE_tolua_set_CoverageSquare_Status
static int tolua_set_CoverageSquare_Status(lua_State* tolua_S)
{
  CoverageSquare* self = (CoverageSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Status'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Status = ((CoverageStatus) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Interest of class  CoverageSquare */
#ifndef TOLUA_DISABLE_tolua_get_CoverageSquare_Interest
static int tolua_get_CoverageSquare_Interest(lua_State* tolua_S)
{
  CoverageSquare* self = (CoverageSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Interest'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Interest);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Interest of class  CoverageSquare */
#ifndef TOLUA_DISABLE_tolua_set_CoverageSquare_Interest
static int tolua_set_CoverageSquare_Interest(lua_State* tolua_S)
{
  CoverageSquare* self = (CoverageSquare*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Interest'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Interest = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_new00
static int tolua_CenterSpace_CoverageMap_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int sideLength = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int size = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  PlayerBattleState* state = ((PlayerBattleState*)  tolua_tousertype(tolua_S,4,0));
  {
   CoverageMap* tolua_ret = (CoverageMap*)  Mtolua_new((CoverageMap)(sideLength,size,state));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CoverageMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_new00_local
static int tolua_CenterSpace_CoverageMap_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int sideLength = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int size = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  PlayerBattleState* state = ((PlayerBattleState*)  tolua_tousertype(tolua_S,4,0));
  {
   CoverageMap* tolua_ret = (CoverageMap*)  Mtolua_new((CoverageMap)(sideLength,size,state));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CoverageMap");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_delete00
static int tolua_CenterSpace_CoverageMap_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resetCoverageMap of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_resetCoverageMap00
static int tolua_CenterSpace_CoverageMap_resetCoverageMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resetCoverageMap'", NULL);
#endif
  {
   self->resetCoverageMap();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetCoverageMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clearSightings of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_clearSightings00
static int tolua_CenterSpace_CoverageMap_clearSightings00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clearSightings'", NULL);
#endif
  {
   self->clearSightings();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clearSightings'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVisibility of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_setVisibility00
static int tolua_CenterSpace_CoverageMap_setVisibility00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FogSquareGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
  FogSquareGrid* grid = ((FogSquareGrid*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVisibility'", NULL);
#endif
  {
   self->setVisibility(grid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVisibility'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: computeCoverageMap of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_computeCoverageMap00
static int tolua_CenterSpace_CoverageMap_computeCoverageMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'computeCoverageMap'", NULL);
#endif
  {
   self->computeCoverageMap();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'computeCoverageMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEnemySighting of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_addEnemySighting00
static int tolua_CenterSpace_CoverageMap_addEnemySighting00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEnemySighting'", NULL);
#endif
  {
   self->addEnemySighting(x,z);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addEnemySighting'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addEnemySighting of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_addEnemySighting01
static int tolua_CenterSpace_CoverageMap_addEnemySighting01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addEnemySighting'", NULL);
#endif
  {
   self->addEnemySighting(location);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_CoverageMap_addEnemySighting00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNearestHotSpot of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_getNearestHotSpot00
static int tolua_CenterSpace_CoverageMap_getNearestHotSpot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGridCell",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGridCell* location = ((BattlefieldGridCell*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNearestHotSpot'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getNearestHotSpot(location);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNearestHotSpot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNearestHotSpot of class  CoverageMap */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CoverageMap_getNearestHotSpot01
static int tolua_CenterSpace_CoverageMap_getNearestHotSpot01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CoverageMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CoverageMap* self = (CoverageMap*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNearestHotSpot'", NULL);
#endif
  {
   BattlefieldGridCell* tolua_ret = (BattlefieldGridCell*)  self->getNearestHotSpot(x,z);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGridCell");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_CoverageMap_getNearestHotSpot00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerProfile of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getPlayerProfile00
static int tolua_CenterSpace_PlayerPreBattleState_getPlayerProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerProfile'", NULL);
#endif
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  self->getPlayerProfile();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayer of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setPlayer00
static int tolua_CenterSpace_PlayerPreBattleState_setPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayer'", NULL);
#endif
  {
   self->setPlayer(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTeam of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getTeam00
static int tolua_CenterSpace_PlayerPreBattleState_getTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTeam'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getTeam();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTeam of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setTeam00
static int tolua_CenterSpace_PlayerPreBattleState_setTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  int team = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTeam'", NULL);
#endif
  {
   self->setTeam(team);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerNumber of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getPlayerNumber00
static int tolua_CenterSpace_PlayerPreBattleState_getPlayerNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerNumber'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerNumber();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerNumber of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setPlayerNumber00
static int tolua_CenterSpace_PlayerPreBattleState_setPlayerNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerNumber'", NULL);
#endif
  {
   self->setPlayerNumber(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getFactionTemplate00
static int tolua_CenterSpace_PlayerPreBattleState_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setFactionTemplate00
static int tolua_CenterSpace_PlayerPreBattleState_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isLocal of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_isLocal00
static int tolua_CenterSpace_PlayerPreBattleState_isLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isLocal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isLocal();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLocal of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setLocal00
static int tolua_CenterSpace_PlayerPreBattleState_setLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLocal'", NULL);
#endif
  {
   self->setLocal(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needsRender of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_needsRender00
static int tolua_CenterSpace_PlayerPreBattleState_needsRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needsRender'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->needsRender();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needsRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNeedsRender of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setNeedsRender00
static int tolua_CenterSpace_PlayerPreBattleState_setNeedsRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNeedsRender'", NULL);
#endif
  {
   self->setNeedsRender(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNeedsRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAI of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_isAI00
static int tolua_CenterSpace_PlayerPreBattleState_isAI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAI'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAI();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAI of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setAI00
static int tolua_CenterSpace_PlayerPreBattleState_setAI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAI'", NULL);
#endif
  {
   self->setAI(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIScriptName of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getAIScriptName00
static int tolua_CenterSpace_PlayerPreBattleState_getAIScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIScriptName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getAIScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAIScriptName of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setAIScriptName00
static int tolua_CenterSpace_PlayerPreBattleState_setAIScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  const std::string script = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAIScriptName'", NULL);
#endif
  {
   self->setAIScriptName(script);
   tolua_pushcppstring(tolua_S,(const char*)script);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAIScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIScriptEntryPoint of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getAIScriptEntryPoint00
static int tolua_CenterSpace_PlayerPreBattleState_getAIScriptEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIScriptEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getAIScriptEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIScriptEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAIScriptEntryPoint of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setAIScriptEntryPoint00
static int tolua_CenterSpace_PlayerPreBattleState_setAIScriptEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  const std::string entry = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAIScriptEntryPoint'", NULL);
#endif
  {
   self->setAIScriptEntryPoint(entry);
   tolua_pushcppstring(tolua_S,(const char*)entry);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAIScriptEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUPlacements of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getMCUPlacements00
static int tolua_CenterSpace_PlayerPreBattleState_getMCUPlacements00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUPlacements'", NULL);
#endif
  {
   std::deque<MCUPlacement*>& tolua_ret = (std::deque<MCUPlacement*>&)  self->getMCUPlacements();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<MCUPlacement*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUPlacements'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIGroupTemplates of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getAIGroupTemplates00
static int tolua_CenterSpace_PlayerPreBattleState_getAIGroupTemplates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIGroupTemplates'", NULL);
#endif
  {
   std::deque<AIGroupTemplate*>& tolua_ret = (std::deque<AIGroupTemplate*>&)  self->getAIGroupTemplates();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<AIGroupTemplate*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIGroupTemplates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAIGroupTemplate of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_addAIGroupTemplate00
static int tolua_CenterSpace_PlayerPreBattleState_addAIGroupTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroupTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroupTemplate* group = ((AIGroupTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAIGroupTemplate'", NULL);
#endif
  {
   self->addAIGroupTemplate(group);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAIGroupTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIGroups of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getAIGroups00
static int tolua_CenterSpace_PlayerPreBattleState_getAIGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIGroups'", NULL);
#endif
  {
   std::deque<AIGroup*>& tolua_ret = (std::deque<AIGroup*>&)  self->getAIGroups();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::deque<AIGroup*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAIGroup of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_addAIGroup00
static int tolua_CenterSpace_PlayerPreBattleState_addAIGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAIGroup'", NULL);
#endif
  {
   self->addAIGroup(group);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAIGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLuaMCUDeque of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_getLuaMCUDeque00
static int tolua_CenterSpace_PlayerPreBattleState_getLuaMCUDeque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLuaMCUDeque'", NULL);
#endif
  {
   LuaMCUDeque* tolua_ret = (LuaMCUDeque*)  self->getLuaMCUDeque();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"LuaMCUDeque");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLuaMCUDeque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLuaMCUDeque of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_setLuaMCUDeque00
static int tolua_CenterSpace_PlayerPreBattleState_setLuaMCUDeque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"LuaMCUDeque",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  LuaMCUDeque* deque = ((LuaMCUDeque*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLuaMCUDeque'", NULL);
#endif
  {
   self->setLuaMCUDeque(deque);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLuaMCUDeque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isCellOccupied of class  PlayerPreBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerPreBattleState_isCellOccupied00
static int tolua_CenterSpace_PlayerPreBattleState_isCellOccupied00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerPreBattleState* self = (PlayerPreBattleState*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isCellOccupied'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isCellOccupied(x,z);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isCellOccupied'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_new00
static int tolua_CenterSpace_PlayerBattleState_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  Mtolua_new((PlayerBattleState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_new00_local
static int tolua_CenterSpace_PlayerBattleState_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  Mtolua_new((PlayerBattleState)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_new01
static int tolua_CenterSpace_PlayerBattleState_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,3,0));
  int team = ((int)  tolua_tonumber(tolua_S,4,0));
  int playerNumber = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  Mtolua_new((PlayerBattleState)(player,faction,team,playerNumber));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_PlayerBattleState_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_new01_local
static int tolua_CenterSpace_PlayerBattleState_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,3,0));
  int team = ((int)  tolua_tonumber(tolua_S,4,0));
  int playerNumber = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  Mtolua_new((PlayerBattleState)(player,faction,team,playerNumber));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_PlayerBattleState_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_delete00
static int tolua_CenterSpace_PlayerBattleState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startTurn of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_startTurn00
static int tolua_CenterSpace_PlayerBattleState_startTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startTurn'", NULL);
#endif
  {
   self->startTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endTurn of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_endTurn00
static int tolua_CenterSpace_PlayerBattleState_endTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endTurn'", NULL);
#endif
  {
   self->endTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endMyTurn of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_endMyTurn00
static int tolua_CenterSpace_PlayerBattleState_endMyTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endMyTurn'", NULL);
#endif
  {
   self->endMyTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endMyTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerProfile of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getPlayerProfile00
static int tolua_CenterSpace_PlayerBattleState_getPlayerProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerProfile'", NULL);
#endif
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  self->getPlayerProfile();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayer of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setPlayer00
static int tolua_CenterSpace_PlayerBattleState_setPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayer'", NULL);
#endif
  {
   self->setPlayer(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTeam of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getTeam00
static int tolua_CenterSpace_PlayerBattleState_getTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTeam'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getTeam();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTeam of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setTeam00
static int tolua_CenterSpace_PlayerBattleState_setTeam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  int team = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTeam'", NULL);
#endif
  {
   self->setTeam(team);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTeam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isMyTurn of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_isMyTurn00
static int tolua_CenterSpace_PlayerBattleState_isMyTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isMyTurn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isMyTurn();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isMyTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMyTurn of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setMyTurn00
static int tolua_CenterSpace_PlayerBattleState_setMyTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool turn = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMyTurn'", NULL);
#endif
  {
   self->setMyTurn(turn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMyTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerNumber of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getPlayerNumber00
static int tolua_CenterSpace_PlayerBattleState_getPlayerNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerNumber'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getPlayerNumber();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerNumber of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setPlayerNumber00
static int tolua_CenterSpace_PlayerBattleState_setPlayerNumber00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  int n = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerNumber'", NULL);
#endif
  {
   self->setPlayerNumber(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerNumber'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUs of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getMCUs00
static int tolua_CenterSpace_PlayerBattleState_getMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUs'", NULL);
#endif
  {
   std::deque<MCUController*> tolua_ret = (std::deque<MCUController*>)  self->getMCUs();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<MCUController*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUController*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<MCUController*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUController*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addMCU of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_addMCU00
static int tolua_CenterSpace_PlayerBattleState_addMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addMCU'", NULL);
#endif
  {
   self->addMCU(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMCUs of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setMCUs00
static int tolua_CenterSpace_PlayerBattleState_setMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<MCUController*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  std::deque<MCUController*> mcus = *((std::deque<MCUController*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMCUs'", NULL);
#endif
  {
   self->setMCUs(mcus);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getFactionTemplate00
static int tolua_CenterSpace_PlayerBattleState_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setFactionTemplate00
static int tolua_CenterSpace_PlayerBattleState_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isLocal of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_isLocal00
static int tolua_CenterSpace_PlayerBattleState_isLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isLocal'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isLocal();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLocal of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setLocal00
static int tolua_CenterSpace_PlayerBattleState_setLocal00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLocal'", NULL);
#endif
  {
   self->setLocal(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLocal'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: needsRender of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_needsRender00
static int tolua_CenterSpace_PlayerBattleState_needsRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'needsRender'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->needsRender();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'needsRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNeedsRender of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setNeedsRender00
static int tolua_CenterSpace_PlayerBattleState_setNeedsRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNeedsRender'", NULL);
#endif
  {
   self->setNeedsRender(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNeedsRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isAI of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_isAI00
static int tolua_CenterSpace_PlayerBattleState_isAI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isAI'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isAI();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isAI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAI of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setAI00
static int tolua_CenterSpace_PlayerBattleState_setAI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAI'", NULL);
#endif
  {
   self->setAI(value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProjectiles of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getProjectiles00
static int tolua_CenterSpace_PlayerBattleState_getProjectiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProjectiles'", NULL);
#endif
  {
   std::deque<Projectile*> tolua_ret = (std::deque<Projectile*>)  self->getProjectiles();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<Projectile*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<Projectile*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<Projectile*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<Projectile*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProjectiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addProjectile of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_addProjectile00
static int tolua_CenterSpace_PlayerBattleState_addProjectile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  Projectile* proj = ((Projectile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addProjectile'", NULL);
#endif
  {
   self->addProjectile(proj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addProjectile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeProjectile of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_removeProjectile00
static int tolua_CenterSpace_PlayerBattleState_removeProjectile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  Projectile* proj = ((Projectile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeProjectile'", NULL);
#endif
  {
   self->removeProjectile(proj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeProjectile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadScript of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_loadScript00
static int tolua_CenterSpace_PlayerBattleState_loadScript00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  const std::string scriptName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string scriptEntryPoint = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadScript'", NULL);
#endif
  {
   self->loadScript(scriptName,scriptEntryPoint);
   tolua_pushcppstring(tolua_S,(const char*)scriptName);
   tolua_pushcppstring(tolua_S,(const char*)scriptEntryPoint);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadScript'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIScriptEntryPoint of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getAIScriptEntryPoint00
static int tolua_CenterSpace_PlayerBattleState_getAIScriptEntryPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIScriptEntryPoint'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getAIScriptEntryPoint();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIScriptEntryPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIScriptName of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getAIScriptName00
static int tolua_CenterSpace_PlayerBattleState_getAIScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIScriptName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getAIScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAverageMCUXPos of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getAverageMCUXPos00
static int tolua_CenterSpace_PlayerBattleState_getAverageMCUXPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAverageMCUXPos'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getAverageMCUXPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAverageMCUXPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAverageMCUZPos of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getAverageMCUZPos00
static int tolua_CenterSpace_PlayerBattleState_getAverageMCUZPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAverageMCUZPos'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getAverageMCUZPos();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAverageMCUZPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateVisibilityState of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_updateVisibilityState00
static int tolua_CenterSpace_PlayerBattleState_updateVisibilityState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateVisibilityState'", NULL);
#endif
  {
   self->updateVisibilityState();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateVisibilityState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGuiValues of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getGuiValues00
static int tolua_CenterSpace_PlayerBattleState_getGuiValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGuiValues'", NULL);
#endif
  {
   std::hash_map<std::string,std::string> tolua_ret = (std::hash_map<std::string,std::string>)  self->getGuiValues();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::hash_map<std::string,std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::hash_map<std::string,std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::hash_map<std::string,std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGuiValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAIGroups of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_setAIGroups00
static int tolua_CenterSpace_PlayerBattleState_setAIGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::deque<AIGroup*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  std::deque<AIGroup*> formations = *((std::deque<AIGroup*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAIGroups'", NULL);
#endif
  {
   self->setAIGroups(formations);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAIGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAIGroup of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_addAIGroup00
static int tolua_CenterSpace_PlayerBattleState_addAIGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* formation = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAIGroup'", NULL);
#endif
  {
   self->addAIGroup(formation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAIGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreAIGroups of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_hasMoreAIGroups00
static int tolua_CenterSpace_PlayerBattleState_hasMoreAIGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreAIGroups'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreAIGroups();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreAIGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextAIGroup of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getNextAIGroup00
static int tolua_CenterSpace_PlayerBattleState_getNextAIGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextAIGroup'", NULL);
#endif
  {
   AIGroup* tolua_ret = (AIGroup*)  self->getNextAIGroup();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AIGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextAIGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hasMoreVisibleMCUs of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_hasMoreVisibleMCUs00
static int tolua_CenterSpace_PlayerBattleState_hasMoreVisibleMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hasMoreVisibleMCUs'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->hasMoreVisibleMCUs();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hasMoreVisibleMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getNextVisibleMCU of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getNextVisibleMCU00
static int tolua_CenterSpace_PlayerBattleState_getNextVisibleMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getNextVisibleMCU'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getNextVisibleMCU();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getNextVisibleMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAllVisibleMCUs of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getAllVisibleMCUs00
static int tolua_CenterSpace_PlayerBattleState_getAllVisibleMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAllVisibleMCUs'", NULL);
#endif
  {
   std::deque<MCUController*> tolua_ret = (std::deque<MCUController*>)  self->getAllVisibleMCUs();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<MCUController*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUController*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<MCUController*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<MCUController*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAllVisibleMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfMovementChange of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_notifyOfMovementChange00
static int tolua_CenterSpace_PlayerBattleState_notifyOfMovementChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfMovementChange'", NULL);
#endif
  {
   self->notifyOfMovementChange(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfMovementChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfEnemyVisibilityChange of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_notifyOfEnemyVisibilityChange00
static int tolua_CenterSpace_PlayerBattleState_notifyOfEnemyVisibilityChange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  MCUController* enemy = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfEnemyVisibilityChange'", NULL);
#endif
  {
   self->notifyOfEnemyVisibilityChange(controller,enemy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfEnemyVisibilityChange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfNewOrders of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_notifyOfNewOrders00
static int tolua_CenterSpace_PlayerBattleState_notifyOfNewOrders00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  GroupOrder* order = ((GroupOrder*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfNewOrders'", NULL);
#endif
  {
   self->notifyOfNewOrders(group,order);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfNewOrders'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfOrderCompletion of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_notifyOfOrderCompletion00
static int tolua_CenterSpace_PlayerBattleState_notifyOfOrderCompletion00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"GroupOrder",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
  GroupOrder* order = ((GroupOrder*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfOrderCompletion'", NULL);
#endif
  {
   self->notifyOfOrderCompletion(group,order);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfOrderCompletion'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: notifyOfFinishedTurn of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_notifyOfFinishedTurn00
static int tolua_CenterSpace_PlayerBattleState_notifyOfFinishedTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AIGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  AIGroup* group = ((AIGroup*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'notifyOfFinishedTurn'", NULL);
#endif
  {
   self->notifyOfFinishedTurn(group);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'notifyOfFinishedTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loopFinished of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_loopFinished00
static int tolua_CenterSpace_PlayerBattleState_loopFinished00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loopFinished'", NULL);
#endif
  {
   self->loopFinished();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loopFinished'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCoverageMap of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_getCoverageMap00
static int tolua_CenterSpace_PlayerBattleState_getCoverageMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCoverageMap'", NULL);
#endif
  {
   CoverageMap* tolua_ret = (CoverageMap*)  self->getCoverageMap();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CoverageMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCoverageMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateCoverageMap of class  PlayerBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_PlayerBattleState_updateCoverageMap00
static int tolua_CenterSpace_PlayerBattleState_updateCoverageMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  PlayerBattleState* self = (PlayerBattleState*)  tolua_tousertype(tolua_S,1,0);
  bool reset = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateCoverageMap'", NULL);
#endif
  {
   self->updateCoverageMap(reset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateCoverageMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_delete00
static int tolua_CenterSpace_InBaseState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_enter00
static int tolua_CenterSpace_InBaseState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_exit00
static int tolua_CenterSpace_InBaseState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_pause00
static int tolua_CenterSpace_InBaseState_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_resume00
static int tolua_CenterSpace_InBaseState_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_update00
static int tolua_CenterSpace_InBaseState_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  float timeSinceLastFrame = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(timeSinceLastFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createScene of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_createScene00
static int tolua_CenterSpace_InBaseState_createScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createScene'", NULL);
#endif
  {
   self->createScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroyScene of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_destroyScene00
static int tolua_CenterSpace_InBaseState_destroyScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroyScene'", NULL);
#endif
  {
   self->destroyScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroyScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFactionTemplate of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_getFactionTemplate00
static int tolua_CenterSpace_InBaseState_getFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->getFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerProfile of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_getPlayerProfile00
static int tolua_CenterSpace_InBaseState_getPlayerProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerProfile'", NULL);
#endif
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  self->getPlayerProfile();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCampaignState of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_getCampaignState00
static int tolua_CenterSpace_InBaseState_getCampaignState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCampaignState'", NULL);
#endif
  {
   CampaignState* tolua_ret = (CampaignState*)  self->getCampaignState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CampaignState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampaignState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_setFactionTemplate00
static int tolua_CenterSpace_InBaseState_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerProfile of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_setPlayerProfile00
static int tolua_CenterSpace_InBaseState_setPlayerProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerProfile'", NULL);
#endif
  {
   self->setPlayerProfile(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCampaignState of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_setCampaignState00
static int tolua_CenterSpace_InBaseState_setCampaignState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  CampaignState* campaign = ((CampaignState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCampaignState'", NULL);
#endif
  {
   self->setCampaignState(campaign);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCampaignState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadCampaignState of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_loadCampaignState00
static int tolua_CenterSpace_InBaseState_loadCampaignState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  long playerProfileId = ((long)  tolua_tonumber(tolua_S,2,0));
  int factionId = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadCampaignState'", NULL);
#endif
  {
   self->loadCampaignState(playerProfileId,factionId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadCampaignState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadMainBaseScreen of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_loadMainBaseScreen00
static int tolua_CenterSpace_InBaseState_loadMainBaseScreen00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadMainBaseScreen'", NULL);
#endif
  {
   self->loadMainBaseScreen();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadMainBaseScreen'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startMission of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_startMission00
static int tolua_CenterSpace_InBaseState_startMission00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startMission'", NULL);
#endif
  {
   self->startMission();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startMission'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ProcessEvent of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_ProcessEvent00
static int tolua_CenterSpace_InBaseState_ProcessEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rocket::Core::Event",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  Rocket::Core::Event* event = ((Rocket::Core::Event*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ProcessEvent'", NULL);
#endif
  {
   self->ProcessEvent(*event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ProcessEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onSelectedElementChanged of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_onSelectedElementChanged00
static int tolua_CenterSpace_InBaseState_onSelectedElementChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBaseState* self = (InBaseState*)  tolua_tousertype(tolua_S,1,0);
  DataSourceType source = ((DataSourceType) (int)  tolua_tonumber(tolua_S,2,0));
  int id = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onSelectedElementChanged'", NULL);
#endif
  {
   self->onSelectedElementChanged(source,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onSelectedElementChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  InBaseState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBaseState_getSingletonPtr00
static int tolua_CenterSpace_InBaseState_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InBaseState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InBaseState* tolua_ret = (InBaseState*)  InBaseState::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InBaseState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_delete00
static int tolua_CenterSpace_InBattleState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_enter00
static int tolua_CenterSpace_InBattleState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_exit00
static int tolua_CenterSpace_InBattleState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endBattle of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_endBattle00
static int tolua_CenterSpace_InBattleState_endBattle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endBattle'", NULL);
#endif
  {
   self->endBattle();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endBattle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: restart of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_restart00
static int tolua_CenterSpace_InBattleState_restart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'restart'", NULL);
#endif
  {
   self->restart();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'restart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cleanUp of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_cleanUp00
static int tolua_CenterSpace_InBattleState_cleanUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cleanUp'", NULL);
#endif
  {
   self->cleanUp();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cleanUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startTurn of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_startTurn00
static int tolua_CenterSpace_InBattleState_startTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startTurn'", NULL);
#endif
  {
   self->startTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endTurn of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_endTurn00
static int tolua_CenterSpace_InBattleState_endTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endTurn'", NULL);
#endif
  {
   self->endTurn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTurnLimit of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getTurnLimit00
static int tolua_CenterSpace_InBattleState_getTurnLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTurnLimit'", NULL);
#endif
  {
   Ogre::Real tolua_ret = (Ogre::Real)  self->getTurnLimit();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Ogre::Real)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Real");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Ogre::Real));
     tolua_pushusertype(tolua_S,tolua_obj,"Ogre::Real");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTurnLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTurnLimit of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_setTurnLimit00
static int tolua_CenterSpace_InBattleState_setTurnLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Ogre::Real",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Real limit = *((Ogre::Real*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTurnLimit'", NULL);
#endif
  {
   self->setTurnLimit(limit);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTurnLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAIScriptName of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getAIScriptName00
static int tolua_CenterSpace_InBattleState_getAIScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAIScriptName'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getAIScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAIScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAIScriptName of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_setAIScriptName00
static int tolua_CenterSpace_InBattleState_setAIScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAIScriptName'", NULL);
#endif
  {
   self->setAIScriptName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAIScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBattlefieldGrid of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getBattlefieldGrid00
static int tolua_CenterSpace_InBattleState_getBattlefieldGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBattlefieldGrid'", NULL);
#endif
  {
   BattlefieldGrid* tolua_ret = (BattlefieldGrid*)  self->getBattlefieldGrid();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"BattlefieldGrid");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBattlefieldGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBattlefieldGrid of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_setBattlefieldGrid00
static int tolua_CenterSpace_InBattleState_setBattlefieldGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"BattlefieldGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  BattlefieldGrid* grid = ((BattlefieldGrid*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBattlefieldGrid'", NULL);
#endif
  {
   self->setBattlefieldGrid(grid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBattlefieldGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPathFindingManager of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getPathFindingManager00
static int tolua_CenterSpace_InBattleState_getPathFindingManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPathFindingManager'", NULL);
#endif
  {
   PathFindingManager* tolua_ret = (PathFindingManager*)  self->getPathFindingManager();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PathFindingManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPathFindingManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addPlayer of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_addPlayer00
static int tolua_CenterSpace_InBattleState_addPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerPreBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  PlayerPreBattleState* state = ((PlayerPreBattleState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addPlayer'", NULL);
#endif
  {
   self->addPlayer(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: placeMCUs of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_placeMCUs00
static int tolua_CenterSpace_InBattleState_placeMCUs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'placeMCUs'", NULL);
#endif
  {
   self->placeMCUs();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'placeMCUs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removePlayer of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_removePlayer00
static int tolua_CenterSpace_InBattleState_removePlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removePlayer'", NULL);
#endif
  {
   self->removePlayer(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removePlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAllPlayers of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getAllPlayers00
static int tolua_CenterSpace_InBattleState_getAllPlayers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAllPlayers'", NULL);
#endif
  {
   std::deque<PlayerBattleState*> tolua_ret = (std::deque<PlayerBattleState*>)  self->getAllPlayers();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::deque<PlayerBattleState*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<PlayerBattleState*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::deque<PlayerBattleState*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::deque<PlayerBattleState*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAllPlayers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mouseMoved of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_mouseMoved00
static int tolua_CenterSpace_InBattleState_mouseMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const OIS::MouseEvent",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const OIS::MouseEvent* arg = ((const OIS::MouseEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mouseMoved'", NULL);
#endif
  {
   self->mouseMoved(*arg);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mouseMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mousePressed of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_mousePressed00
static int tolua_CenterSpace_InBattleState_mousePressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const OIS::MouseEvent",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"OIS::MouseButtonID",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const OIS::MouseEvent* arg = ((const OIS::MouseEvent*)  tolua_tousertype(tolua_S,2,0));
  OIS::MouseButtonID id = *((OIS::MouseButtonID*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mousePressed'", NULL);
#endif
  {
   self->mousePressed(*arg,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mousePressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mouseReleased of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_mouseReleased00
static int tolua_CenterSpace_InBattleState_mouseReleased00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const OIS::MouseEvent",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"OIS::MouseButtonID",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const OIS::MouseEvent* arg = ((const OIS::MouseEvent*)  tolua_tousertype(tolua_S,2,0));
  OIS::MouseButtonID id = *((OIS::MouseButtonID*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mouseReleased'", NULL);
#endif
  {
   self->mouseReleased(*arg,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mouseReleased'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlayerToRender of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getPlayerToRender00
static int tolua_CenterSpace_InBattleState_getPlayerToRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlayerToRender'", NULL);
#endif
  {
   PlayerBattleState* tolua_ret = (PlayerBattleState*)  self->getPlayerToRender();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerBattleState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlayerToRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlayerToRender of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_setPlayerToRender00
static int tolua_CenterSpace_InBattleState_setPlayerToRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  PlayerBattleState* player = ((PlayerBattleState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlayerToRender'", NULL);
#endif
  {
   self->setPlayerToRender(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlayerToRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onSelectedElementChanged of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_onSelectedElementChanged00
static int tolua_CenterSpace_InBattleState_onSelectedElementChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  DataSourceType source = ((DataSourceType) (int)  tolua_tonumber(tolua_S,2,0));
  int id = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onSelectedElementChanged'", NULL);
#endif
  {
   self->onSelectedElementChanged(source,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onSelectedElementChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fireWeapon of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_fireWeapon00
static int tolua_CenterSpace_InBattleState_fireWeapon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,3,0));
  bool returningFire = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fireWeapon'", NULL);
#endif
  {
   self->fireWeapon(source,weapon,returningFire);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fireWeapon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMCUByBattlefieldID of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getMCUByBattlefieldID00
static int tolua_CenterSpace_InBattleState_getMCUByBattlefieldID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMCUByBattlefieldID'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getMCUByBattlefieldID(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMCUByBattlefieldID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addProjectile of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_addProjectile00
static int tolua_CenterSpace_InBattleState_addProjectile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Projectile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  Projectile* proj = ((Projectile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addProjectile'", NULL);
#endif
  {
   self->addProjectile(proj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addProjectile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addShield of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_addShield00
static int tolua_CenterSpace_InBattleState_addShield00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Shield",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  Shield* shield = ((Shield*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addShield'", NULL);
#endif
  {
   self->addShield(shield);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addShield'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAccuracy of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_updateAccuracy00
static int tolua_CenterSpace_InBattleState_updateAccuracy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAccuracy'", NULL);
#endif
  {
   self->updateAccuracy(mcu,weapon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAccuracy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: calculateAccuracy of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_calculateAccuracy00
static int tolua_CenterSpace_InBattleState_calculateAccuracy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"WeaponHardpoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  WeaponHardpoint* weapon = ((WeaponHardpoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'calculateAccuracy'", NULL);
#endif
  {
   float tolua_ret = (float)  self->calculateAccuracy(mcu,weapon);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'calculateAccuracy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: calculateCoverage of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_calculateCoverage00
static int tolua_CenterSpace_InBattleState_calculateCoverage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* origin = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,3,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'calculateCoverage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->calculateCoverage(*origin,source,target);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'calculateCoverage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canSee of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_canSee00
static int tolua_CenterSpace_InBattleState_canSee00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"MCUController",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* origin = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Ogre::Vector3* dest = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,3,0));
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,4,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canSee'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canSee(*origin,*dest,source,target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'canSee'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: canSee of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_canSee01
static int tolua_CenterSpace_InBattleState_canSee01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* origin = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Ogre::Vector3* dest = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,3,0));
  MCUController* target = ((MCUController*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'canSee'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->canSee(*origin,*dest,target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_CenterSpace_InBattleState_canSee00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getTarget00
static int tolua_CenterSpace_InBattleState_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Ogre::Vector3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const Ogre::Vector3",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  const Ogre::Vector3* origin = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,2,0));
  const Ogre::Vector3* dest = ((const Ogre::Vector3*)  tolua_tousertype(tolua_S,3,0));
  MCUController* source = ((MCUController*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'", NULL);
#endif
  {
   MCUController* tolua_ret = (MCUController*)  self->getTarget(*origin,*dest,source);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MCUController");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ProcessEvent of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_ProcessEvent00
static int tolua_CenterSpace_InBattleState_ProcessEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Rocket::Core::Event",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  Rocket::Core::Event* e = ((Rocket::Core::Event*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ProcessEvent'", NULL);
#endif
  {
   self->ProcessEvent(*e);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ProcessEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: renderPath of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_renderPath00
static int tolua_CenterSpace_InBattleState_renderPath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"std::deque<BattlefieldGridCell*>",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* controller = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
  std::deque<BattlefieldGridCell*> path = *((std::deque<BattlefieldGridCell*>*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'renderPath'", NULL);
#endif
  {
   self->renderPath(controller,path);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'renderPath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hidePath of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_hidePath00
static int tolua_CenterSpace_InBattleState_hidePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hidePath'", NULL);
#endif
  {
   self->hidePath();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hidePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectMCU of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_selectMCU00
static int tolua_CenterSpace_InBattleState_selectMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectMCU'", NULL);
#endif
  {
   self->selectMCU(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectTarget of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_selectTarget00
static int tolua_CenterSpace_InBattleState_selectTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MCUController",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
  MCUController* mcu = ((MCUController*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectTarget'", NULL);
#endif
  {
   self->selectTarget(mcu);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nextMCU of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_nextMCU00
static int tolua_CenterSpace_InBattleState_nextMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nextMCU'", NULL);
#endif
  {
   self->nextMCU();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nextMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: prevMCU of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_prevMCU00
static int tolua_CenterSpace_InBattleState_prevMCU00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'prevMCU'", NULL);
#endif
  {
   self->prevMCU();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'prevMCU'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isLocalPlayersTurn of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_isLocalPlayersTurn00
static int tolua_CenterSpace_InBattleState_isLocalPlayersTurn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InBattleState* self = (InBattleState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isLocalPlayersTurn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isLocalPlayersTurn();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isLocalPlayersTurn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  InBattleState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_InBattleState_getSingletonPtr00
static int tolua_CenterSpace_InBattleState_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InBattleState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InBattleState* tolua_ret = (InBattleState*)  InBattleState::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InBattleState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_delete00
static int tolua_CenterSpace_ProfileManagerState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_enter00
static int tolua_CenterSpace_ProfileManagerState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_exit00
static int tolua_CenterSpace_ProfileManagerState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_pause00
static int tolua_CenterSpace_ProfileManagerState_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_resume00
static int tolua_CenterSpace_ProfileManagerState_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createScene of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_createScene00
static int tolua_CenterSpace_ProfileManagerState_createScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createScene'", NULL);
#endif
  {
   self->createScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroyScene of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_destroyScene00
static int tolua_CenterSpace_ProfileManagerState_destroyScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroyScene'", NULL);
#endif
  {
   self->destroyScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroyScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentPlayer of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_getCurrentPlayer00
static int tolua_CenterSpace_ProfileManagerState_getCurrentPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentPlayer'", NULL);
#endif
  {
   PlayerProfile* tolua_ret = (PlayerProfile*)  self->getCurrentPlayer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PlayerProfile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentPlayer of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_setCurrentPlayer00
static int tolua_CenterSpace_ProfileManagerState_setCurrentPlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentPlayer'", NULL);
#endif
  {
   self->setCurrentPlayer(player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentPlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onSelectedElementChanged of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_onSelectedElementChanged00
static int tolua_CenterSpace_ProfileManagerState_onSelectedElementChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
  DataSourceType source = ((DataSourceType) (int)  tolua_tonumber(tolua_S,2,0));
  int id = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onSelectedElementChanged'", NULL);
#endif
  {
   self->onSelectedElementChanged(source,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onSelectedElementChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: newProfile of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_newProfile00
static int tolua_CenterSpace_ProfileManagerState_newProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'newProfile'", NULL);
#endif
  {
   self->newProfile();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'newProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectProfile of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_selectProfile00
static int tolua_CenterSpace_ProfileManagerState_selectProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ProfileManagerState* self = (ProfileManagerState*)  tolua_tousertype(tolua_S,1,0);
  const std::string profileId = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectProfile'", NULL);
#endif
  {
   self->selectProfile(profileId);
   tolua_pushcppstring(tolua_S,(const char*)profileId);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  ProfileManagerState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_ProfileManagerState_getSingletonPtr00
static int tolua_CenterSpace_ProfileManagerState_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ProfileManagerState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ProfileManagerState* tolua_ret = (ProfileManagerState*)  ProfileManagerState::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"ProfileManagerState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_delete00
static int tolua_CenterSpace_MainMenuState_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enter of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_enter00
static int tolua_CenterSpace_MainMenuState_enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enter'", NULL);
#endif
  {
   self->enter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exit of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_exit00
static int tolua_CenterSpace_MainMenuState_exit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exit'", NULL);
#endif
  {
   self->exit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_pause00
static int tolua_CenterSpace_MainMenuState_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_resume00
static int tolua_CenterSpace_MainMenuState_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadSinglePlayer of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_loadSinglePlayer00
static int tolua_CenterSpace_MainMenuState_loadSinglePlayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadSinglePlayer'", NULL);
#endif
  {
   self->loadSinglePlayer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadSinglePlayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_getSingletonPtr00
static int tolua_CenterSpace_MainMenuState_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   MainMenuState* tolua_ret = (MainMenuState*)  MainMenuState::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MainMenuState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadCampaignByName of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_loadCampaignByName00
static int tolua_CenterSpace_MainMenuState_loadCampaignByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
  const std::string faction = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadCampaignByName'", NULL);
#endif
  {
   self->loadCampaignByName(faction);
   tolua_pushcppstring(tolua_S,(const char*)faction);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadCampaignByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onSelectedElementChanged of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_MainMenuState_onSelectedElementChanged00
static int tolua_CenterSpace_MainMenuState_onSelectedElementChanged00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"MainMenuState",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
  DataSourceType source = ((DataSourceType) (int)  tolua_tonumber(tolua_S,2,0));
  int id = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onSelectedElementChanged'", NULL);
#endif
  {
   self->onSelectedElementChanged(source,id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onSelectedElementChanged'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __Ogre of class  MainMenuState */
#ifndef TOLUA_DISABLE_tolua_get_MainMenuState___Ogre__FrameListener__
static int tolua_get_MainMenuState___Ogre__FrameListener__(lua_State* tolua_S)
{
  MainMenuState* self = (MainMenuState*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__Ogre'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<Ogre::FrameListener*>(self), "Ogre::FrameListener");
#else
   tolua_pushusertype(tolua_S,(void*)((Ogre::FrameListener*)self), "Ogre::FrameListener");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_delete00
static int tolua_CenterSpace_CampaignMissionManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCampaignState of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_getCampaignState00
static int tolua_CenterSpace_CampaignMissionManager_getCampaignState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCampaignState'", NULL);
#endif
  {
   CampaignState* tolua_ret = (CampaignState*)  self->getCampaignState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CampaignState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCampaignState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCampaignState of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_setCampaignState00
static int tolua_CenterSpace_CampaignMissionManager_setCampaignState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CampaignState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
  CampaignState* campaign = ((CampaignState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCampaignState'", NULL);
#endif
  {
   self->setCampaignState(campaign);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCampaignState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_setFactionTemplate00
static int tolua_CenterSpace_CampaignMissionManager_setFactionTemplate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   FactionTemplate* tolua_ret = (FactionTemplate*)  self->setFactionTemplate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FactionTemplate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFactionTemplate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFactionTemplate of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_setFactionTemplate01
static int tolua_CenterSpace_CampaignMissionManager_setFactionTemplate01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"FactionTemplate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
  FactionTemplate* faction = ((FactionTemplate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFactionTemplate'", NULL);
#endif
  {
   self->setFactionTemplate(faction);
  }
 }
 return 0;
tolua_lerror:
 return tolua_CenterSpace_CampaignMissionManager_setFactionTemplate00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: loadRandomMission of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_loadRandomMission00
static int tolua_CenterSpace_CampaignMissionManager_loadRandomMission00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"PlayerProfile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  PlayerProfile* player = ((PlayerProfile*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'loadRandomMission'", NULL);
#endif
  {
   self->loadRandomMission(id,player);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'loadRandomMission'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: generateRandomMissions of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_generateRandomMissions00
static int tolua_CenterSpace_CampaignMissionManager_generateRandomMissions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'generateRandomMissions'", NULL);
#endif
  {
   self->generateRandomMissions();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'generateRandomMissions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRandomMissionDataSet of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_getRandomMissionDataSet00
static int tolua_CenterSpace_CampaignMissionManager_getRandomMissionDataSet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CampaignMissionManager* self = (CampaignMissionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRandomMissionDataSet'", NULL);
#endif
  {
   DataSet* tolua_ret = (DataSet*)  self->getRandomMissionDataSet();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"DataSet");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRandomMissionDataSet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  CampaignMissionManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_CampaignMissionManager_getSingletonPtr00
static int tolua_CenterSpace_CampaignMissionManager_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CampaignMissionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CampaignMissionManager* tolua_ret = (CampaignMissionManager*)  CampaignMissionManager::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CampaignMissionManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_delete00
static int tolua_CenterSpace_GameManager_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeState of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_changeState00
static int tolua_CenterSpace_GameManager_changeState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  GameState* gameState = ((GameState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeState'", NULL);
#endif
  {
   self->changeState(gameState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushState of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_pushState00
static int tolua_CenterSpace_GameManager_pushState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"GameState",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  GameState* gameState = ((GameState*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushState'", NULL);
#endif
  {
   self->pushState(gameState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: popState of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_popState00
static int tolua_CenterSpace_GameManager_popState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'popState'", NULL);
#endif
  {
   self->popState();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'popState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: requestShutdown of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_requestShutdown00
static int tolua_CenterSpace_GameManager_requestShutdown00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'requestShutdown'", NULL);
#endif
  {
   self->requestShutdown();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'requestShutdown'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateCoords of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_updateCoords00
static int tolua_CenterSpace_GameManager_updateCoords00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  std::string type = ((std::string)  tolua_tocppstring(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateCoords'", NULL);
#endif
  {
   self->updateCoords(x,y,z,type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateCoords'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateDebugText of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_updateDebugText00
static int tolua_CenterSpace_GameManager_updateDebugText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateDebugText'", NULL);
#endif
  {
   self->updateDebugText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateDebugText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCamera of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_getCamera00
static int tolua_CenterSpace_GameManager_getCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCamera'", NULL);
#endif
  {
   Ogre::Camera* tolua_ret = (Ogre::Camera*)  self->getCamera(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeCamera of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_changeCamera00
static int tolua_CenterSpace_GameManager_changeCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Ogre::Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  Ogre::Camera* camera = ((Ogre::Camera*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeCamera'", NULL);
#endif
  {
   self->changeCamera(camera);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneManager of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_getSceneManager00
static int tolua_CenterSpace_GameManager_getSceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneManager'", NULL);
#endif
  {
   Ogre::SceneManager* tolua_ret = (Ogre::SceneManager*)  self->getSceneManager();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::SceneManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActiveState of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_getActiveState00
static int tolua_CenterSpace_GameManager_getActiveState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActiveState'", NULL);
#endif
  {
   GameState* tolua_ret = (GameState*)  self->getActiveState();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameState");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActiveState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFogCamera of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_getFogCamera00
static int tolua_CenterSpace_GameManager_getFogCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFogCamera'", NULL);
#endif
  {
   Ogre::Camera* tolua_ret = (Ogre::Camera*)  self->getFogCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFogCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFogSceneManager of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_getFogSceneManager00
static int tolua_CenterSpace_GameManager_getFogSceneManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFogSceneManager'", NULL);
#endif
  {
   Ogre::SceneManager* tolua_ret = (Ogre::SceneManager*)  self->getFogSceneManager();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Ogre::SceneManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFogSceneManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: luaDebugReport of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_luaDebugReport00
static int tolua_CenterSpace_GameManager_luaDebugReport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string message = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float number = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'luaDebugReport'", NULL);
#endif
  {
   self->luaDebugReport(message,number);
   tolua_pushcppstring(tolua_S,(const char*)message);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'luaDebugReport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSingletonPtr of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_CenterSpace_GameManager_getSingletonPtr00
static int tolua_CenterSpace_GameManager_getSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GameManager* tolua_ret = (GameManager*)  GameManager::getSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GameManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_CenterSpace_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LuaElement","LuaElement","",tolua_collect_LuaElement);
  #else
  tolua_cclass(tolua_S,"LuaElement","LuaElement","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LuaElement");
   tolua_function(tolua_S,"new",tolua_CenterSpace_LuaElement_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_LuaElement_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_LuaElement_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_LuaElement_delete00);
   tolua_function(tolua_S,"getId",tolua_CenterSpace_LuaElement_getId00);
   tolua_function(tolua_S,"setId",tolua_CenterSpace_LuaElement_setId00);
   tolua_function(tolua_S,"getTagName",tolua_CenterSpace_LuaElement_getTagName00);
   tolua_function(tolua_S,"getName",tolua_CenterSpace_LuaElement_getName00);
   tolua_function(tolua_S,"setName",tolua_CenterSpace_LuaElement_setName00);
   tolua_function(tolua_S,"isClassSet",tolua_CenterSpace_LuaElement_isClassSet00);
   tolua_function(tolua_S,"setClass",tolua_CenterSpace_LuaElement_setClass00);
   tolua_function(tolua_S,"getProperty",tolua_CenterSpace_LuaElement_getProperty00);
   tolua_function(tolua_S,"setProperty",tolua_CenterSpace_LuaElement_setProperty00);
   tolua_function(tolua_S,"removeProperty",tolua_CenterSpace_LuaElement_removeProperty00);
   tolua_function(tolua_S,"getAttribute",tolua_CenterSpace_LuaElement_getAttribute00);
   tolua_function(tolua_S,"hasAttribute",tolua_CenterSpace_LuaElement_hasAttribute00);
   tolua_function(tolua_S,"setAttribute",tolua_CenterSpace_LuaElement_setAttribute00);
   tolua_function(tolua_S,"removeAttribute",tolua_CenterSpace_LuaElement_removeAttribute00);
   tolua_function(tolua_S,"focus",tolua_CenterSpace_LuaElement_focus00);
   tolua_function(tolua_S,"blur",tolua_CenterSpace_LuaElement_blur00);
   tolua_function(tolua_S,"click",tolua_CenterSpace_LuaElement_click00);
   tolua_function(tolua_S,"getOwnerDocument",tolua_CenterSpace_LuaElement_getOwnerDocument00);
   tolua_function(tolua_S,"getParentNode",tolua_CenterSpace_LuaElement_getParentNode00);
   tolua_function(tolua_S,"getNextSibling",tolua_CenterSpace_LuaElement_getNextSibling00);
   tolua_function(tolua_S,"getPreviousSibling",tolua_CenterSpace_LuaElement_getPreviousSibling00);
   tolua_function(tolua_S,"getFirstChild",tolua_CenterSpace_LuaElement_getFirstChild00);
   tolua_function(tolua_S,"getLastChild",tolua_CenterSpace_LuaElement_getLastChild00);
   tolua_function(tolua_S,"getChild",tolua_CenterSpace_LuaElement_getChild00);
   tolua_function(tolua_S,"getNumChildren",tolua_CenterSpace_LuaElement_getNumChildren00);
   tolua_function(tolua_S,"getItemId",tolua_CenterSpace_LuaElement_getItemId00);
   tolua_function(tolua_S,"hasChildNodes",tolua_CenterSpace_LuaElement_hasChildNodes00);
   tolua_function(tolua_S,"removeChild",tolua_CenterSpace_LuaElement_removeChild00);
   tolua_function(tolua_S,"getInnerRML",tolua_CenterSpace_LuaElement_getInnerRML00);
   tolua_function(tolua_S,"setInnerRML",tolua_CenterSpace_LuaElement_setInnerRML00);
   tolua_function(tolua_S,"getElementById",tolua_CenterSpace_LuaElement_getElementById00);
   tolua_function(tolua_S,"getElementByName",tolua_CenterSpace_LuaElement_getElementByName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"LuaDocument","LuaDocument","LuaElement",tolua_collect_LuaDocument);
  #else
  tolua_cclass(tolua_S,"LuaDocument","LuaDocument","LuaElement",NULL);
  #endif
  tolua_beginmodule(tolua_S,"LuaDocument");
   tolua_function(tolua_S,"new",tolua_CenterSpace_LuaDocument_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_LuaDocument_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_LuaDocument_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_LuaDocument_delete00);
   tolua_function(tolua_S,"getDocument",tolua_CenterSpace_LuaDocument_getDocument00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Template","Template","",tolua_collect_Template);
  #else
  tolua_cclass(tolua_S,"Template","Template","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Template");
   tolua_function(tolua_S,"new",tolua_CenterSpace_Template_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_Template_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_Template_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_Template_delete00);
   tolua_function(tolua_S,"getId",tolua_CenterSpace_Template_getId00);
   tolua_function(tolua_S,"setId",tolua_CenterSpace_Template_setId00);
   tolua_function(tolua_S,"getName",tolua_CenterSpace_Template_getName00);
   tolua_function(tolua_S,"setName",tolua_CenterSpace_Template_setName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RocketDocumentDefinition","RocketDocumentDefinition","",tolua_collect_RocketDocumentDefinition);
  #else
  tolua_cclass(tolua_S,"RocketDocumentDefinition","RocketDocumentDefinition","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RocketDocumentDefinition");
   tolua_function(tolua_S,"new",tolua_CenterSpace_RocketDocumentDefinition_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RocketDocumentDefinition_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RocketDocumentDefinition_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_RocketDocumentDefinition_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RocketDocumentDefinition_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RocketDocumentDefinition_new01_local);
   tolua_variable(tolua_S,"Modal",tolua_get_RocketDocumentDefinition_Modal,tolua_set_RocketDocumentDefinition_Modal);
   tolua_variable(tolua_S,"ID",tolua_get_RocketDocumentDefinition_ID,tolua_set_RocketDocumentDefinition_ID);
   tolua_variable(tolua_S,"Filename",tolua_get_RocketDocumentDefinition_Filename,tolua_set_RocketDocumentDefinition_Filename);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"RocketDocuments","RocketDocuments","",NULL);
  tolua_beginmodule(tolua_S,"RocketDocuments");
   tolua_cclass(tolua_S,"ProfileMenu","RocketDocuments::ProfileMenu","",NULL);
   tolua_beginmodule(tolua_S,"ProfileMenu");
    tolua_variable(tolua_S,"ProfileMain",tolua_get_RocketDocuments__ProfileMenu_ProfileMain,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"MainMenu","RocketDocuments::MainMenu","",NULL);
   tolua_beginmodule(tolua_S,"MainMenu");
    tolua_variable(tolua_S,"Main",tolua_get_RocketDocuments__MainMenu_Main,NULL);
    tolua_variable(tolua_S,"SinglePlayer",tolua_get_RocketDocuments__MainMenu_SinglePlayer,NULL);
    tolua_variable(tolua_S,"Campaign",tolua_get_RocketDocuments__MainMenu_Campaign,NULL);
    tolua_variable(tolua_S,"Multiplayer",tolua_get_RocketDocuments__MainMenu_Multiplayer,NULL);
    tolua_variable(tolua_S,"Options",tolua_get_RocketDocuments__MainMenu_Options,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"InBase","RocketDocuments::InBase","",NULL);
   tolua_beginmodule(tolua_S,"InBase");
    tolua_variable(tolua_S,"Main",tolua_get_RocketDocuments__InBase_Main,NULL);
    tolua_variable(tolua_S,"MissionSelect",tolua_get_RocketDocuments__InBase_MissionSelect,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"MCUBay","RocketDocuments::MCUBay","",NULL);
   tolua_beginmodule(tolua_S,"MCUBay");
    tolua_variable(tolua_S,"Main",tolua_get_RocketDocuments__MCUBay_Main,NULL);
    tolua_variable(tolua_S,"MCUPurchase",tolua_get_RocketDocuments__MCUBay_MCUPurchase,NULL);
    tolua_variable(tolua_S,"MCUSelectEdit",tolua_get_RocketDocuments__MCUBay_MCUSelectEdit,NULL);
    tolua_variable(tolua_S,"MCUEdit",tolua_get_RocketDocuments__MCUBay_MCUEdit,NULL);
    tolua_variable(tolua_S,"MCUComponentSelect",tolua_get_RocketDocuments__MCUBay_MCUComponentSelect,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"InBattle","RocketDocuments::InBattle","",NULL);
   tolua_beginmodule(tolua_S,"InBattle");
    tolua_variable(tolua_S,"InBattleHUD",tolua_get_RocketDocuments__InBattle_InBattleHUD,NULL);
    tolua_variable(tolua_S,"InBattleMenu",tolua_get_RocketDocuments__InBattle_InBattleMenu,NULL);
    tolua_variable(tolua_S,"BetweenTurnsHUD",tolua_get_RocketDocuments__InBattle_BetweenTurnsHUD,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"RocketRenderer","RocketRenderer","Ogre::RenderQueueListener",NULL);
  tolua_beginmodule(tolua_S,"RocketRenderer");
   tolua_function(tolua_S,"unloadCurrentDocument",tolua_CenterSpace_RocketRenderer_unloadCurrentDocument00);
   tolua_function(tolua_S,"loadDocument",tolua_CenterSpace_RocketRenderer_loadDocument00);
   tolua_function(tolua_S,"loadModalDocument",tolua_CenterSpace_RocketRenderer_loadModalDocument00);
   tolua_function(tolua_S,"closeModalDocument",tolua_CenterSpace_RocketRenderer_closeModalDocument00);
   tolua_function(tolua_S,"reloadCurrentDocument",tolua_CenterSpace_RocketRenderer_reloadCurrentDocument00);
   tolua_function(tolua_S,"toggleVisibility",tolua_CenterSpace_RocketRenderer_toggleVisibility00);
   tolua_function(tolua_S,"isVisible",tolua_CenterSpace_RocketRenderer_isVisible00);
   tolua_function(tolua_S,"setActiveState",tolua_CenterSpace_RocketRenderer_setActiveState00);
   tolua_function(tolua_S,"registerLuaScriptElement",tolua_CenterSpace_RocketRenderer_registerLuaScriptElement00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_RocketRenderer_getSingletonPtr00);
   tolua_variable(tolua_S,"__Rocket__Core__EventListener__",tolua_get_RocketRenderer___Rocket__Core__EventListener__,NULL);
   tolua_variable(tolua_S,"__InputListener__Listener__",tolua_get_RocketRenderer___InputListener__Listener__,NULL);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"NO_DATA_SOURCE",NO_DATA_SOURCE);
  tolua_constant(tolua_S,"COULD_NOT_FIND",COULD_NOT_FIND);
  tolua_constant(tolua_S,"RANDOM_MISSIONS",RANDOM_MISSIONS);
  tolua_constant(tolua_S,"STORY_MISSIONS",STORY_MISSIONS);
  tolua_constant(tolua_S,"MCU",MCU);
  tolua_constant(tolua_S,"WEAPON",WEAPON);
  tolua_constant(tolua_S,"PLAYER",PLAYER);
  tolua_constant(tolua_S,"MCUTEMPLATE",MCUTEMPLATE);
  tolua_constant(tolua_S,"WEAPONTEMPLATE",WEAPONTEMPLATE);
  tolua_constant(tolua_S,"COMPONENTTEMPLATE",COMPONENTTEMPLATE);
  tolua_constant(tolua_S,"ENEMY_MCU",ENEMY_MCU);
  tolua_constant(tolua_S,"ENERGY",ENERGY);
  tolua_constant(tolua_S,"BALLISTIC",BALLISTIC);
  tolua_constant(tolua_S,"MISSILE",MISSILE);
  tolua_constant(tolua_S,"NONE",NONE);
  tolua_constant(tolua_S,"ENERGY_ONLY",ENERGY_ONLY);
  tolua_constant(tolua_S,"BALLISTIC_ONLY",BALLISTIC_ONLY);
  tolua_constant(tolua_S,"MISSILE_ONLY",MISSILE_ONLY);
  tolua_constant(tolua_S,"ENERGY_OR_BALLISTIC",ENERGY_OR_BALLISTIC);
  tolua_cclass(tolua_S,"DataSet","DataSet","",NULL);
  tolua_beginmodule(tolua_S,"DataSet");
   tolua_function(tolua_S,"getDataSource",tolua_CenterSpace_DataSet_getDataSource00);
   tolua_function(tolua_S,"updateData",tolua_CenterSpace_DataSet_updateData00);
   tolua_function(tolua_S,"numItems",tolua_CenterSpace_DataSet_numItems00);
   tolua_function(tolua_S,"getValue",tolua_CenterSpace_DataSet_getValue00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"RequiredRankTemplate","RequiredRankTemplate","Template",NULL);
  tolua_beginmodule(tolua_S,"RequiredRankTemplate");
   tolua_function(tolua_S,"getRequiredRank",tolua_CenterSpace_RequiredRankTemplate_getRequiredRank00);
   tolua_function(tolua_S,"setRequiredRank",tolua_CenterSpace_RequiredRankTemplate_setRequiredRank00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HubTemplate","HubTemplate","RequiredRankTemplate",tolua_collect_HubTemplate);
  #else
  tolua_cclass(tolua_S,"HubTemplate","HubTemplate","RequiredRankTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HubTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_HubTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_HubTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_HubTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_HubTemplate_delete00);
   tolua_function(tolua_S,"getSystemName",tolua_CenterSpace_HubTemplate_getSystemName00);
   tolua_function(tolua_S,"setSystemName",tolua_CenterSpace_HubTemplate_setSystemName00);
   tolua_function(tolua_S,"getBaseMissionPay",tolua_CenterSpace_HubTemplate_getBaseMissionPay00);
   tolua_function(tolua_S,"setBaseMissionPay",tolua_CenterSpace_HubTemplate_setBaseMissionPay00);
   tolua_function(tolua_S,"getBounty",tolua_CenterSpace_HubTemplate_getBounty00);
   tolua_function(tolua_S,"setBounty",tolua_CenterSpace_HubTemplate_setBounty00);
   tolua_function(tolua_S,"new",tolua_CenterSpace_HubTemplate_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_HubTemplate_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_HubTemplate_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_HubTemplate_delete01);
   tolua_function(tolua_S,"getSystemName",tolua_CenterSpace_HubTemplate_getSystemName01);
   tolua_function(tolua_S,"setSystemName",tolua_CenterSpace_HubTemplate_setSystemName01);
   tolua_function(tolua_S,"getBaseMissionPay",tolua_CenterSpace_HubTemplate_getBaseMissionPay01);
   tolua_function(tolua_S,"setBaseMissionPay",tolua_CenterSpace_HubTemplate_setBaseMissionPay01);
   tolua_function(tolua_S,"getBounty",tolua_CenterSpace_HubTemplate_getBounty01);
   tolua_function(tolua_S,"setBounty",tolua_CenterSpace_HubTemplate_setBounty01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BattlefieldTemplate","BattlefieldTemplate","Template",tolua_collect_BattlefieldTemplate);
  #else
  tolua_cclass(tolua_S,"BattlefieldTemplate","BattlefieldTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BattlefieldTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_BattlefieldTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_BattlefieldTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_BattlefieldTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BattlefieldTemplate_delete00);
   tolua_function(tolua_S,"getInitialSize",tolua_CenterSpace_BattlefieldTemplate_getInitialSize00);
   tolua_function(tolua_S,"setInitialSize",tolua_CenterSpace_BattlefieldTemplate_setInitialSize00);
   tolua_function(tolua_S,"getMinMCUs",tolua_CenterSpace_BattlefieldTemplate_getMinMCUs00);
   tolua_function(tolua_S,"setMinMCUs",tolua_CenterSpace_BattlefieldTemplate_setMinMCUs00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TerrainTextureTemplate","TerrainTextureTemplate","Template",tolua_collect_TerrainTextureTemplate);
  #else
  tolua_cclass(tolua_S,"TerrainTextureTemplate","TerrainTextureTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TerrainTextureTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_TerrainTextureTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_TerrainTextureTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_TerrainTextureTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TerrainTextureTemplate_delete00);
   tolua_function(tolua_S,"getRoughness",tolua_CenterSpace_TerrainTextureTemplate_getRoughness00);
   tolua_function(tolua_S,"setRoughness",tolua_CenterSpace_TerrainTextureTemplate_setRoughness00);
   tolua_function(tolua_S,"getTextureName",tolua_CenterSpace_TerrainTextureTemplate_getTextureName00);
   tolua_function(tolua_S,"setTextureName",tolua_CenterSpace_TerrainTextureTemplate_setTextureName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TerrainTemplate","TerrainTemplate","Template",tolua_collect_TerrainTemplate);
  #else
  tolua_cclass(tolua_S,"TerrainTemplate","TerrainTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TerrainTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_TerrainTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_TerrainTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_TerrainTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TerrainTemplate_delete00);
   tolua_function(tolua_S,"getMinHeight",tolua_CenterSpace_TerrainTemplate_getMinHeight00);
   tolua_function(tolua_S,"setMinHeight",tolua_CenterSpace_TerrainTemplate_setMinHeight00);
   tolua_function(tolua_S,"getMaxHeight",tolua_CenterSpace_TerrainTemplate_getMaxHeight00);
   tolua_function(tolua_S,"setMaxHeight",tolua_CenterSpace_TerrainTemplate_setMaxHeight00);
   tolua_function(tolua_S,"getGravity",tolua_CenterSpace_TerrainTemplate_getGravity00);
   tolua_function(tolua_S,"setGravity",tolua_CenterSpace_TerrainTemplate_setGravity00);
   tolua_function(tolua_S,"getTerrainTextureTemplate",tolua_CenterSpace_TerrainTemplate_getTerrainTextureTemplate00);
   tolua_function(tolua_S,"setTerrainTextureTemplate",tolua_CenterSpace_TerrainTemplate_setTerrainTextureTemplate00);
   tolua_function(tolua_S,"getHubTemplate",tolua_CenterSpace_TerrainTemplate_getHubTemplate00);
   tolua_function(tolua_S,"setHubTemplate",tolua_CenterSpace_TerrainTemplate_setHubTemplate00);
   tolua_function(tolua_S,"getMaterialName",tolua_CenterSpace_TerrainTemplate_getMaterialName00);
   tolua_function(tolua_S,"setMaterialName",tolua_CenterSpace_TerrainTemplate_setMaterialName00);
   tolua_function(tolua_S,"getDescription",tolua_CenterSpace_TerrainTemplate_getDescription00);
   tolua_function(tolua_S,"setDescription",tolua_CenterSpace_TerrainTemplate_setDescription00);
   tolua_function(tolua_S,"getLuaScriptFile",tolua_CenterSpace_TerrainTemplate_getLuaScriptFile00);
   tolua_function(tolua_S,"setLuaScriptFile",tolua_CenterSpace_TerrainTemplate_setLuaScriptFile00);
   tolua_function(tolua_S,"getLuaEntryPoint",tolua_CenterSpace_TerrainTemplate_getLuaEntryPoint00);
   tolua_function(tolua_S,"setLuaEntryPoint",tolua_CenterSpace_TerrainTemplate_setLuaEntryPoint00);
   tolua_function(tolua_S,"getLuaParam1",tolua_CenterSpace_TerrainTemplate_getLuaParam100);
   tolua_function(tolua_S,"setLuaParam1",tolua_CenterSpace_TerrainTemplate_setLuaParam100);
   tolua_function(tolua_S,"getLuaParam2",tolua_CenterSpace_TerrainTemplate_getLuaParam200);
   tolua_function(tolua_S,"setLuaParam2",tolua_CenterSpace_TerrainTemplate_setLuaParam200);
   tolua_function(tolua_S,"getLuaParam3",tolua_CenterSpace_TerrainTemplate_getLuaParam300);
   tolua_function(tolua_S,"setLuaParam3",tolua_CenterSpace_TerrainTemplate_setLuaParam300);
   tolua_function(tolua_S,"getLuaParam4",tolua_CenterSpace_TerrainTemplate_getLuaParam400);
   tolua_function(tolua_S,"setLuaParam4",tolua_CenterSpace_TerrainTemplate_setLuaParam400);
   tolua_function(tolua_S,"getAmbientLight",tolua_CenterSpace_TerrainTemplate_getAmbientLight00);
   tolua_function(tolua_S,"setAmbientLight",tolua_CenterSpace_TerrainTemplate_setAmbientLight00);
   tolua_function(tolua_S,"getDirectionalLight",tolua_CenterSpace_TerrainTemplate_getDirectionalLight00);
   tolua_function(tolua_S,"setDirectionalLight",tolua_CenterSpace_TerrainTemplate_setDirectionalLight00);
   tolua_function(tolua_S,"getDirectionalLightDirection",tolua_CenterSpace_TerrainTemplate_getDirectionalLightDirection00);
   tolua_function(tolua_S,"setDirectionalLightDirection",tolua_CenterSpace_TerrainTemplate_setDirectionalLightDirection00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FactionTemplate","FactionTemplate","Template",tolua_collect_FactionTemplate);
  #else
  tolua_cclass(tolua_S,"FactionTemplate","FactionTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FactionTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_FactionTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_FactionTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_FactionTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_FactionTemplate_delete00);
   tolua_function(tolua_S,"getDescription",tolua_CenterSpace_FactionTemplate_getDescription00);
   tolua_function(tolua_S,"setDescription",tolua_CenterSpace_FactionTemplate_setDescription00);
   tolua_function(tolua_S,"isGenericFaction",tolua_CenterSpace_FactionTemplate_isGenericFaction00);
   tolua_function(tolua_S,"setIsGenericFaction",tolua_CenterSpace_FactionTemplate_setIsGenericFaction00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RankTemplate","RankTemplate","Template",tolua_collect_RankTemplate);
  #else
  tolua_cclass(tolua_S,"RankTemplate","RankTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RankTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_RankTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RankTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RankTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_RankTemplate_delete00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_RankTemplate_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_RankTemplate_setFactionTemplate00);
   tolua_function(tolua_S,"getRequiredExperience",tolua_CenterSpace_RankTemplate_getRequiredExperience00);
   tolua_function(tolua_S,"setRequiredExperience",tolua_CenterSpace_RankTemplate_setRequiredExperience00);
   tolua_function(tolua_S,"getRank",tolua_CenterSpace_RankTemplate_getRank00);
   tolua_function(tolua_S,"setRank",tolua_CenterSpace_RankTemplate_setRank00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FactionHubTemplate","FactionHubTemplate","Template",tolua_collect_FactionHubTemplate);
  #else
  tolua_cclass(tolua_S,"FactionHubTemplate","FactionHubTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FactionHubTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_FactionHubTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_FactionHubTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_FactionHubTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_FactionHubTemplate_delete00);
   tolua_function(tolua_S,"getPlayerFactionTemplate",tolua_CenterSpace_FactionHubTemplate_getPlayerFactionTemplate00);
   tolua_function(tolua_S,"setPlayerFactionTemplate",tolua_CenterSpace_FactionHubTemplate_setPlayerFactionTemplate00);
   tolua_function(tolua_S,"getEnemy1FactionTemplate",tolua_CenterSpace_FactionHubTemplate_getEnemy1FactionTemplate00);
   tolua_function(tolua_S,"setEnemy1FactionTemplate",tolua_CenterSpace_FactionHubTemplate_setEnemy1FactionTemplate00);
   tolua_function(tolua_S,"getEnemy2FactionTemplate",tolua_CenterSpace_FactionHubTemplate_getEnemy2FactionTemplate00);
   tolua_function(tolua_S,"setEnemy2FactionTemplate",tolua_CenterSpace_FactionHubTemplate_setEnemy2FactionTemplate00);
   tolua_function(tolua_S,"getHubTemplate",tolua_CenterSpace_FactionHubTemplate_getHubTemplate00);
   tolua_function(tolua_S,"setHubTemplate",tolua_CenterSpace_FactionHubTemplate_setHubTemplate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MCUComponentTemplate","MCUComponentTemplate","Template",tolua_collect_MCUComponentTemplate);
  #else
  tolua_cclass(tolua_S,"MCUComponentTemplate","MCUComponentTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MCUComponentTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUComponentTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUComponentTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUComponentTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MCUComponentTemplate_delete00);
   tolua_function(tolua_S,"getDescription",tolua_CenterSpace_MCUComponentTemplate_getDescription00);
   tolua_function(tolua_S,"setDescription",tolua_CenterSpace_MCUComponentTemplate_setDescription00);
   tolua_function(tolua_S,"getCost",tolua_CenterSpace_MCUComponentTemplate_getCost00);
   tolua_function(tolua_S,"setCost",tolua_CenterSpace_MCUComponentTemplate_setCost00);
   tolua_function(tolua_S,"getWeight",tolua_CenterSpace_MCUComponentTemplate_getWeight00);
   tolua_function(tolua_S,"setWeight",tolua_CenterSpace_MCUComponentTemplate_setWeight00);
   tolua_function(tolua_S,"getMaxHealth",tolua_CenterSpace_MCUComponentTemplate_getMaxHealth00);
   tolua_function(tolua_S,"setMaxHealth",tolua_CenterSpace_MCUComponentTemplate_setMaxHealth00);
   tolua_function(tolua_S,"getRequiredRank",tolua_CenterSpace_MCUComponentTemplate_getRequiredRank00);
   tolua_function(tolua_S,"setRequiredRank",tolua_CenterSpace_MCUComponentTemplate_setRequiredRank00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_MCUComponentTemplate_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_MCUComponentTemplate_setFactionTemplate00);
   tolua_function(tolua_S,"getSize",tolua_CenterSpace_MCUComponentTemplate_getSize00);
   tolua_function(tolua_S,"setSize",tolua_CenterSpace_MCUComponentTemplate_setSize00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_MCUComponentTemplate_getGuiValues00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ArmorTemplate","ArmorTemplate","MCUComponentTemplate",tolua_collect_ArmorTemplate);
  #else
  tolua_cclass(tolua_S,"ArmorTemplate","ArmorTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ArmorTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_ArmorTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_ArmorTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_ArmorTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ArmorTemplate_delete00);
   tolua_function(tolua_S,"getLaserDamageTaken",tolua_CenterSpace_ArmorTemplate_getLaserDamageTaken00);
   tolua_function(tolua_S,"setLaserDamageTaken",tolua_CenterSpace_ArmorTemplate_setLaserDamageTaken00);
   tolua_function(tolua_S,"getPlasmaDamageTaken",tolua_CenterSpace_ArmorTemplate_getPlasmaDamageTaken00);
   tolua_function(tolua_S,"setPlasmaDamageTaken",tolua_CenterSpace_ArmorTemplate_setPlasmaDamageTaken00);
   tolua_function(tolua_S,"getCannonDamageTaken",tolua_CenterSpace_ArmorTemplate_getCannonDamageTaken00);
   tolua_function(tolua_S,"setCannonDamageTaken",tolua_CenterSpace_ArmorTemplate_setCannonDamageTaken00);
   tolua_function(tolua_S,"getMissileDamageTaken",tolua_CenterSpace_ArmorTemplate_getMissileDamageTaken00);
   tolua_function(tolua_S,"setMissileDamageTaken",tolua_CenterSpace_ArmorTemplate_setMissileDamageTaken00);
   tolua_function(tolua_S,"getPiercingDamageTaken",tolua_CenterSpace_ArmorTemplate_getPiercingDamageTaken00);
   tolua_function(tolua_S,"setPiercingDamageTaken",tolua_CenterSpace_ArmorTemplate_setPiercingDamageTaken00);
   tolua_function(tolua_S,"getFinalDamageValue",tolua_CenterSpace_ArmorTemplate_getFinalDamageValue00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BatteryTemplate","BatteryTemplate","MCUComponentTemplate",tolua_collect_BatteryTemplate);
  #else
  tolua_cclass(tolua_S,"BatteryTemplate","BatteryTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BatteryTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_BatteryTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_BatteryTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_BatteryTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BatteryTemplate_delete00);
   tolua_function(tolua_S,"getMaxEnergy",tolua_CenterSpace_BatteryTemplate_getMaxEnergy00);
   tolua_function(tolua_S,"setMaxEnergy",tolua_CenterSpace_BatteryTemplate_setMaxEnergy00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"DriveTemplate","DriveTemplate","MCUComponentTemplate",tolua_collect_DriveTemplate);
  #else
  tolua_cclass(tolua_S,"DriveTemplate","DriveTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"DriveTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_DriveTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_DriveTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_DriveTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_DriveTemplate_delete00);
   tolua_function(tolua_S,"getEfficiency",tolua_CenterSpace_DriveTemplate_getEfficiency00);
   tolua_function(tolua_S,"setEfficiency",tolua_CenterSpace_DriveTemplate_setEfficiency00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ReactorTemplate","ReactorTemplate","MCUComponentTemplate",tolua_collect_ReactorTemplate);
  #else
  tolua_cclass(tolua_S,"ReactorTemplate","ReactorTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ReactorTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_ReactorTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_ReactorTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_ReactorTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ReactorTemplate_delete00);
   tolua_function(tolua_S,"getMaxEnergy",tolua_CenterSpace_ReactorTemplate_getMaxEnergy00);
   tolua_function(tolua_S,"setMaxEnergy",tolua_CenterSpace_ReactorTemplate_setMaxEnergy00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SensorSystemTemplate","SensorSystemTemplate","MCUComponentTemplate",tolua_collect_SensorSystemTemplate);
  #else
  tolua_cclass(tolua_S,"SensorSystemTemplate","SensorSystemTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SensorSystemTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_SensorSystemTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_SensorSystemTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_SensorSystemTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_SensorSystemTemplate_delete00);
   tolua_function(tolua_S,"getSightRange",tolua_CenterSpace_SensorSystemTemplate_getSightRange00);
   tolua_function(tolua_S,"setSightRange",tolua_CenterSpace_SensorSystemTemplate_setSightRange00);
   tolua_function(tolua_S,"getRadarRange",tolua_CenterSpace_SensorSystemTemplate_getRadarRange00);
   tolua_function(tolua_S,"setRadarRange",tolua_CenterSpace_SensorSystemTemplate_setRadarRange00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ShieldTemplate","ShieldTemplate","MCUComponentTemplate",tolua_collect_ShieldTemplate);
  #else
  tolua_cclass(tolua_S,"ShieldTemplate","ShieldTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ShieldTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_ShieldTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_ShieldTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_ShieldTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ShieldTemplate_delete00);
   tolua_function(tolua_S,"getMaxShieldHealth",tolua_CenterSpace_ShieldTemplate_getMaxShieldHealth00);
   tolua_function(tolua_S,"setMaxShieldHealth",tolua_CenterSpace_ShieldTemplate_setMaxShieldHealth00);
   tolua_function(tolua_S,"getEnergyDrainPerTurn",tolua_CenterSpace_ShieldTemplate_getEnergyDrainPerTurn00);
   tolua_function(tolua_S,"setEnergyDrainPerTurn",tolua_CenterSpace_ShieldTemplate_setEnergyDrainPerTurn00);
   tolua_function(tolua_S,"getRegenRate",tolua_CenterSpace_ShieldTemplate_getRegenRate00);
   tolua_function(tolua_S,"setRegenRate",tolua_CenterSpace_ShieldTemplate_setRegenRate00);
   tolua_function(tolua_S,"getMaterialName",tolua_CenterSpace_ShieldTemplate_getMaterialName00);
   tolua_function(tolua_S,"setMaterialName",tolua_CenterSpace_ShieldTemplate_setMaterialName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TargetingSystemTemplate","TargetingSystemTemplate","MCUComponentTemplate",tolua_collect_TargetingSystemTemplate);
  #else
  tolua_cclass(tolua_S,"TargetingSystemTemplate","TargetingSystemTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TargetingSystemTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_TargetingSystemTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_TargetingSystemTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_TargetingSystemTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TargetingSystemTemplate_delete00);
   tolua_function(tolua_S,"getBaseAccuracy",tolua_CenterSpace_TargetingSystemTemplate_getBaseAccuracy00);
   tolua_function(tolua_S,"setBaseAccuracy",tolua_CenterSpace_TargetingSystemTemplate_setBaseAccuracy00);
   tolua_function(tolua_S,"getObstructedBonus",tolua_CenterSpace_TargetingSystemTemplate_getObstructedBonus00);
   tolua_function(tolua_S,"setObstructedBonus",tolua_CenterSpace_TargetingSystemTemplate_setObstructedBonus00);
   tolua_function(tolua_S,"getLongRangeBonus",tolua_CenterSpace_TargetingSystemTemplate_getLongRangeBonus00);
   tolua_function(tolua_S,"setLongRangeBonus",tolua_CenterSpace_TargetingSystemTemplate_setLongRangeBonus00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RandomMissionTypeTemplate","RandomMissionTypeTemplate","Template",tolua_collect_RandomMissionTypeTemplate);
  #else
  tolua_cclass(tolua_S,"RandomMissionTypeTemplate","RandomMissionTypeTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RandomMissionTypeTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_RandomMissionTypeTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RandomMissionTypeTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RandomMissionTypeTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_RandomMissionTypeTemplate_delete00);
   tolua_function(tolua_S,"getPlacementScriptFilename",tolua_CenterSpace_RandomMissionTypeTemplate_getPlacementScriptFilename00);
   tolua_function(tolua_S,"setPlacementScriptFilename",tolua_CenterSpace_RandomMissionTypeTemplate_setPlacementScriptFilename00);
   tolua_function(tolua_S,"getPlayerPlacementEntryPoint",tolua_CenterSpace_RandomMissionTypeTemplate_getPlayerPlacementEntryPoint00);
   tolua_function(tolua_S,"setPlayerPlacementEntryPoint",tolua_CenterSpace_RandomMissionTypeTemplate_setPlayerPlacementEntryPoint00);
   tolua_function(tolua_S,"getEnemyPlacementEntryPoint",tolua_CenterSpace_RandomMissionTypeTemplate_getEnemyPlacementEntryPoint00);
   tolua_function(tolua_S,"setEnemyPlacementEntryPoint",tolua_CenterSpace_RandomMissionTypeTemplate_setEnemyPlacementEntryPoint00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"StoryMissionTemplate","StoryMissionTemplate","Template",tolua_collect_StoryMissionTemplate);
  #else
  tolua_cclass(tolua_S,"StoryMissionTemplate","StoryMissionTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"StoryMissionTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_StoryMissionTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_StoryMissionTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_StoryMissionTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_StoryMissionTemplate_delete00);
   tolua_function(tolua_S,"getTerrainTemplate",tolua_CenterSpace_StoryMissionTemplate_getTerrainTemplate00);
   tolua_function(tolua_S,"setTerrainTemplate",tolua_CenterSpace_StoryMissionTemplate_setTerrainTemplate00);
   tolua_function(tolua_S,"getFactionHubTemplate",tolua_CenterSpace_StoryMissionTemplate_getFactionHubTemplate00);
   tolua_function(tolua_S,"setFactionHubTemplate",tolua_CenterSpace_StoryMissionTemplate_setFactionHubTemplate00);
   tolua_function(tolua_S,"getSideLength",tolua_CenterSpace_StoryMissionTemplate_getSideLength00);
   tolua_function(tolua_S,"setSideLength",tolua_CenterSpace_StoryMissionTemplate_setSideLength00);
   tolua_function(tolua_S,"getRequiredRank",tolua_CenterSpace_StoryMissionTemplate_getRequiredRank00);
   tolua_function(tolua_S,"setRequiredRank",tolua_CenterSpace_StoryMissionTemplate_setRequiredRank00);
   tolua_function(tolua_S,"getMissionScriptFilename",tolua_CenterSpace_StoryMissionTemplate_getMissionScriptFilename00);
   tolua_function(tolua_S,"setMissionScriptFilename",tolua_CenterSpace_StoryMissionTemplate_setMissionScriptFilename00);
   tolua_function(tolua_S,"getTerrainGenerationFilename",tolua_CenterSpace_StoryMissionTemplate_getTerrainGenerationFilename00);
   tolua_function(tolua_S,"setTerrainGenerationFilename",tolua_CenterSpace_StoryMissionTemplate_setTerrainGenerationFilename00);
   tolua_function(tolua_S,"getTerrainGenerationEntryPoint",tolua_CenterSpace_StoryMissionTemplate_getTerrainGenerationEntryPoint00);
   tolua_function(tolua_S,"setTerrainGenerationEntryPoint",tolua_CenterSpace_StoryMissionTemplate_setTerrainGenerationEntryPoint00);
   tolua_function(tolua_S,"getEnemyGenerationFilename",tolua_CenterSpace_StoryMissionTemplate_getEnemyGenerationFilename00);
   tolua_function(tolua_S,"setEnemyGenerationFilename",tolua_CenterSpace_StoryMissionTemplate_setEnemyGenerationFilename00);
   tolua_function(tolua_S,"getEnemyGenerationEntryPoint",tolua_CenterSpace_StoryMissionTemplate_getEnemyGenerationEntryPoint00);
   tolua_function(tolua_S,"setEnemyGenerationEntryPoint",tolua_CenterSpace_StoryMissionTemplate_setEnemyGenerationEntryPoint00);
   tolua_function(tolua_S,"getPlacementFilename",tolua_CenterSpace_StoryMissionTemplate_getPlacementFilename00);
   tolua_function(tolua_S,"setPlacementFilename",tolua_CenterSpace_StoryMissionTemplate_setPlacementFilename00);
   tolua_function(tolua_S,"getPlayerPlacementEntryPoint",tolua_CenterSpace_StoryMissionTemplate_getPlayerPlacementEntryPoint00);
   tolua_function(tolua_S,"setPlayerPlacementEntryPoint",tolua_CenterSpace_StoryMissionTemplate_setPlayerPlacementEntryPoint00);
   tolua_function(tolua_S,"getEnemyPlacementEntryPoint",tolua_CenterSpace_StoryMissionTemplate_getEnemyPlacementEntryPoint00);
   tolua_function(tolua_S,"setEnemyPlacementEntryPoint",tolua_CenterSpace_StoryMissionTemplate_setEnemyPlacementEntryPoint00);
   tolua_function(tolua_S,"getPlayerLocationX",tolua_CenterSpace_StoryMissionTemplate_getPlayerLocationX00);
   tolua_function(tolua_S,"setPlayerLocationX",tolua_CenterSpace_StoryMissionTemplate_setPlayerLocationX00);
   tolua_function(tolua_S,"getPlayerLocationZ",tolua_CenterSpace_StoryMissionTemplate_getPlayerLocationZ00);
   tolua_function(tolua_S,"setPlayerLocationZ",tolua_CenterSpace_StoryMissionTemplate_setPlayerLocationZ00);
   tolua_function(tolua_S,"getEnemy1LocationX",tolua_CenterSpace_StoryMissionTemplate_getEnemy1LocationX00);
   tolua_function(tolua_S,"setEnemy1LocationX",tolua_CenterSpace_StoryMissionTemplate_setEnemy1LocationX00);
   tolua_function(tolua_S,"getEnemy1LocationZ",tolua_CenterSpace_StoryMissionTemplate_getEnemy1LocationZ00);
   tolua_function(tolua_S,"setEnemy1LocationZ",tolua_CenterSpace_StoryMissionTemplate_setEnemy1LocationZ00);
   tolua_function(tolua_S,"getEnemy2LocationX",tolua_CenterSpace_StoryMissionTemplate_getEnemy2LocationX00);
   tolua_function(tolua_S,"setEnemy2LocationX",tolua_CenterSpace_StoryMissionTemplate_setEnemy2LocationX00);
   tolua_function(tolua_S,"getEnemy2LocationZ",tolua_CenterSpace_StoryMissionTemplate_getEnemy2LocationZ00);
   tolua_function(tolua_S,"setEnemy2LocationZ",tolua_CenterSpace_StoryMissionTemplate_setEnemy2LocationZ00);
   tolua_function(tolua_S,"getLuaParam1",tolua_CenterSpace_StoryMissionTemplate_getLuaParam100);
   tolua_function(tolua_S,"setLuaParam1",tolua_CenterSpace_StoryMissionTemplate_setLuaParam100);
   tolua_function(tolua_S,"getLuaParam2",tolua_CenterSpace_StoryMissionTemplate_getLuaParam200);
   tolua_function(tolua_S,"setLuaParam2",tolua_CenterSpace_StoryMissionTemplate_setLuaParam200);
   tolua_function(tolua_S,"getLuaParam3",tolua_CenterSpace_StoryMissionTemplate_getLuaParam300);
   tolua_function(tolua_S,"setLuaParam3",tolua_CenterSpace_StoryMissionTemplate_setLuaParam300);
   tolua_function(tolua_S,"getLuaParam4",tolua_CenterSpace_StoryMissionTemplate_getLuaParam400);
   tolua_function(tolua_S,"setLuaParam4",tolua_CenterSpace_StoryMissionTemplate_setLuaParam400);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"LASER_INSTANT",LASER_INSTANT);
  tolua_constant(tolua_S,"LASER_STRAIGHT",LASER_STRAIGHT);
  tolua_constant(tolua_S,"BALLISTIC_STRAIGHT",BALLISTIC_STRAIGHT);
  tolua_constant(tolua_S,"BALLISTIC_INDIRECT",BALLISTIC_INDIRECT);
  tolua_constant(tolua_S,"MISSILE_STRAIGHT",MISSILE_STRAIGHT);
  tolua_constant(tolua_S,"MISSILE_INDIRECT",MISSILE_INDIRECT);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ProjectileTemplate","ProjectileTemplate","Template",tolua_collect_ProjectileTemplate);
  #else
  tolua_cclass(tolua_S,"ProjectileTemplate","ProjectileTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ProjectileTemplate");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ProjectileTemplate_delete00);
   tolua_function(tolua_S,"getExplosionName",tolua_CenterSpace_ProjectileTemplate_getExplosionName00);
   tolua_function(tolua_S,"setExplosionName",tolua_CenterSpace_ProjectileTemplate_setExplosionName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BeamProjectileTemplate","BeamProjectileTemplate","ProjectileTemplate",tolua_collect_BeamProjectileTemplate);
  #else
  tolua_cclass(tolua_S,"BeamProjectileTemplate","BeamProjectileTemplate","ProjectileTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BeamProjectileTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_BeamProjectileTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_BeamProjectileTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_BeamProjectileTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BeamProjectileTemplate_delete00);
   tolua_function(tolua_S,"getDuration",tolua_CenterSpace_BeamProjectileTemplate_getDuration00);
   tolua_function(tolua_S,"setDuration",tolua_CenterSpace_BeamProjectileTemplate_setDuration00);
   tolua_function(tolua_S,"getMaterialName",tolua_CenterSpace_BeamProjectileTemplate_getMaterialName00);
   tolua_function(tolua_S,"setMaterialName",tolua_CenterSpace_BeamProjectileTemplate_setMaterialName00);
   tolua_function(tolua_S,"getBeamWidth",tolua_CenterSpace_BeamProjectileTemplate_getBeamWidth00);
   tolua_function(tolua_S,"setBeamWidth",tolua_CenterSpace_BeamProjectileTemplate_setBeamWidth00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PhysicalProjectileTemplate","PhysicalProjectileTemplate","ProjectileTemplate",tolua_collect_PhysicalProjectileTemplate);
  #else
  tolua_cclass(tolua_S,"PhysicalProjectileTemplate","PhysicalProjectileTemplate","ProjectileTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PhysicalProjectileTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_PhysicalProjectileTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PhysicalProjectileTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PhysicalProjectileTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PhysicalProjectileTemplate_delete00);
   tolua_function(tolua_S,"getMeshName",tolua_CenterSpace_PhysicalProjectileTemplate_getMeshName00);
   tolua_function(tolua_S,"setMeshName",tolua_CenterSpace_PhysicalProjectileTemplate_setMeshName00);
   tolua_function(tolua_S,"getMaterialName",tolua_CenterSpace_PhysicalProjectileTemplate_getMaterialName00);
   tolua_function(tolua_S,"setMaterialName",tolua_CenterSpace_PhysicalProjectileTemplate_setMaterialName00);
   tolua_function(tolua_S,"getMovementSpeed",tolua_CenterSpace_PhysicalProjectileTemplate_getMovementSpeed00);
   tolua_function(tolua_S,"setMovementSpeed",tolua_CenterSpace_PhysicalProjectileTemplate_setMovementSpeed00);
   tolua_function(tolua_S,"getWeight",tolua_CenterSpace_PhysicalProjectileTemplate_getWeight00);
   tolua_function(tolua_S,"setWeight",tolua_CenterSpace_PhysicalProjectileTemplate_setWeight00);
   tolua_function(tolua_S,"isSelfPropelled",tolua_CenterSpace_PhysicalProjectileTemplate_isSelfPropelled00);
   tolua_function(tolua_S,"setSelfPropelled",tolua_CenterSpace_PhysicalProjectileTemplate_setSelfPropelled00);
   tolua_function(tolua_S,"isArching",tolua_CenterSpace_PhysicalProjectileTemplate_isArching00);
   tolua_function(tolua_S,"setArching",tolua_CenterSpace_PhysicalProjectileTemplate_setArching00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"DT_LASER",DT_LASER);
  tolua_constant(tolua_S,"DT_PLASMA",DT_PLASMA);
  tolua_constant(tolua_S,"DT_CANNON",DT_CANNON);
  tolua_constant(tolua_S,"DT_MISSILE",DT_MISSILE);
  tolua_constant(tolua_S,"DT_PIERCING",DT_PIERCING);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"WeaponTemplate","WeaponTemplate","MCUComponentTemplate",tolua_collect_WeaponTemplate);
  #else
  tolua_cclass(tolua_S,"WeaponTemplate","WeaponTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"WeaponTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_WeaponTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_WeaponTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_WeaponTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_WeaponTemplate_delete00);
   tolua_function(tolua_S,"getWeaponType",tolua_CenterSpace_WeaponTemplate_getWeaponType00);
   tolua_function(tolua_S,"setWeaponType",tolua_CenterSpace_WeaponTemplate_setWeaponType00);
   tolua_function(tolua_S,"setWeaponType",tolua_CenterSpace_WeaponTemplate_setWeaponType01);
   tolua_function(tolua_S,"getShieldDamage",tolua_CenterSpace_WeaponTemplate_getShieldDamage00);
   tolua_function(tolua_S,"setShieldDamage",tolua_CenterSpace_WeaponTemplate_setShieldDamage00);
   tolua_function(tolua_S,"getArmorDamage",tolua_CenterSpace_WeaponTemplate_getArmorDamage00);
   tolua_function(tolua_S,"setArmorDamage",tolua_CenterSpace_WeaponTemplate_setArmorDamage00);
   tolua_function(tolua_S,"getPiercingDamage",tolua_CenterSpace_WeaponTemplate_getPiercingDamage00);
   tolua_function(tolua_S,"setPiercingDamage",tolua_CenterSpace_WeaponTemplate_setPiercingDamage00);
   tolua_function(tolua_S,"getRange",tolua_CenterSpace_WeaponTemplate_getRange00);
   tolua_function(tolua_S,"setRange",tolua_CenterSpace_WeaponTemplate_setRange00);
   tolua_function(tolua_S,"getRoundsPerTurn",tolua_CenterSpace_WeaponTemplate_getRoundsPerTurn00);
   tolua_function(tolua_S,"setRoundsPerTurn",tolua_CenterSpace_WeaponTemplate_setRoundsPerTurn00);
   tolua_function(tolua_S,"getMaxAmmo",tolua_CenterSpace_WeaponTemplate_getMaxAmmo00);
   tolua_function(tolua_S,"setMaxAmmo",tolua_CenterSpace_WeaponTemplate_setMaxAmmo00);
   tolua_function(tolua_S,"getEnergyDrain",tolua_CenterSpace_WeaponTemplate_getEnergyDrain00);
   tolua_function(tolua_S,"setEnergyDrain",tolua_CenterSpace_WeaponTemplate_setEnergyDrain00);
   tolua_function(tolua_S,"canFit",tolua_CenterSpace_WeaponTemplate_canFit00);
   tolua_function(tolua_S,"isIndirectFireCapable",tolua_CenterSpace_WeaponTemplate_isIndirectFireCapable00);
   tolua_function(tolua_S,"setIndirectFireCapable",tolua_CenterSpace_WeaponTemplate_setIndirectFireCapable00);
   tolua_function(tolua_S,"getProjectileTemplate",tolua_CenterSpace_WeaponTemplate_getProjectileTemplate00);
   tolua_function(tolua_S,"setProjectileTemplate",tolua_CenterSpace_WeaponTemplate_setProjectileTemplate00);
   tolua_function(tolua_S,"getDamageType",tolua_CenterSpace_WeaponTemplate_getDamageType00);
   tolua_function(tolua_S,"setDamageType",tolua_CenterSpace_WeaponTemplate_setDamageType00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_WeaponTemplate_getGuiValues00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"WeaponHardpointTemplate","WeaponHardpointTemplate","Template",tolua_collect_WeaponHardpointTemplate);
  #else
  tolua_cclass(tolua_S,"WeaponHardpointTemplate","WeaponHardpointTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"WeaponHardpointTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_WeaponHardpointTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_WeaponHardpointTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_WeaponHardpointTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_WeaponHardpointTemplate_delete00);
   tolua_function(tolua_S,"getHardpointType",tolua_CenterSpace_WeaponHardpointTemplate_getHardpointType00);
   tolua_function(tolua_S,"setHardpointType",tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType00);
   tolua_function(tolua_S,"setHardpointType",tolua_CenterSpace_WeaponHardpointTemplate_setHardpointType01);
   tolua_function(tolua_S,"getMaxWeaponSize",tolua_CenterSpace_WeaponHardpointTemplate_getMaxWeaponSize00);
   tolua_function(tolua_S,"setMaxWeaponSize",tolua_CenterSpace_WeaponHardpointTemplate_setMaxWeaponSize00);
   tolua_function(tolua_S,"getDefaultWeapon",tolua_CenterSpace_WeaponHardpointTemplate_getDefaultWeapon00);
   tolua_function(tolua_S,"setDefaultWeapon",tolua_CenterSpace_WeaponHardpointTemplate_setDefaultWeapon00);
   tolua_function(tolua_S,"getHardpointNumber",tolua_CenterSpace_WeaponHardpointTemplate_getHardpointNumber00);
   tolua_function(tolua_S,"setHardpointNumber",tolua_CenterSpace_WeaponHardpointTemplate_setHardpointNumber00);
   tolua_function(tolua_S,"getBarrelOffset",tolua_CenterSpace_WeaponHardpointTemplate_getBarrelOffset00);
   tolua_function(tolua_S,"setBarrelOffset",tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset00);
   tolua_function(tolua_S,"setBarrelOffset",tolua_CenterSpace_WeaponHardpointTemplate_setBarrelOffset01);
   tolua_function(tolua_S,"getFiringBoneName",tolua_CenterSpace_WeaponHardpointTemplate_getFiringBoneName00);
   tolua_function(tolua_S,"setFiringBoneName",tolua_CenterSpace_WeaponHardpointTemplate_setFiringBoneName00);
   tolua_function(tolua_S,"instantiate",tolua_CenterSpace_WeaponHardpointTemplate_instantiate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MCUTemplate","MCUTemplate","MCUComponentTemplate",tolua_collect_MCUTemplate);
  #else
  tolua_cclass(tolua_S,"MCUTemplate","MCUTemplate","MCUComponentTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MCUTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MCUTemplate_delete00);
   tolua_function(tolua_S,"getDefaultArmor",tolua_CenterSpace_MCUTemplate_getDefaultArmor00);
   tolua_function(tolua_S,"setDefaultArmor",tolua_CenterSpace_MCUTemplate_setDefaultArmor00);
   tolua_function(tolua_S,"getDefaultBattery",tolua_CenterSpace_MCUTemplate_getDefaultBattery00);
   tolua_function(tolua_S,"setDefaultBattery",tolua_CenterSpace_MCUTemplate_setDefaultBattery00);
   tolua_function(tolua_S,"getDefaultDrive",tolua_CenterSpace_MCUTemplate_getDefaultDrive00);
   tolua_function(tolua_S,"setDefaultDrive",tolua_CenterSpace_MCUTemplate_setDefaultDrive00);
   tolua_function(tolua_S,"getDefaultReactor",tolua_CenterSpace_MCUTemplate_getDefaultReactor00);
   tolua_function(tolua_S,"setDefaultReactor",tolua_CenterSpace_MCUTemplate_setDefaultReactor00);
   tolua_function(tolua_S,"getDefaultSensorSystem",tolua_CenterSpace_MCUTemplate_getDefaultSensorSystem00);
   tolua_function(tolua_S,"setDefaultSensorSystem",tolua_CenterSpace_MCUTemplate_setDefaultSensorSystem00);
   tolua_function(tolua_S,"getDefaultShield",tolua_CenterSpace_MCUTemplate_getDefaultShield00);
   tolua_function(tolua_S,"setDefaultShield",tolua_CenterSpace_MCUTemplate_setDefaultShield00);
   tolua_function(tolua_S,"getDefaultTargetingSystemTemplate",tolua_CenterSpace_MCUTemplate_getDefaultTargetingSystemTemplate00);
   tolua_function(tolua_S,"setDefaultTargetingSystemTemplate",tolua_CenterSpace_MCUTemplate_setDefaultTargetingSystemTemplate00);
   tolua_function(tolua_S,"getHardpoint",tolua_CenterSpace_MCUTemplate_getHardpoint00);
   tolua_function(tolua_S,"addWeaponHardpointTemplate",tolua_CenterSpace_MCUTemplate_addWeaponHardpointTemplate00);
   tolua_function(tolua_S,"getMaxArmorSize",tolua_CenterSpace_MCUTemplate_getMaxArmorSize00);
   tolua_function(tolua_S,"setMaxArmorSize",tolua_CenterSpace_MCUTemplate_setMaxArmorSize00);
   tolua_function(tolua_S,"getMaxBatterySize",tolua_CenterSpace_MCUTemplate_getMaxBatterySize00);
   tolua_function(tolua_S,"setMaxBatterySize",tolua_CenterSpace_MCUTemplate_setMaxBatterySize00);
   tolua_function(tolua_S,"getMaxDriveSize",tolua_CenterSpace_MCUTemplate_getMaxDriveSize00);
   tolua_function(tolua_S,"setMaxDriveSize",tolua_CenterSpace_MCUTemplate_setMaxDriveSize00);
   tolua_function(tolua_S,"getMaxReactorSize",tolua_CenterSpace_MCUTemplate_getMaxReactorSize00);
   tolua_function(tolua_S,"setMaxReactorSize",tolua_CenterSpace_MCUTemplate_setMaxReactorSize00);
   tolua_function(tolua_S,"getMaxShieldSize",tolua_CenterSpace_MCUTemplate_getMaxShieldSize00);
   tolua_function(tolua_S,"setMaxShieldSize",tolua_CenterSpace_MCUTemplate_setMaxShieldSize00);
   tolua_function(tolua_S,"getMaxComponentSlots",tolua_CenterSpace_MCUTemplate_getMaxComponentSlots00);
   tolua_function(tolua_S,"setMaxComponentSlots",tolua_CenterSpace_MCUTemplate_setMaxComponentSlots00);
   tolua_function(tolua_S,"getMaterialName",tolua_CenterSpace_MCUTemplate_getMaterialName00);
   tolua_function(tolua_S,"setMaterialName",tolua_CenterSpace_MCUTemplate_setMaterialName00);
   tolua_function(tolua_S,"getMeshName",tolua_CenterSpace_MCUTemplate_getMeshName00);
   tolua_function(tolua_S,"setMeshName",tolua_CenterSpace_MCUTemplate_setMeshName00);
   tolua_function(tolua_S,"getAnimationDefinitionTemplate",tolua_CenterSpace_MCUTemplate_getAnimationDefinitionTemplate00);
   tolua_function(tolua_S,"setAnimationDefinitionTemplate",tolua_CenterSpace_MCUTemplate_setAnimationDefinitionTemplate00);
   tolua_function(tolua_S,"getMovementSpeed",tolua_CenterSpace_MCUTemplate_getMovementSpeed00);
   tolua_function(tolua_S,"setMovementSpeed",tolua_CenterSpace_MCUTemplate_setMovementSpeed00);
   tolua_function(tolua_S,"getWalkingAnimationSpeed",tolua_CenterSpace_MCUTemplate_getWalkingAnimationSpeed00);
   tolua_function(tolua_S,"setWalkingAnimationSpeed",tolua_CenterSpace_MCUTemplate_setWalkingAnimationSpeed00);
   tolua_function(tolua_S,"getWeaponsDescription",tolua_CenterSpace_MCUTemplate_getWeaponsDescription00);
   tolua_function(tolua_S,"getTotalCost",tolua_CenterSpace_MCUTemplate_getTotalCost00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_MCUTemplate_getGuiValues00);
   tolua_function(tolua_S,"instantiate",tolua_CenterSpace_MCUTemplate_instantiate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AnimationDefinitionTemplate","AnimationDefinitionTemplate","Template",tolua_collect_AnimationDefinitionTemplate);
  #else
  tolua_cclass(tolua_S,"AnimationDefinitionTemplate","AnimationDefinitionTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AnimationDefinitionTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_AnimationDefinitionTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_AnimationDefinitionTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_AnimationDefinitionTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AnimationDefinitionTemplate_delete00);
   tolua_function(tolua_S,"getWalkAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getWalkAnimationName00);
   tolua_function(tolua_S,"setWalkAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setWalkAnimationName00);
   tolua_function(tolua_S,"getGetHitAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getGetHitAnimationName00);
   tolua_function(tolua_S,"setGetHitAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setGetHitAnimationName00);
   tolua_function(tolua_S,"getTakeOffAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getTakeOffAnimationName00);
   tolua_function(tolua_S,"setTakeOffAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setTakeOffAnimationName00);
   tolua_function(tolua_S,"getLandAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getLandAnimationName00);
   tolua_function(tolua_S,"setLandAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setLandAnimationName00);
   tolua_function(tolua_S,"getFlyAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getFlyAnimationName00);
   tolua_function(tolua_S,"setFlyAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setFlyAnimationName00);
   tolua_function(tolua_S,"getIdleAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getIdleAnimationName00);
   tolua_function(tolua_S,"setIdleAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setIdleAnimationName00);
   tolua_function(tolua_S,"getDeathAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_getDeathAnimationName00);
   tolua_function(tolua_S,"setDeathAnimationName",tolua_CenterSpace_AnimationDefinitionTemplate_setDeathAnimationName00);
   tolua_function(tolua_S,"getMCUTemplate",tolua_CenterSpace_AnimationDefinitionTemplate_getMCUTemplate00);
   tolua_function(tolua_S,"setMCUTemplate",tolua_CenterSpace_AnimationDefinitionTemplate_setMCUTemplate00);
   tolua_function(tolua_S,"getNumWeaponAnimations",tolua_CenterSpace_AnimationDefinitionTemplate_getNumWeaponAnimations00);
   tolua_function(tolua_S,"setNumWeaponAnimations",tolua_CenterSpace_AnimationDefinitionTemplate_setNumWeaponAnimations00);
   tolua_function(tolua_S,"getWeaponAnimation",tolua_CenterSpace_AnimationDefinitionTemplate_getWeaponAnimation00);
   tolua_function(tolua_S,"addWeaponAnimationTemplate",tolua_CenterSpace_AnimationDefinitionTemplate_addWeaponAnimationTemplate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"WeaponAnimationTemplate","WeaponAnimationTemplate","Template",tolua_collect_WeaponAnimationTemplate);
  #else
  tolua_cclass(tolua_S,"WeaponAnimationTemplate","WeaponAnimationTemplate","Template",NULL);
  #endif
  tolua_beginmodule(tolua_S,"WeaponAnimationTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_WeaponAnimationTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_WeaponAnimationTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_WeaponAnimationTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_WeaponAnimationTemplate_delete00);
   tolua_function(tolua_S,"getHardpointNumber",tolua_CenterSpace_WeaponAnimationTemplate_getHardpointNumber00);
   tolua_function(tolua_S,"setHardpointNumber",tolua_CenterSpace_WeaponAnimationTemplate_setHardpointNumber00);
   tolua_function(tolua_S,"hasEnterAnimation",tolua_CenterSpace_WeaponAnimationTemplate_hasEnterAnimation00);
   tolua_function(tolua_S,"getEnterAnimationName",tolua_CenterSpace_WeaponAnimationTemplate_getEnterAnimationName00);
   tolua_function(tolua_S,"setEnterAnimationName",tolua_CenterSpace_WeaponAnimationTemplate_setEnterAnimationName00);
   tolua_function(tolua_S,"getFireAnimationName",tolua_CenterSpace_WeaponAnimationTemplate_getFireAnimationName00);
   tolua_function(tolua_S,"setFireAnimationName",tolua_CenterSpace_WeaponAnimationTemplate_setFireAnimationName00);
   tolua_function(tolua_S,"hasExitAnimation",tolua_CenterSpace_WeaponAnimationTemplate_hasExitAnimation00);
   tolua_function(tolua_S,"getExitAnimationName",tolua_CenterSpace_WeaponAnimationTemplate_getExitAnimationName00);
   tolua_function(tolua_S,"setExitAnimationName",tolua_CenterSpace_WeaponAnimationTemplate_setExitAnimationName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AIMCUTemplate","AIMCUTemplate","RequiredRankTemplate",tolua_collect_AIMCUTemplate);
  #else
  tolua_cclass(tolua_S,"AIMCUTemplate","AIMCUTemplate","RequiredRankTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AIMCUTemplate");
   tolua_function(tolua_S,"new",tolua_CenterSpace_AIMCUTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_AIMCUTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_AIMCUTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AIMCUTemplate_delete00);
   tolua_function(tolua_S,"getDefaultArmor",tolua_CenterSpace_AIMCUTemplate_getDefaultArmor00);
   tolua_function(tolua_S,"setDefaultArmor",tolua_CenterSpace_AIMCUTemplate_setDefaultArmor00);
   tolua_function(tolua_S,"getDefaultBattery",tolua_CenterSpace_AIMCUTemplate_getDefaultBattery00);
   tolua_function(tolua_S,"setDefaultBattery",tolua_CenterSpace_AIMCUTemplate_setDefaultBattery00);
   tolua_function(tolua_S,"getDefaultDrive",tolua_CenterSpace_AIMCUTemplate_getDefaultDrive00);
   tolua_function(tolua_S,"setDefaultDrive",tolua_CenterSpace_AIMCUTemplate_setDefaultDrive00);
   tolua_function(tolua_S,"getDefaultReactor",tolua_CenterSpace_AIMCUTemplate_getDefaultReactor00);
   tolua_function(tolua_S,"setDefaultReactor",tolua_CenterSpace_AIMCUTemplate_setDefaultReactor00);
   tolua_function(tolua_S,"getDefaultSensorSystem",tolua_CenterSpace_AIMCUTemplate_getDefaultSensorSystem00);
   tolua_function(tolua_S,"setDefaultSensorSystem",tolua_CenterSpace_AIMCUTemplate_setDefaultSensorSystem00);
   tolua_function(tolua_S,"getDefaultShield",tolua_CenterSpace_AIMCUTemplate_getDefaultShield00);
   tolua_function(tolua_S,"setDefaultShield",tolua_CenterSpace_AIMCUTemplate_setDefaultShield00);
   tolua_function(tolua_S,"getDefaultTargetingSystem",tolua_CenterSpace_AIMCUTemplate_getDefaultTargetingSystem00);
   tolua_function(tolua_S,"setDefaultTargetingSystem",tolua_CenterSpace_AIMCUTemplate_setDefaultTargetingSystem00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_AIMCUTemplate_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_AIMCUTemplate_setFactionTemplate00);
   tolua_function(tolua_S,"getMCUTemplate",tolua_CenterSpace_AIMCUTemplate_getMCUTemplate00);
   tolua_function(tolua_S,"setMCUTemplate",tolua_CenterSpace_AIMCUTemplate_setMCUTemplate00);
   tolua_function(tolua_S,"setWeapon",tolua_CenterSpace_AIMCUTemplate_setWeapon00);
   tolua_function(tolua_S,"instantiate",tolua_CenterSpace_AIMCUTemplate_instantiate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AIGroupTemplate","AIGroupTemplate","RequiredRankTemplate",tolua_collect_AIGroupTemplate);
  #else
  tolua_cclass(tolua_S,"AIGroupTemplate","AIGroupTemplate","RequiredRankTemplate",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AIGroupTemplate");
   tolua_constant(tolua_S,"VERY_LIGHT",AIGroupTemplate::VERY_LIGHT);
   tolua_constant(tolua_S,"LIGHT",AIGroupTemplate::LIGHT);
   tolua_constant(tolua_S,"MEDIUM",AIGroupTemplate::MEDIUM);
   tolua_constant(tolua_S,"HEAVY",AIGroupTemplate::HEAVY);
   tolua_constant(tolua_S,"MIXED_LIGHT_AND_HEAVY",AIGroupTemplate::MIXED_LIGHT_AND_HEAVY);
   tolua_constant(tolua_S,"MIXED_LIGHT_MEDIUM_AND_HEAVY",AIGroupTemplate::MIXED_LIGHT_MEDIUM_AND_HEAVY);
   tolua_function(tolua_S,"new",tolua_CenterSpace_AIGroupTemplate_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_AIGroupTemplate_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_AIGroupTemplate_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AIGroupTemplate_delete00);
   tolua_function(tolua_S,"getAIMCUs",tolua_CenterSpace_AIGroupTemplate_getAIMCUs00);
   tolua_function(tolua_S,"setAIMCUs",tolua_CenterSpace_AIGroupTemplate_setAIMCUs00);
   tolua_function(tolua_S,"addAIMCU",tolua_CenterSpace_AIGroupTemplate_addAIMCU00);
   tolua_function(tolua_S,"addAIMCU",tolua_CenterSpace_AIGroupTemplate_addAIMCU01);
   tolua_function(tolua_S,"getType",tolua_CenterSpace_AIGroupTemplate_getType00);
   tolua_function(tolua_S,"setType",tolua_CenterSpace_AIGroupTemplate_setType00);
   tolua_function(tolua_S,"setType",tolua_CenterSpace_AIGroupTemplate_setType01);
   tolua_function(tolua_S,"getMCUs",tolua_CenterSpace_AIGroupTemplate_getMCUs00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_AIGroupTemplate_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_AIGroupTemplate_setFactionTemplate00);
   tolua_function(tolua_S,"getSize",tolua_CenterSpace_AIGroupTemplate_getSize00);
   tolua_function(tolua_S,"getStrength",tolua_CenterSpace_AIGroupTemplate_getStrength00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_AIGroupTemplate_","Repository<AIGroupTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_AIGroupTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_AIGroupTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_AIGroupTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_AIGroupTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_AIGroupTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_AIGroupTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_AIGroupTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_AIMCUTemplate_","Repository<AIMCUTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_AIMCUTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_AIMCUTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_AIMCUTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_AIMCUTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_AIMCUTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_AIMCUTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_AIMCUTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_ArmorTemplate_","Repository<ArmorTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_ArmorTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_ArmorTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_ArmorTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_ArmorTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_ArmorTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_ArmorTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_ArmorTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_BatteryTemplate_","Repository<BatteryTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_BatteryTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_BatteryTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_BatteryTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_BatteryTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_BatteryTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_BatteryTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_BatteryTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_BattlefieldTemplate_","Repository<BattlefieldTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_BattlefieldTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_BattlefieldTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_BattlefieldTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_BattlefieldTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_BattlefieldTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_BattlefieldTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_BattlefieldTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_BeamProjectileTemplate_","Repository<BeamProjectileTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_BeamProjectileTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_BeamProjectileTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_BeamProjectileTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_BeamProjectileTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_BeamProjectileTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_BeamProjectileTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_BeamProjectileTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_DriveTemplate_","Repository<DriveTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_DriveTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_DriveTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_DriveTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_DriveTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_DriveTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_DriveTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_DriveTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_FactionHubTemplate_","Repository<FactionHubTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_FactionHubTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_FactionHubTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_FactionHubTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_FactionHubTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_FactionHubTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_FactionHubTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_FactionHubTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_FactionTemplate_","Repository<FactionTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_FactionTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_FactionTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_FactionTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_FactionTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_FactionTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_FactionTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_FactionTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_HubTemplate_","Repository<HubTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_HubTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_HubTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_HubTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_HubTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_HubTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_HubTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_HubTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_MCUTemplate_","Repository<MCUTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_MCUTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_MCUTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_MCUTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_MCUTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_MCUTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_MCUTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_MCUTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_PhysicalProjectileTemplate_","Repository<PhysicalProjectileTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_PhysicalProjectileTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_PhysicalProjectileTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_PhysicalProjectileTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_PhysicalProjectileTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_PhysicalProjectileTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_PhysicalProjectileTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_PhysicalProjectileTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_RandomMissionTypeTemplate_","Repository<RandomMissionTypeTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_RandomMissionTypeTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_RandomMissionTypeTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_RandomMissionTypeTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_RandomMissionTypeTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_RandomMissionTypeTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_RandomMissionTypeTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_RandomMissionTypeTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_ReactorTemplate_","Repository<ReactorTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_ReactorTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_ReactorTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_ReactorTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_ReactorTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_ReactorTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_ReactorTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_ReactorTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_SensorSystemTemplate_","Repository<SensorSystemTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_SensorSystemTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_SensorSystemTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_SensorSystemTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_SensorSystemTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_SensorSystemTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_SensorSystemTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_SensorSystemTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_ShieldTemplate_","Repository<ShieldTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_ShieldTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_ShieldTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_ShieldTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_ShieldTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_ShieldTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_ShieldTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_ShieldTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_StoryMissionTemplate_","Repository<StoryMissionTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_StoryMissionTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_StoryMissionTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_StoryMissionTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_StoryMissionTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_StoryMissionTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_StoryMissionTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_StoryMissionTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_TargetingSystemTemplate_","Repository<TargetingSystemTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_TargetingSystemTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_TargetingSystemTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_TargetingSystemTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_TargetingSystemTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_TargetingSystemTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_TargetingSystemTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_TargetingSystemTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_TerrainTemplate_","Repository<TerrainTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_TerrainTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_TerrainTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_TerrainTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_TerrainTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_TerrainTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_TerrainTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_TerrainTemplate__add00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Repository_WeaponTemplate_","Repository<WeaponTemplate>","",NULL);
  tolua_beginmodule(tolua_S,"Repository_WeaponTemplate_");
   tolua_function(tolua_S,"at",tolua_CenterSpace_Repository_WeaponTemplate__at00);
   tolua_function(tolua_S,"findByName",tolua_CenterSpace_Repository_WeaponTemplate__findByName00);
   tolua_function(tolua_S,"findByNameOrID",tolua_CenterSpace_Repository_WeaponTemplate__findByNameOrID00);
   tolua_function(tolua_S,"size",tolua_CenterSpace_Repository_WeaponTemplate__size00);
   tolua_function(tolua_S,"getNextId",tolua_CenterSpace_Repository_WeaponTemplate__getNextId00);
   tolua_function(tolua_S,"add",tolua_CenterSpace_Repository_WeaponTemplate__add00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BeamProjectileTemplateRepository","BeamProjectileTemplateRepository","Repository<BeamProjectileTemplate>",tolua_collect_BeamProjectileTemplateRepository);
  #else
  tolua_cclass(tolua_S,"BeamProjectileTemplateRepository","BeamProjectileTemplateRepository","Repository<BeamProjectileTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BeamProjectileTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_BeamProjectileTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BeamProjectileTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PhysicalProjectileTemplateRepository","PhysicalProjectileTemplateRepository","Repository<PhysicalProjectileTemplate>",tolua_collect_PhysicalProjectileTemplateRepository);
  #else
  tolua_cclass(tolua_S,"PhysicalProjectileTemplateRepository","PhysicalProjectileTemplateRepository","Repository<PhysicalProjectileTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PhysicalProjectileTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_PhysicalProjectileTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PhysicalProjectileTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AIGroupTemplateRepository","AIGroupTemplateRepository","Repository<AIGroupTemplate>",tolua_collect_AIGroupTemplateRepository);
  #else
  tolua_cclass(tolua_S,"AIGroupTemplateRepository","AIGroupTemplateRepository","Repository<AIGroupTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AIGroupTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_AIGroupTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AIGroupTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableAIGroupTemplates",tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates00);
   tolua_function(tolua_S,"getAvailableAIGroupTemplates",tolua_CenterSpace_AIGroupTemplateRepository_getAvailableAIGroupTemplates01);
   tolua_function(tolua_S,"getRandomAIGroupTemplate",tolua_CenterSpace_AIGroupTemplateRepository_getRandomAIGroupTemplate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AIMCUTemplateRepository","AIMCUTemplateRepository","Repository<AIMCUTemplate>",tolua_collect_AIMCUTemplateRepository);
  #else
  tolua_cclass(tolua_S,"AIMCUTemplateRepository","AIMCUTemplateRepository","Repository<AIMCUTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AIMCUTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_AIMCUTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AIMCUTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableAIMCUTemplates",tolua_CenterSpace_AIMCUTemplateRepository_getAvailableAIMCUTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ArmorTemplateRepository","ArmorTemplateRepository","Repository<ArmorTemplate>",tolua_collect_ArmorTemplateRepository);
  #else
  tolua_cclass(tolua_S,"ArmorTemplateRepository","ArmorTemplateRepository","Repository<ArmorTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ArmorTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_ArmorTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ArmorTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_ArmorTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BatteryTemplateRepository","BatteryTemplateRepository","Repository<BatteryTemplate>",tolua_collect_BatteryTemplateRepository);
  #else
  tolua_cclass(tolua_S,"BatteryTemplateRepository","BatteryTemplateRepository","Repository<BatteryTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BatteryTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_BatteryTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BatteryTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_BatteryTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"DriveTemplateRepository","DriveTemplateRepository","Repository<DriveTemplate>",tolua_collect_DriveTemplateRepository);
  #else
  tolua_cclass(tolua_S,"DriveTemplateRepository","DriveTemplateRepository","Repository<DriveTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"DriveTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_DriveTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_DriveTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_DriveTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ReactorTemplateRepository","ReactorTemplateRepository","Repository<ReactorTemplate>",tolua_collect_ReactorTemplateRepository);
  #else
  tolua_cclass(tolua_S,"ReactorTemplateRepository","ReactorTemplateRepository","Repository<ReactorTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ReactorTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_ReactorTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ReactorTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_ReactorTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SensorSystemTemplateRepository","SensorSystemTemplateRepository","Repository<SensorSystemTemplate>",tolua_collect_SensorSystemTemplateRepository);
  #else
  tolua_cclass(tolua_S,"SensorSystemTemplateRepository","SensorSystemTemplateRepository","Repository<SensorSystemTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SensorSystemTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_SensorSystemTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_SensorSystemTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_SensorSystemTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ShieldTemplateRepository","ShieldTemplateRepository","Repository<ShieldTemplate>",tolua_collect_ShieldTemplateRepository);
  #else
  tolua_cclass(tolua_S,"ShieldTemplateRepository","ShieldTemplateRepository","Repository<ShieldTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ShieldTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_ShieldTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ShieldTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_ShieldTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TargetingSystemTemplateRepository","TargetingSystemTemplateRepository","Repository<TargetingSystemTemplate>",tolua_collect_TargetingSystemTemplateRepository);
  #else
  tolua_cclass(tolua_S,"TargetingSystemTemplateRepository","TargetingSystemTemplateRepository","Repository<TargetingSystemTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TargetingSystemTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_TargetingSystemTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TargetingSystemTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_TargetingSystemTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"WeaponTemplateRepository","WeaponTemplateRepository","Repository<WeaponTemplate>",tolua_collect_WeaponTemplateRepository);
  #else
  tolua_cclass(tolua_S,"WeaponTemplateRepository","WeaponTemplateRepository","Repository<WeaponTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"WeaponTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_WeaponTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_WeaponTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_WeaponTemplateRepository_getAvailableTemplates01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MCUTemplateRepository","MCUTemplateRepository","Repository<MCUTemplate>",tolua_collect_MCUTemplateRepository);
  #else
  tolua_cclass(tolua_S,"MCUTemplateRepository","MCUTemplateRepository","Repository<MCUTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MCUTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_MCUTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MCUTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableMCUTemplates",tolua_CenterSpace_MCUTemplateRepository_getAvailableMCUTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RandomMissionTypeTemplateRepository","RandomMissionTypeTemplateRepository","Repository<RandomMissionTypeTemplate>",tolua_collect_RandomMissionTypeTemplateRepository);
  #else
  tolua_cclass(tolua_S,"RandomMissionTypeTemplateRepository","RandomMissionTypeTemplateRepository","Repository<RandomMissionTypeTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RandomMissionTypeTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_RandomMissionTypeTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_RandomMissionTypeTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_RandomMissionTypeTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"StoryMissionTemplateRepository","StoryMissionTemplateRepository","Repository<StoryMissionTemplate>",tolua_collect_StoryMissionTemplateRepository);
  #else
  tolua_cclass(tolua_S,"StoryMissionTemplateRepository","StoryMissionTemplateRepository","Repository<StoryMissionTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"StoryMissionTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_StoryMissionTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_StoryMissionTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_StoryMissionTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BattlefieldTemplateRepository","BattlefieldTemplateRepository","Repository<BattlefieldTemplate>",tolua_collect_BattlefieldTemplateRepository);
  #else
  tolua_cclass(tolua_S,"BattlefieldTemplateRepository","BattlefieldTemplateRepository","Repository<BattlefieldTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BattlefieldTemplateRepository");
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_BattlefieldTemplateRepository_getAvailableTemplates00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_BattlefieldTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BattlefieldTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TerrainTextureTemplateRepository","TerrainTextureTemplateRepository","Repository<TerrainTextureTemplate>",tolua_collect_TerrainTextureTemplateRepository);
  #else
  tolua_cclass(tolua_S,"TerrainTextureTemplateRepository","TerrainTextureTemplateRepository","Repository<TerrainTextureTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TerrainTextureTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_TerrainTextureTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TerrainTextureTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TerrainTemplateRepository","TerrainTemplateRepository","Repository<TerrainTemplate>",tolua_collect_TerrainTemplateRepository);
  #else
  tolua_cclass(tolua_S,"TerrainTemplateRepository","TerrainTemplateRepository","Repository<TerrainTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TerrainTemplateRepository");
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_TerrainTemplateRepository_getAvailableTemplates00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_TerrainTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TerrainTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HubTemplateRepository","HubTemplateRepository","Repository<HubTemplate>",tolua_collect_HubTemplateRepository);
  #else
  tolua_cclass(tolua_S,"HubTemplateRepository","HubTemplateRepository","Repository<HubTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HubTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_HubTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_HubTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_HubTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FactionTemplateRepository","FactionTemplateRepository","Repository<FactionTemplate>",tolua_collect_FactionTemplateRepository);
  #else
  tolua_cclass(tolua_S,"FactionTemplateRepository","FactionTemplateRepository","Repository<FactionTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FactionTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_FactionTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_FactionTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RankTemplateRepository","RankTemplateRepository","Repository<RankTemplate>",tolua_collect_RankTemplateRepository);
  #else
  tolua_cclass(tolua_S,"RankTemplateRepository","RankTemplateRepository","Repository<RankTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RankTemplateRepository");
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_RankTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_RankTemplateRepository_delete00);
   tolua_function(tolua_S,"getAvailableTemplates",tolua_CenterSpace_RankTemplateRepository_getAvailableTemplates00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FactionHubTemplateRepository","FactionHubTemplateRepository","Repository<FactionHubTemplate>",tolua_collect_FactionHubTemplateRepository);
  #else
  tolua_cclass(tolua_S,"FactionHubTemplateRepository","FactionHubTemplateRepository","Repository<FactionHubTemplate>",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FactionHubTemplateRepository");
   tolua_function(tolua_S,"getFactionHubTemplate",tolua_CenterSpace_FactionHubTemplateRepository_getFactionHubTemplate00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_FactionHubTemplateRepository_getSingletonPtr00);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_FactionHubTemplateRepository_delete00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"BeamProjectileTemplateRepositoryLoader","BeamProjectileTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"BeamProjectileTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_BeamProjectileTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"PhysicalProjectileTemplateRepositoryLoader","PhysicalProjectileTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"PhysicalProjectileTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_PhysicalProjectileTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"AIGroupTemplateRepositoryLoader","AIGroupTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"AIGroupTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_AIGroupTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"AIMCUTemplateRepositoryLoader","AIMCUTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"AIMCUTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_AIMCUTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ArmorTemplateRepositoryLoader","ArmorTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"ArmorTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_ArmorTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"BatteryTemplateRepositoryLoader","BatteryTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"BatteryTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_BatteryTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"DriveTemplateRepositoryLoader","DriveTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"DriveTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_DriveTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ReactorTemplateRepositoryLoader","ReactorTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"ReactorTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_ReactorTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"SensorSystemTemplateRepositoryLoader","SensorSystemTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"SensorSystemTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_SensorSystemTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ShieldTemplateRepositoryLoader","ShieldTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"ShieldTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_ShieldTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"TargetingSystemTemplateRepositoryLoader","TargetingSystemTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"TargetingSystemTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_TargetingSystemTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"WeaponTemplateRepositoryLoader","WeaponTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"WeaponTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_WeaponTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"MCUTemplateRepositoryLoader","MCUTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"MCUTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_MCUTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"BattlefieldTemplateRepositoryLoader","BattlefieldTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"BattlefieldTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_BattlefieldTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"TerrainTemplateRepositoryLoader","TerrainTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"TerrainTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_TerrainTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"HubTemplateRepositoryLoader","HubTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"HubTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_HubTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"FactionTemplateRepositoryLoader","FactionTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"FactionTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_FactionTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"FactionHubTemplateRepositoryLoader","FactionHubTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"FactionHubTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_FactionHubTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"TerrainTextureTemplateRepositoryLoader","TerrainTextureTemplateRepositoryLoader","RepositoryLoader",NULL);
  tolua_beginmodule(tolua_S,"TerrainTextureTemplateRepositoryLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_TerrainTextureTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"WeaponAnimationTemplateDataLoader","WeaponAnimationTemplateDataLoader","DataLoader",NULL);
  tolua_beginmodule(tolua_S,"WeaponAnimationTemplateDataLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_WeaponAnimationTemplateDataLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"WeaponHardpointTemplateDataLoader","WeaponHardpointTemplateDataLoader","DataLoader",NULL);
  tolua_beginmodule(tolua_S,"WeaponHardpointTemplateDataLoader");
   tolua_function(tolua_S,"load",tolua_CenterSpace_WeaponHardpointTemplateDataLoader_load00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AnimationDefinitionTemplateDataLoader","AnimationDefinitionTemplateDataLoader","DataLoader",tolua_collect_AnimationDefinitionTemplateDataLoader);
  #else
  tolua_cclass(tolua_S,"AnimationDefinitionTemplateDataLoader","AnimationDefinitionTemplateDataLoader","DataLoader",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AnimationDefinitionTemplateDataLoader");
   tolua_function(tolua_S,"new",tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_delete00);
   tolua_function(tolua_S,"load",tolua_CenterSpace_AnimationDefinitionTemplateDataLoader_load00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RandomMissionTypeTemplateRepositoryLoader","RandomMissionTypeTemplateRepositoryLoader","RepositoryLoader",tolua_collect_RandomMissionTypeTemplateRepositoryLoader);
  #else
  tolua_cclass(tolua_S,"RandomMissionTypeTemplateRepositoryLoader","RandomMissionTypeTemplateRepositoryLoader","RepositoryLoader",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RandomMissionTypeTemplateRepositoryLoader");
   tolua_function(tolua_S,"new",tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_delete00);
   tolua_function(tolua_S,"load",tolua_CenterSpace_RandomMissionTypeTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RankTemplateRepositoryLoader","RankTemplateRepositoryLoader","RepositoryLoader",tolua_collect_RankTemplateRepositoryLoader);
  #else
  tolua_cclass(tolua_S,"RankTemplateRepositoryLoader","RankTemplateRepositoryLoader","RepositoryLoader",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RankTemplateRepositoryLoader");
   tolua_function(tolua_S,"new",tolua_CenterSpace_RankTemplateRepositoryLoader_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RankTemplateRepositoryLoader_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RankTemplateRepositoryLoader_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_RankTemplateRepositoryLoader_delete00);
   tolua_function(tolua_S,"load",tolua_CenterSpace_RankTemplateRepositoryLoader_load00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"RepositoryManager","RepositoryManager","",NULL);
  tolua_beginmodule(tolua_S,"RepositoryManager");
   tolua_function(tolua_S,"loadAIMCUs",tolua_CenterSpace_RepositoryManager_loadAIMCUs00);
   tolua_function(tolua_S,"loadAIGroups",tolua_CenterSpace_RepositoryManager_loadAIGroups00);
   tolua_function(tolua_S,"loadAnimations",tolua_CenterSpace_RepositoryManager_loadAnimations00);
   tolua_function(tolua_S,"loadArmors",tolua_CenterSpace_RepositoryManager_loadArmors00);
   tolua_function(tolua_S,"loadBatteries",tolua_CenterSpace_RepositoryManager_loadBatteries00);
   tolua_function(tolua_S,"loadBattlefields",tolua_CenterSpace_RepositoryManager_loadBattlefields00);
   tolua_function(tolua_S,"loadBeamProjectiles",tolua_CenterSpace_RepositoryManager_loadBeamProjectiles00);
   tolua_function(tolua_S,"loadDrives",tolua_CenterSpace_RepositoryManager_loadDrives00);
   tolua_function(tolua_S,"loadFactions",tolua_CenterSpace_RepositoryManager_loadFactions00);
   tolua_function(tolua_S,"loadFactionHubs",tolua_CenterSpace_RepositoryManager_loadFactionHubs00);
   tolua_function(tolua_S,"loadHubs",tolua_CenterSpace_RepositoryManager_loadHubs00);
   tolua_function(tolua_S,"loadMCUs",tolua_CenterSpace_RepositoryManager_loadMCUs00);
   tolua_function(tolua_S,"loadPhysicalProjectiles",tolua_CenterSpace_RepositoryManager_loadPhysicalProjectiles00);
   tolua_function(tolua_S,"loadRandomMissionTypes",tolua_CenterSpace_RepositoryManager_loadRandomMissionTypes00);
   tolua_function(tolua_S,"loadRanks",tolua_CenterSpace_RepositoryManager_loadRanks00);
   tolua_function(tolua_S,"loadReactors",tolua_CenterSpace_RepositoryManager_loadReactors00);
   tolua_function(tolua_S,"loadSensors",tolua_CenterSpace_RepositoryManager_loadSensors00);
   tolua_function(tolua_S,"loadShields",tolua_CenterSpace_RepositoryManager_loadShields00);
   tolua_function(tolua_S,"loadSounds",tolua_CenterSpace_RepositoryManager_loadSounds00);
   tolua_function(tolua_S,"loadTargetingSystems",tolua_CenterSpace_RepositoryManager_loadTargetingSystems00);
   tolua_function(tolua_S,"loadTerrains",tolua_CenterSpace_RepositoryManager_loadTerrains00);
   tolua_function(tolua_S,"loadTerrainTextures",tolua_CenterSpace_RepositoryManager_loadTerrainTextures00);
   tolua_function(tolua_S,"loadWeaponAnimations",tolua_CenterSpace_RepositoryManager_loadWeaponAnimations00);
   tolua_function(tolua_S,"loadWeapons",tolua_CenterSpace_RepositoryManager_loadWeapons00);
   tolua_function(tolua_S,"loadWeaponHardpoints",tolua_CenterSpace_RepositoryManager_loadWeaponHardpoints00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_RepositoryManager_getSingletonPtr00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"WeaponHardpoint","WeaponHardpoint","PersistentEntity",tolua_collect_WeaponHardpoint);
  #else
  tolua_cclass(tolua_S,"WeaponHardpoint","WeaponHardpoint","PersistentEntity",NULL);
  #endif
  tolua_beginmodule(tolua_S,"WeaponHardpoint");
   tolua_function(tolua_S,"new",tolua_CenterSpace_WeaponHardpoint_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_WeaponHardpoint_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_WeaponHardpoint_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_WeaponHardpoint_delete00);
   tolua_function(tolua_S,"getMCU",tolua_CenterSpace_WeaponHardpoint_getMCU00);
   tolua_function(tolua_S,"setMCU",tolua_CenterSpace_WeaponHardpoint_setMCU00);
   tolua_function(tolua_S,"setWeapon",tolua_CenterSpace_WeaponHardpoint_setWeapon00);
   tolua_function(tolua_S,"getWeapon",tolua_CenterSpace_WeaponHardpoint_getWeapon00);
   tolua_function(tolua_S,"setHardpointNumber",tolua_CenterSpace_WeaponHardpoint_setHardpointNumber00);
   tolua_function(tolua_S,"canFire",tolua_CenterSpace_WeaponHardpoint_canFire00);
   tolua_function(tolua_S,"decrementAmmo",tolua_CenterSpace_WeaponHardpoint_decrementAmmo00);
   tolua_function(tolua_S,"resetAmmoRemaining",tolua_CenterSpace_WeaponHardpoint_resetAmmoRemaining00);
   tolua_function(tolua_S,"endTurn",tolua_CenterSpace_WeaponHardpoint_endTurn00);
   tolua_function(tolua_S,"getHardpointNumber",tolua_CenterSpace_WeaponHardpoint_getHardpointNumber00);
   tolua_function(tolua_S,"fire",tolua_CenterSpace_WeaponHardpoint_fire00);
   tolua_function(tolua_S,"getWeaponHardpointTemplate",tolua_CenterSpace_WeaponHardpoint_getWeaponHardpointTemplate00);
   tolua_function(tolua_S,"setWeaponHardpointTemplate",tolua_CenterSpace_WeaponHardpoint_setWeaponHardpointTemplate00);
   tolua_function(tolua_S,"getCurrentChanceToHit",tolua_CenterSpace_WeaponHardpoint_getCurrentChanceToHit00);
   tolua_function(tolua_S,"setCurrentChanceToHit",tolua_CenterSpace_WeaponHardpoint_setCurrentChanceToHit00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MechanizedCombatUnit","MechanizedCombatUnit","PersistentEntity",tolua_collect_MechanizedCombatUnit);
  #else
  tolua_cclass(tolua_S,"MechanizedCombatUnit","MechanizedCombatUnit","PersistentEntity",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MechanizedCombatUnit");
   tolua_function(tolua_S,"new",tolua_CenterSpace_MechanizedCombatUnit_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MechanizedCombatUnit_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MechanizedCombatUnit_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MechanizedCombatUnit_delete00);
   tolua_function(tolua_S,"getArmor",tolua_CenterSpace_MechanizedCombatUnit_getArmor00);
   tolua_function(tolua_S,"setArmor",tolua_CenterSpace_MechanizedCombatUnit_setArmor00);
   tolua_function(tolua_S,"getBattery",tolua_CenterSpace_MechanizedCombatUnit_getBattery00);
   tolua_function(tolua_S,"setBattery",tolua_CenterSpace_MechanizedCombatUnit_setBattery00);
   tolua_function(tolua_S,"getDrive",tolua_CenterSpace_MechanizedCombatUnit_getDrive00);
   tolua_function(tolua_S,"setDrive",tolua_CenterSpace_MechanizedCombatUnit_setDrive00);
   tolua_function(tolua_S,"getInventoryState",tolua_CenterSpace_MechanizedCombatUnit_getInventoryState00);
   tolua_function(tolua_S,"setInventoryState",tolua_CenterSpace_MechanizedCombatUnit_setInventoryState00);
   tolua_function(tolua_S,"getMCUTemplate",tolua_CenterSpace_MechanizedCombatUnit_getMCUTemplate00);
   tolua_function(tolua_S,"setMCUTemplate",tolua_CenterSpace_MechanizedCombatUnit_setMCUTemplate00);
   tolua_function(tolua_S,"getReactor",tolua_CenterSpace_MechanizedCombatUnit_getReactor00);
   tolua_function(tolua_S,"setReactor",tolua_CenterSpace_MechanizedCombatUnit_setReactor00);
   tolua_function(tolua_S,"getSensorSystem",tolua_CenterSpace_MechanizedCombatUnit_getSensorSystem00);
   tolua_function(tolua_S,"setSensorSystem",tolua_CenterSpace_MechanizedCombatUnit_setSensorSystem00);
   tolua_function(tolua_S,"getShield",tolua_CenterSpace_MechanizedCombatUnit_getShield00);
   tolua_function(tolua_S,"setShield",tolua_CenterSpace_MechanizedCombatUnit_setShield00);
   tolua_function(tolua_S,"getTargetingSystem",tolua_CenterSpace_MechanizedCombatUnit_getTargetingSystem00);
   tolua_function(tolua_S,"setTargetingSystem",tolua_CenterSpace_MechanizedCombatUnit_setTargetingSystem00);
   tolua_function(tolua_S,"getWeaponHardpoint",tolua_CenterSpace_MechanizedCombatUnit_getWeaponHardpoint00);
   tolua_function(tolua_S,"getWeapons",tolua_CenterSpace_MechanizedCombatUnit_getWeapons00);
   tolua_function(tolua_S,"setWeapon",tolua_CenterSpace_MechanizedCombatUnit_setWeapon00);
   tolua_function(tolua_S,"addWeapon",tolua_CenterSpace_MechanizedCombatUnit_addWeapon00);
   tolua_function(tolua_S,"setWeapons",tolua_CenterSpace_MechanizedCombatUnit_setWeapons00);
   tolua_function(tolua_S,"removeWeapon",tolua_CenterSpace_MechanizedCombatUnit_removeWeapon00);
   tolua_function(tolua_S,"getTotalWeight",tolua_CenterSpace_MechanizedCombatUnit_getTotalWeight00);
   tolua_function(tolua_S,"getMovementCostPerSquare",tolua_CenterSpace_MechanizedCombatUnit_getMovementCostPerSquare00);
   tolua_function(tolua_S,"getSequence",tolua_CenterSpace_MechanizedCombatUnit_getSequence00);
   tolua_function(tolua_S,"setSequence",tolua_CenterSpace_MechanizedCombatUnit_setSequence00);
   tolua_function(tolua_S,"applyWarhead",tolua_CenterSpace_MechanizedCombatUnit_applyWarhead00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_MechanizedCombatUnit_getGuiValues00);
   tolua_function(tolua_S,"getWeaponGuiData",tolua_CenterSpace_MechanizedCombatUnit_getWeaponGuiData00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MCUPlacement","MCUPlacement","",tolua_collect_MCUPlacement);
  #else
  tolua_cclass(tolua_S,"MCUPlacement","MCUPlacement","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MCUPlacement");
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUPlacement_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUPlacement_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUPlacement_new00_local);
   tolua_variable(tolua_S,"X",tolua_get_MCUPlacement_X,tolua_set_MCUPlacement_X);
   tolua_variable(tolua_S,"Z",tolua_get_MCUPlacement_Z,tolua_set_MCUPlacement_Z);
   tolua_variable(tolua_S,"OwnerAIGroup",tolua_get_MCUPlacement_OwnerAIGroup_ptr,tolua_set_MCUPlacement_OwnerAIGroup_ptr);
   tolua_variable(tolua_S,"MCU",tolua_get_MCUPlacement_MCU_ptr,tolua_set_MCUPlacement_MCU_ptr);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"LuaMCUDeque","LuaMCUDeque","",NULL);
  tolua_beginmodule(tolua_S,"LuaMCUDeque");
   tolua_function(tolua_S,"addMechanizedCombatUnit",tolua_CenterSpace_LuaMCUDeque_addMechanizedCombatUnit00);
   tolua_function(tolua_S,"setMCUs",tolua_CenterSpace_LuaMCUDeque_setMCUs00);
   tolua_function(tolua_S,"getMCUPlacements",tolua_CenterSpace_LuaMCUDeque_getMCUPlacements00);
   tolua_function(tolua_S,"getNext",tolua_CenterSpace_LuaMCUDeque_getNext00);
   tolua_function(tolua_S,"hasMoreItems",tolua_CenterSpace_LuaMCUDeque_hasMoreItems00);
   tolua_function(tolua_S,"reset",tolua_CenterSpace_LuaMCUDeque_reset00);
   tolua_function(tolua_S,"numItems",tolua_CenterSpace_LuaMCUDeque_numItems00);
   tolua_function(tolua_S,"getSeedX",tolua_CenterSpace_LuaMCUDeque_getSeedX00);
   tolua_function(tolua_S,"setSeedX",tolua_CenterSpace_LuaMCUDeque_setSeedX00);
   tolua_function(tolua_S,"getSeedZ",tolua_CenterSpace_LuaMCUDeque_getSeedZ00);
   tolua_function(tolua_S,"setSeedZ",tolua_CenterSpace_LuaMCUDeque_setSeedZ00);
   tolua_function(tolua_S,"isCellOccupied",tolua_CenterSpace_LuaMCUDeque_isCellOccupied00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Shield","Shield","MovableEntity",tolua_collect_Shield);
  #else
  tolua_cclass(tolua_S,"Shield","Shield","MovableEntity",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Shield");
   tolua_function(tolua_S,"new",tolua_CenterSpace_Shield_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_Shield_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_Shield_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_Shield_delete00);
   tolua_function(tolua_S,"applyWarhead",tolua_CenterSpace_Shield_applyWarhead00);
   tolua_function(tolua_S,"move",tolua_CenterSpace_Shield_move00);
   tolua_function(tolua_S,"endTurn",tolua_CenterSpace_Shield_endTurn00);
   tolua_function(tolua_S,"getMaxHealth",tolua_CenterSpace_Shield_getMaxHealth00);
   tolua_function(tolua_S,"setMaxHealth",tolua_CenterSpace_Shield_setMaxHealth00);
   tolua_function(tolua_S,"getCurrentHealth",tolua_CenterSpace_Shield_getCurrentHealth00);
   tolua_function(tolua_S,"setCurrentHealth",tolua_CenterSpace_Shield_setCurrentHealth00);
   tolua_function(tolua_S,"getRadius",tolua_CenterSpace_Shield_getRadius00);
   tolua_function(tolua_S,"setRadius",tolua_CenterSpace_Shield_setRadius00);
   tolua_function(tolua_S,"isActive",tolua_CenterSpace_Shield_isActive00);
   tolua_function(tolua_S,"setIsActive",tolua_CenterSpace_Shield_setIsActive00);
   tolua_function(tolua_S,"getMCUController",tolua_CenterSpace_Shield_getMCUController00);
   tolua_function(tolua_S,"setMCUController",tolua_CenterSpace_Shield_setMCUController00);
   tolua_function(tolua_S,"getShieldTemplate",tolua_CenterSpace_Shield_getShieldTemplate00);
   tolua_function(tolua_S,"setShieldTemplate",tolua_CenterSpace_Shield_setShieldTemplate00);
   tolua_function(tolua_S,"getEntity",tolua_CenterSpace_Shield_getEntity00);
   tolua_function(tolua_S,"setEntity",tolua_CenterSpace_Shield_setEntity00);
   tolua_function(tolua_S,"getMCUNode",tolua_CenterSpace_Shield_getMCUNode00);
   tolua_function(tolua_S,"setMCUNode",tolua_CenterSpace_Shield_setMCUNode00);
   tolua_function(tolua_S,"getShieldNode",tolua_CenterSpace_Shield_getShieldNode00);
   tolua_function(tolua_S,"setShieldNode",tolua_CenterSpace_Shield_setShieldNode00);
   tolua_function(tolua_S,"getGhostObject",tolua_CenterSpace_Shield_getGhostObject00);
   tolua_function(tolua_S,"setGhostObject",tolua_CenterSpace_Shield_setGhostObject00);
   tolua_function(tolua_S,"getCollisionShape",tolua_CenterSpace_Shield_getCollisionShape00);
   tolua_function(tolua_S,"setCollisionShape",tolua_CenterSpace_Shield_setCollisionShape00);
   tolua_function(tolua_S,"getCurrentPosition",tolua_CenterSpace_Shield_getCurrentPosition00);
   tolua_function(tolua_S,"setCurrentPosition",tolua_CenterSpace_Shield_setCurrentPosition00);
   tolua_function(tolua_S,"isVisible",tolua_CenterSpace_Shield_isVisible00);
   tolua_function(tolua_S,"setVisible",tolua_CenterSpace_Shield_setVisible00);
   tolua_function(tolua_S,"isCloserThan",tolua_CenterSpace_Shield_isCloserThan00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Projectile","Projectile","MovableEntity",tolua_collect_Projectile);
  #else
  tolua_cclass(tolua_S,"Projectile","Projectile","MovableEntity",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Projectile");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_Projectile_delete00);
   tolua_function(tolua_S,"getStartpoint",tolua_CenterSpace_Projectile_getStartpoint00);
   tolua_function(tolua_S,"setStartpoint",tolua_CenterSpace_Projectile_setStartpoint00);
   tolua_function(tolua_S,"getEndpoint",tolua_CenterSpace_Projectile_getEndpoint00);
   tolua_function(tolua_S,"setEndpoint",tolua_CenterSpace_Projectile_setEndpoint00);
   tolua_function(tolua_S,"getProjectileID",tolua_CenterSpace_Projectile_getProjectileID00);
   tolua_function(tolua_S,"setProjectileID",tolua_CenterSpace_Projectile_setProjectileID00);
   tolua_function(tolua_S,"getWeaponTemplate",tolua_CenterSpace_Projectile_getWeaponTemplate00);
   tolua_function(tolua_S,"getSource",tolua_CenterSpace_Projectile_getSource00);
   tolua_function(tolua_S,"setSource",tolua_CenterSpace_Projectile_setSource00);
   tolua_function(tolua_S,"applyWarhead",tolua_CenterSpace_Projectile_applyWarhead00);
   tolua_function(tolua_S,"projectileAdded",tolua_CenterSpace_Projectile_projectileAdded00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BeamProjectile","BeamProjectile","Projectile",tolua_collect_BeamProjectile);
  #else
  tolua_cclass(tolua_S,"BeamProjectile","BeamProjectile","Projectile",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BeamProjectile");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BeamProjectile_delete00);
   tolua_function(tolua_S,"getBeamProjectileTemplate",tolua_CenterSpace_BeamProjectile_getBeamProjectileTemplate00);
   tolua_function(tolua_S,"getTimeElapsed",tolua_CenterSpace_BeamProjectile_getTimeElapsed00);
   tolua_function(tolua_S,"projectileAdded",tolua_CenterSpace_BeamProjectile_projectileAdded00);
   tolua_function(tolua_S,"update",tolua_CenterSpace_BeamProjectile_update00);
   tolua_function(tolua_S,"isVisible",tolua_CenterSpace_BeamProjectile_isVisible00);
   tolua_function(tolua_S,"setVisible",tolua_CenterSpace_BeamProjectile_setVisible00);
   tolua_function(tolua_S,"isCloserThan",tolua_CenterSpace_BeamProjectile_isCloserThan00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PhysicalProjectile","PhysicalProjectile","Projectile",tolua_collect_PhysicalProjectile);
  #else
  tolua_cclass(tolua_S,"PhysicalProjectile","PhysicalProjectile","Projectile",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PhysicalProjectile");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PhysicalProjectile_delete00);
   tolua_function(tolua_S,"getPhysicalProjectileTemplate",tolua_CenterSpace_PhysicalProjectile_getPhysicalProjectileTemplate00);
   tolua_function(tolua_S,"projectileAdded",tolua_CenterSpace_PhysicalProjectile_projectileAdded00);
   tolua_function(tolua_S,"isVisible",tolua_CenterSpace_PhysicalProjectile_isVisible00);
   tolua_function(tolua_S,"setVisible",tolua_CenterSpace_PhysicalProjectile_setVisible00);
   tolua_function(tolua_S,"isCloserThan",tolua_CenterSpace_PhysicalProjectile_isCloserThan00);
   tolua_function(tolua_S,"getWorldTransform",tolua_CenterSpace_PhysicalProjectile_getWorldTransform00);
   tolua_function(tolua_S,"setWorldTransform",tolua_CenterSpace_PhysicalProjectile_setWorldTransform00);
   tolua_function(tolua_S,"getNode",tolua_CenterSpace_PhysicalProjectile_getNode00);
   tolua_function(tolua_S,"setNode",tolua_CenterSpace_PhysicalProjectile_setNode00);
   tolua_function(tolua_S,"getEntity",tolua_CenterSpace_PhysicalProjectile_getEntity00);
   tolua_function(tolua_S,"setEntity",tolua_CenterSpace_PhysicalProjectile_setEntity00);
   tolua_variable(tolua_S,"MaxProjectileLifetime",tolua_get_PhysicalProjectile_MaxProjectileLifetime,NULL);
   tolua_variable(tolua_S,"__btMotionState__",tolua_get_PhysicalProjectile___btMotionState__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AIPreBattleState","AIPreBattleState","",tolua_collect_AIPreBattleState);
  #else
  tolua_cclass(tolua_S,"AIPreBattleState","AIPreBattleState","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AIPreBattleState");
   tolua_function(tolua_S,"new",tolua_CenterSpace_AIPreBattleState_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_AIPreBattleState_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_AIPreBattleState_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AIPreBattleState_delete00);
   tolua_function(tolua_S,"getEnemyAIGroups",tolua_CenterSpace_AIPreBattleState_getEnemyAIGroups00);
   tolua_function(tolua_S,"setEnemyAIGroups",tolua_CenterSpace_AIPreBattleState_setEnemyAIGroups00);
   tolua_function(tolua_S,"addEnemyAIGroup",tolua_CenterSpace_AIPreBattleState_addEnemyAIGroup00);
   tolua_function(tolua_S,"getAllMCUPlacements",tolua_CenterSpace_AIPreBattleState_getAllMCUPlacements00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Mission","Mission","",tolua_collect_Mission);
  #else
  tolua_cclass(tolua_S,"Mission","Mission","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Mission");
   tolua_function(tolua_S,"new",tolua_CenterSpace_Mission_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_Mission_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_Mission_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_Mission_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_Mission_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_Mission_new01_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_Mission_new02);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_Mission_new02_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_Mission_new02_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_Mission_delete00);
   tolua_function(tolua_S,"getId",tolua_CenterSpace_Mission_getId00);
   tolua_function(tolua_S,"setId",tolua_CenterSpace_Mission_setId00);
   tolua_function(tolua_S,"getName",tolua_CenterSpace_Mission_getName00);
   tolua_function(tolua_S,"setName",tolua_CenterSpace_Mission_setName00);
   tolua_function(tolua_S,"getTerrainTemplate",tolua_CenterSpace_Mission_getTerrainTemplate00);
   tolua_function(tolua_S,"setTerrainTemplate",tolua_CenterSpace_Mission_setTerrainTemplate00);
   tolua_function(tolua_S,"getFactionHubTemplate",tolua_CenterSpace_Mission_getFactionHubTemplate00);
   tolua_function(tolua_S,"setFactionHubTemplate",tolua_CenterSpace_Mission_setFactionHubTemplate00);
   tolua_function(tolua_S,"getSideLength",tolua_CenterSpace_Mission_getSideLength00);
   tolua_function(tolua_S,"setSideLength",tolua_CenterSpace_Mission_setSideLength00);
   tolua_function(tolua_S,"getRequiredRank",tolua_CenterSpace_Mission_getRequiredRank00);
   tolua_function(tolua_S,"setRequiredRank",tolua_CenterSpace_Mission_setRequiredRank00);
   tolua_function(tolua_S,"getMissionScriptFilename",tolua_CenterSpace_Mission_getMissionScriptFilename00);
   tolua_function(tolua_S,"setMissionScriptFilename",tolua_CenterSpace_Mission_setMissionScriptFilename00);
   tolua_function(tolua_S,"getTerrainGenerationFilename",tolua_CenterSpace_Mission_getTerrainGenerationFilename00);
   tolua_function(tolua_S,"setTerrainGenerationFilename",tolua_CenterSpace_Mission_setTerrainGenerationFilename00);
   tolua_function(tolua_S,"getTerrainGenerationEntryPoint",tolua_CenterSpace_Mission_getTerrainGenerationEntryPoint00);
   tolua_function(tolua_S,"setTerrainGenerationEntryPoint",tolua_CenterSpace_Mission_setTerrainGenerationEntryPoint00);
   tolua_function(tolua_S,"getEnemyGenerationFilename",tolua_CenterSpace_Mission_getEnemyGenerationFilename00);
   tolua_function(tolua_S,"setEnemyGenerationFilename",tolua_CenterSpace_Mission_setEnemyGenerationFilename00);
   tolua_function(tolua_S,"getEnemyGenerationEntryPoint",tolua_CenterSpace_Mission_getEnemyGenerationEntryPoint00);
   tolua_function(tolua_S,"setEnemyGenerationEntryPoint",tolua_CenterSpace_Mission_setEnemyGenerationEntryPoint00);
   tolua_function(tolua_S,"getPlacementFilename",tolua_CenterSpace_Mission_getPlacementFilename00);
   tolua_function(tolua_S,"setPlacementFilename",tolua_CenterSpace_Mission_setPlacementFilename00);
   tolua_function(tolua_S,"getPlayerPlacementEntryPoint",tolua_CenterSpace_Mission_getPlayerPlacementEntryPoint00);
   tolua_function(tolua_S,"setPlayerPlacementEntryPoint",tolua_CenterSpace_Mission_setPlayerPlacementEntryPoint00);
   tolua_function(tolua_S,"getEnemyPlacementEntryPoint",tolua_CenterSpace_Mission_getEnemyPlacementEntryPoint00);
   tolua_function(tolua_S,"setEnemyPlacementEntryPoint",tolua_CenterSpace_Mission_setEnemyPlacementEntryPoint00);
   tolua_function(tolua_S,"getPlayerLocationX",tolua_CenterSpace_Mission_getPlayerLocationX00);
   tolua_function(tolua_S,"setPlayerLocationX",tolua_CenterSpace_Mission_setPlayerLocationX00);
   tolua_function(tolua_S,"getPlayerLocationZ",tolua_CenterSpace_Mission_getPlayerLocationZ00);
   tolua_function(tolua_S,"setPlayerLocationZ",tolua_CenterSpace_Mission_setPlayerLocationZ00);
   tolua_function(tolua_S,"getEnemy1LocationX",tolua_CenterSpace_Mission_getEnemy1LocationX00);
   tolua_function(tolua_S,"setEnemy1LocationX",tolua_CenterSpace_Mission_setEnemy1LocationX00);
   tolua_function(tolua_S,"getEnemy1LocationZ",tolua_CenterSpace_Mission_getEnemy1LocationZ00);
   tolua_function(tolua_S,"setEnemy1LocationZ",tolua_CenterSpace_Mission_setEnemy1LocationZ00);
   tolua_function(tolua_S,"getEnemy2LocationX",tolua_CenterSpace_Mission_getEnemy2LocationX00);
   tolua_function(tolua_S,"setEnemy2LocationX",tolua_CenterSpace_Mission_setEnemy2LocationX00);
   tolua_function(tolua_S,"getEnemy2LocationZ",tolua_CenterSpace_Mission_getEnemy2LocationZ00);
   tolua_function(tolua_S,"setEnemy2LocationZ",tolua_CenterSpace_Mission_setEnemy2LocationZ00);
   tolua_function(tolua_S,"getLuaParam1",tolua_CenterSpace_Mission_getLuaParam100);
   tolua_function(tolua_S,"setLuaParam1",tolua_CenterSpace_Mission_setLuaParam100);
   tolua_function(tolua_S,"getLuaParam2",tolua_CenterSpace_Mission_getLuaParam200);
   tolua_function(tolua_S,"setLuaParam2",tolua_CenterSpace_Mission_setLuaParam200);
   tolua_function(tolua_S,"getLuaParam3",tolua_CenterSpace_Mission_getLuaParam300);
   tolua_function(tolua_S,"setLuaParam3",tolua_CenterSpace_Mission_setLuaParam300);
   tolua_function(tolua_S,"getLuaParam4",tolua_CenterSpace_Mission_getLuaParam400);
   tolua_function(tolua_S,"setLuaParam4",tolua_CenterSpace_Mission_setLuaParam400);
   tolua_function(tolua_S,"getPlayerPreBattleStates",tolua_CenterSpace_Mission_getPlayerPreBattleStates00);
   tolua_function(tolua_S,"setPlayerPreBattleStates",tolua_CenterSpace_Mission_setPlayerPreBattleStates00);
   tolua_function(tolua_S,"isCellOccupied",tolua_CenterSpace_Mission_isCellOccupied00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"RandomMission","RandomMission","Mission",tolua_collect_RandomMission);
  #else
  tolua_cclass(tolua_S,"RandomMission","RandomMission","Mission",NULL);
  #endif
  tolua_beginmodule(tolua_S,"RandomMission");
   tolua_constant(tolua_S,"INSTANT_ACTION",RandomMission::INSTANT_ACTION);
   tolua_function(tolua_S,"new",tolua_CenterSpace_RandomMission_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_RandomMission_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_RandomMission_new00_local);
   tolua_function(tolua_S,"getRandomMissionType",tolua_CenterSpace_RandomMission_getRandomMissionType00);
   tolua_function(tolua_S,"setRandomMissionType",tolua_CenterSpace_RandomMission_setRandomMissionType00);
   tolua_function(tolua_S,"RandomMissionTypeToString",tolua_CenterSpace_RandomMission_RandomMissionTypeToString00);
   tolua_function(tolua_S,"getDescription",tolua_CenterSpace_RandomMission_getDescription00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GridSquareTemplate","GridSquareTemplate","",NULL);
  tolua_beginmodule(tolua_S,"GridSquareTemplate");
   tolua_function(tolua_S,"getX",tolua_CenterSpace_GridSquareTemplate_getX00);
   tolua_function(tolua_S,"getY",tolua_CenterSpace_GridSquareTemplate_getY00);
   tolua_function(tolua_S,"getZ",tolua_CenterSpace_GridSquareTemplate_getZ00);
   tolua_function(tolua_S,"setY",tolua_CenterSpace_GridSquareTemplate_setY00);
   tolua_function(tolua_S,"wasRaised",tolua_CenterSpace_GridSquareTemplate_wasRaised00);
   tolua_function(tolua_S,"setRaised",tolua_CenterSpace_GridSquareTemplate_setRaised00);
   tolua_function(tolua_S,"getSquareType",tolua_CenterSpace_GridSquareTemplate_getSquareType00);
   tolua_function(tolua_S,"setSquareType",tolua_CenterSpace_GridSquareTemplate_setSquareType00);
   tolua_function(tolua_S,"getTerrainChange",tolua_CenterSpace_GridSquareTemplate_getTerrainChange00);
   tolua_function(tolua_S,"setTerrainChange",tolua_CenterSpace_GridSquareTemplate_setTerrainChange00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GridSquareTemplateVector","GridSquareTemplateVector","",NULL);
  tolua_beginmodule(tolua_S,"GridSquareTemplateVector");
   tolua_function(tolua_S,"getSideLength",tolua_CenterSpace_GridSquareTemplateVector_getSideLength00);
   tolua_function(tolua_S,"getGridSquare",tolua_CenterSpace_GridSquareTemplateVector_getGridSquare00);
   tolua_function(tolua_S,"getGridSquare",tolua_CenterSpace_GridSquareTemplateVector_getGridSquare01);
   tolua_function(tolua_S,"setDefaultGridHeight",tolua_CenterSpace_GridSquareTemplateVector_setDefaultGridHeight00);
   tolua_function(tolua_S,"changeSquare",tolua_CenterSpace_GridSquareTemplateVector_changeSquare00);
   tolua_function(tolua_S,"changeSquare",tolua_CenterSpace_GridSquareTemplateVector_changeSquare01);
   tolua_function(tolua_S,"changeSquare",tolua_CenterSpace_GridSquareTemplateVector_changeSquare02);
   tolua_function(tolua_S,"createValleyOrRidge",tolua_CenterSpace_GridSquareTemplateVector_createValleyOrRidge00);
   tolua_function(tolua_S,"createPlateau",tolua_CenterSpace_GridSquareTemplateVector_createPlateau00);
   tolua_function(tolua_S,"getSquaresBetweenPoints",tolua_CenterSpace_GridSquareTemplateVector_getSquaresBetweenPoints00);
   tolua_function(tolua_S,"checkEntireGrid",tolua_CenterSpace_GridSquareTemplateVector_checkEntireGrid00);
   tolua_function(tolua_S,"fixSquareType",tolua_CenterSpace_GridSquareTemplateVector_fixSquareType00);
   tolua_function(tolua_S,"checkSurroundings",tolua_CenterSpace_GridSquareTemplateVector_checkSurroundings00);
   tolua_function(tolua_S,"adjustHeight",tolua_CenterSpace_GridSquareTemplateVector_adjustHeight00);
   tolua_function(tolua_S,"fixType",tolua_CenterSpace_GridSquareTemplateVector_fixType00);
   tolua_function(tolua_S,"startRecursiveSubdivision",tolua_CenterSpace_GridSquareTemplateVector_startRecursiveSubdivision00);
   tolua_function(tolua_S,"writeToFile",tolua_CenterSpace_GridSquareTemplateVector_writeToFile00);
   tolua_function(tolua_S,"loadFromFile",tolua_CenterSpace_GridSquareTemplateVector_loadFromFile00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"VL_NEG_X",VL_NEG_X);
  tolua_constant(tolua_S,"VL_POS_X",VL_POS_X);
  tolua_constant(tolua_S,"VL_NEG_Y",VL_NEG_Y);
  tolua_constant(tolua_S,"VL_POS_Y",VL_POS_Y);
  tolua_constant(tolua_S,"VL_UPPER_Y",VL_UPPER_Y);
  tolua_constant(tolua_S,"VL_NEG_Z",VL_NEG_Z);
  tolua_constant(tolua_S,"VL_POS_Z",VL_POS_Z);
  tolua_constant(tolua_S,"CF_NA",CF_NA);
  tolua_constant(tolua_S,"CF_NEG_Z",CF_NEG_Z);
  tolua_constant(tolua_S,"CF_POS_Z",CF_POS_Z);
  tolua_constant(tolua_S,"CF_NEG_X",CF_NEG_X);
  tolua_constant(tolua_S,"CF_POS_X",CF_POS_X);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GridSquare","GridSquare","",tolua_collect_GridSquare);
  #else
  tolua_cclass(tolua_S,"GridSquare","GridSquare","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GridSquare");
   tolua_function(tolua_S,"new",tolua_CenterSpace_GridSquare_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GridSquare_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GridSquare_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GridSquare_delete00);
   tolua_function(tolua_S,"computeIndices",tolua_CenterSpace_GridSquare_computeIndices00);
   tolua_function(tolua_S,"reset",tolua_CenterSpace_GridSquare_reset00);
   tolua_function(tolua_S,"hasMoreIndices",tolua_CenterSpace_GridSquare_hasMoreIndices00);
   tolua_function(tolua_S,"getNextIndex",tolua_CenterSpace_GridSquare_getNextIndex00);
   tolua_function(tolua_S,"moveNextIndex",tolua_CenterSpace_GridSquare_moveNextIndex00);
   tolua_function(tolua_S,"getCenterX",tolua_CenterSpace_GridSquare_getCenterX00);
   tolua_function(tolua_S,"getCenterY",tolua_CenterSpace_GridSquare_getCenterY00);
   tolua_function(tolua_S,"getCenterZ",tolua_CenterSpace_GridSquare_getCenterZ00);
   tolua_function(tolua_S,"getTextureStep",tolua_CenterSpace_GridSquare_getTextureStep00);
   tolua_function(tolua_S,"getVertices",tolua_CenterSpace_GridSquare_getVertices00);
   tolua_function(tolua_S,"addVertex",tolua_CenterSpace_GridSquare_addVertex00);
   tolua_function(tolua_S,"findVertex",tolua_CenterSpace_GridSquare_findVertex00);
   tolua_function(tolua_S,"findVertex",tolua_CenterSpace_GridSquare_findVertex01);
   tolua_function(tolua_S,"findIndex",tolua_CenterSpace_GridSquare_findIndex00);
   tolua_function(tolua_S,"setAlphaSplatCoords",tolua_CenterSpace_GridSquare_setAlphaSplatCoords00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TexturedVertex","TexturedVertex","",tolua_collect_TexturedVertex);
  #else
  tolua_cclass(tolua_S,"TexturedVertex","TexturedVertex","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TexturedVertex");
   tolua_function(tolua_S,"new",tolua_CenterSpace_TexturedVertex_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_TexturedVertex_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_TexturedVertex_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_TexturedVertex_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_TexturedVertex_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_TexturedVertex_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_TexturedVertex_delete00);
   tolua_function(tolua_S,"gotTextureCoords",tolua_CenterSpace_TexturedVertex_gotTextureCoords00);
   tolua_function(tolua_S,"gotTextureCoords",tolua_CenterSpace_TexturedVertex_gotTextureCoords01);
   tolua_function(tolua_S,"getVertexXYZ",tolua_CenterSpace_TexturedVertex_getVertexXYZ00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GridSquareVector","GridSquareVector","",tolua_collect_GridSquareVector);
  #else
  tolua_cclass(tolua_S,"GridSquareVector","GridSquareVector","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GridSquareVector");
   tolua_function(tolua_S,"new",tolua_CenterSpace_GridSquareVector_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GridSquareVector_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GridSquareVector_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GridSquareVector_delete00);
   tolua_function(tolua_S,"initialize",tolua_CenterSpace_GridSquareVector_initialize00);
   tolua_function(tolua_S,"resetGridSquares",tolua_CenterSpace_GridSquareVector_resetGridSquares00);
   tolua_function(tolua_S,"getGridSquare",tolua_CenterSpace_GridSquareVector_getGridSquare00);
   tolua_function(tolua_S,"computeIndices",tolua_CenterSpace_GridSquareVector_computeIndices00);
   tolua_function(tolua_S,"hasMoreVertices",tolua_CenterSpace_GridSquareVector_hasMoreVertices00);
   tolua_function(tolua_S,"getNextVertex",tolua_CenterSpace_GridSquareVector_getNextVertex00);
   tolua_function(tolua_S,"hasMoreIndices",tolua_CenterSpace_GridSquareVector_hasMoreIndices00);
   tolua_function(tolua_S,"getNextIndex",tolua_CenterSpace_GridSquareVector_getNextIndex00);
   tolua_function(tolua_S,"insertVertex",tolua_CenterSpace_GridSquareVector_insertVertex00);
   tolua_function(tolua_S,"insertVertex",tolua_CenterSpace_GridSquareVector_insertVertex01);
   tolua_function(tolua_S,"getVertex",tolua_CenterSpace_GridSquareVector_getVertex00);
   tolua_function(tolua_S,"updateTextureCoordinates",tolua_CenterSpace_GridSquareVector_updateTextureCoordinates00);
   tolua_function(tolua_S,"getBattlefield",tolua_CenterSpace_GridSquareVector_getBattlefield00);
   tolua_function(tolua_S,"getBattlefieldGrid",tolua_CenterSpace_GridSquareVector_getBattlefieldGrid00);
   tolua_function(tolua_S,"getGridSquareTemplateVector",tolua_CenterSpace_GridSquareVector_getGridSquareTemplateVector00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"BattlefieldGridCell","BattlefieldGridCell","",tolua_collect_BattlefieldGridCell);
  #else
  tolua_cclass(tolua_S,"BattlefieldGridCell","BattlefieldGridCell","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"BattlefieldGridCell");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_BattlefieldGridCell_delete00);
   tolua_function(tolua_S,"occupyCell",tolua_CenterSpace_BattlefieldGridCell_occupyCell00);
   tolua_function(tolua_S,"leaveCell",tolua_CenterSpace_BattlefieldGridCell_leaveCell00);
   tolua_function(tolua_S,"isOccupied",tolua_CenterSpace_BattlefieldGridCell_isOccupied00);
   tolua_function(tolua_S,"getOccupant",tolua_CenterSpace_BattlefieldGridCell_getOccupant00);
   tolua_function(tolua_S,"getRoughness",tolua_CenterSpace_BattlefieldGridCell_getRoughness00);
   tolua_function(tolua_S,"setRoughness",tolua_CenterSpace_BattlefieldGridCell_setRoughness00);
   tolua_function(tolua_S,"getSquareType",tolua_CenterSpace_BattlefieldGridCell_getSquareType00);
   tolua_function(tolua_S,"setSquareType",tolua_CenterSpace_BattlefieldGridCell_setSquareType00);
   tolua_function(tolua_S,"isPassable",tolua_CenterSpace_BattlefieldGridCell_isPassable00);
   tolua_function(tolua_S,"setPassable",tolua_CenterSpace_BattlefieldGridCell_setPassable00);
   tolua_function(tolua_S,"getX",tolua_CenterSpace_BattlefieldGridCell_getX00);
   tolua_function(tolua_S,"getY",tolua_CenterSpace_BattlefieldGridCell_getY00);
   tolua_function(tolua_S,"getZ",tolua_CenterSpace_BattlefieldGridCell_getZ00);
   tolua_function(tolua_S,"isPointInside",tolua_CenterSpace_BattlefieldGridCell_isPointInside00);
   tolua_function(tolua_S,"getMiddle",tolua_CenterSpace_BattlefieldGridCell_getMiddle00);
   tolua_function(tolua_S,"getMiddle2",tolua_CenterSpace_BattlefieldGridCell_getMiddle200);
   tolua_function(tolua_S,"getMiddleFloor",tolua_CenterSpace_BattlefieldGridCell_getMiddleFloor00);
   tolua_function(tolua_S,"getMovementCost",tolua_CenterSpace_BattlefieldGridCell_getMovementCost00);
   tolua_function(tolua_S,"getNegXNegZVertex",tolua_CenterSpace_BattlefieldGridCell_getNegXNegZVertex00);
   tolua_function(tolua_S,"setNegXNegZVertex",tolua_CenterSpace_BattlefieldGridCell_setNegXNegZVertex00);
   tolua_function(tolua_S,"getNegXPosZVertex",tolua_CenterSpace_BattlefieldGridCell_getNegXPosZVertex00);
   tolua_function(tolua_S,"setNegXPosZVertex",tolua_CenterSpace_BattlefieldGridCell_setNegXPosZVertex00);
   tolua_function(tolua_S,"getPosXNegZVertex",tolua_CenterSpace_BattlefieldGridCell_getPosXNegZVertex00);
   tolua_function(tolua_S,"setPosXNegZVertex",tolua_CenterSpace_BattlefieldGridCell_setPosXNegZVertex00);
   tolua_function(tolua_S,"getPosXPosZVertex",tolua_CenterSpace_BattlefieldGridCell_getPosXPosZVertex00);
   tolua_function(tolua_S,"setPosXPosZVertex",tolua_CenterSpace_BattlefieldGridCell_setPosXPosZVertex00);
   tolua_function(tolua_S,"isMarkedToBeOccupied",tolua_CenterSpace_BattlefieldGridCell_isMarkedToBeOccupied00);
   tolua_function(tolua_S,"setMarkedToBeOccupied",tolua_CenterSpace_BattlefieldGridCell_setMarkedToBeOccupied00);
   tolua_function(tolua_S,"isAvailable",tolua_CenterSpace_BattlefieldGridCell_isAvailable00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"BattlefieldGrid","BattlefieldGrid","",NULL);
  tolua_beginmodule(tolua_S,"BattlefieldGrid");
   tolua_function(tolua_S,"getTerrainTemplate",tolua_CenterSpace_BattlefieldGrid_getTerrainTemplate00);
   tolua_function(tolua_S,"setTerrainTemplate",tolua_CenterSpace_BattlefieldGrid_setTerrainTemplate00);
   tolua_function(tolua_S,"getSideLength",tolua_CenterSpace_BattlefieldGrid_getSideLength00);
   tolua_function(tolua_S,"setSideLength",tolua_CenterSpace_BattlefieldGrid_setSideLength00);
   tolua_function(tolua_S,"getBattlefield",tolua_CenterSpace_BattlefieldGrid_getBattlefield00);
   tolua_function(tolua_S,"setBattlefield",tolua_CenterSpace_BattlefieldGrid_setBattlefield00);
   tolua_function(tolua_S,"getMaxRoughness",tolua_CenterSpace_BattlefieldGrid_getMaxRoughness00);
   tolua_function(tolua_S,"setMaxRoughness",tolua_CenterSpace_BattlefieldGrid_setMaxRoughness00);
   tolua_function(tolua_S,"getMaxVertexHeight",tolua_CenterSpace_BattlefieldGrid_getMaxVertexHeight00);
   tolua_function(tolua_S,"setMaxVertexHeight",tolua_CenterSpace_BattlefieldGrid_setMaxVertexHeight00);
   tolua_function(tolua_S,"getGridCell",tolua_CenterSpace_BattlefieldGrid_getGridCell00);
   tolua_function(tolua_S,"getGridCell",tolua_CenterSpace_BattlefieldGrid_getGridCell01);
   tolua_function(tolua_S,"getGridCell",tolua_CenterSpace_BattlefieldGrid_getGridCell02);
   tolua_function(tolua_S,"seedEmptyGridCellSearch",tolua_CenterSpace_BattlefieldGrid_seedEmptyGridCellSearch00);
   tolua_function(tolua_S,"getNextEmptyGridCell",tolua_CenterSpace_BattlefieldGrid_getNextEmptyGridCell00);
   tolua_function(tolua_S,"getCloserGridCell",tolua_CenterSpace_BattlefieldGrid_getCloserGridCell00);
   tolua_function(tolua_S,"getCloserGridCell",tolua_CenterSpace_BattlefieldGrid_getCloserGridCell01);
   tolua_function(tolua_S,"getCloserGridCell",tolua_CenterSpace_BattlefieldGrid_getCloserGridCell02);
   tolua_function(tolua_S,"reset",tolua_CenterSpace_BattlefieldGrid_reset00);
   tolua_function(tolua_S,"setGridCell",tolua_CenterSpace_BattlefieldGrid_setGridCell00);
   tolua_function(tolua_S,"getGridSquareTemplateVector",tolua_CenterSpace_BattlefieldGrid_getGridSquareTemplateVector00);
   tolua_function(tolua_S,"setGridSquareTemplateVector",tolua_CenterSpace_BattlefieldGrid_setGridSquareTemplateVector00);
   tolua_function(tolua_S,"isCentre",tolua_CenterSpace_BattlefieldGrid_isCentre00);
   tolua_function(tolua_S,"getSquareDistance",tolua_CenterSpace_BattlefieldGrid_getSquareDistance00);
   tolua_function(tolua_S,"getMission",tolua_CenterSpace_BattlefieldGrid_getMission00);
   tolua_function(tolua_S,"setMission",tolua_CenterSpace_BattlefieldGrid_setMission00);
   tolua_function(tolua_S,"isAvailable",tolua_CenterSpace_BattlefieldGrid_isAvailable00);
   tolua_function(tolua_S,"isPassable",tolua_CenterSpace_BattlefieldGrid_isPassable00);
   tolua_function(tolua_S,"isOccupied",tolua_CenterSpace_BattlefieldGrid_isOccupied00);
   tolua_function(tolua_S,"placeMCUs",tolua_CenterSpace_BattlefieldGrid_placeMCUs00);
   tolua_function(tolua_S,"calculateDistance",tolua_CenterSpace_BattlefieldGrid_calculateDistance00);
   tolua_function(tolua_S,"calculateSquareDistance",tolua_CenterSpace_BattlefieldGrid_calculateSquareDistance00);
   tolua_variable(tolua_S,"UnitSize",tolua_get_BattlefieldGrid_UnitSize,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PathFindingNode","PathFindingNode","",tolua_collect_PathFindingNode);
  #else
  tolua_cclass(tolua_S,"PathFindingNode","PathFindingNode","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PathFindingNode");
   tolua_function(tolua_S,"new",tolua_CenterSpace_PathFindingNode_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PathFindingNode_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PathFindingNode_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_PathFindingNode_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PathFindingNode_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PathFindingNode_new01_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_PathFindingNode_new02);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PathFindingNode_new02_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PathFindingNode_new02_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PathFindingNode_delete00);
   tolua_function(tolua_S,"getParent",tolua_CenterSpace_PathFindingNode_getParent00);
   tolua_function(tolua_S,"setParent",tolua_CenterSpace_PathFindingNode_setParent00);
   tolua_function(tolua_S,"getMovementCost",tolua_CenterSpace_PathFindingNode_getMovementCost00);
   tolua_function(tolua_S,"setMovementCost",tolua_CenterSpace_PathFindingNode_setMovementCost00);
   tolua_function(tolua_S,"getTotalMovementCost",tolua_CenterSpace_PathFindingNode_getTotalMovementCost00);
   tolua_function(tolua_S,"setTotalMovementCost",tolua_CenterSpace_PathFindingNode_setTotalMovementCost00);
   tolua_function(tolua_S,"getEstimatedCostToGoal",tolua_CenterSpace_PathFindingNode_getEstimatedCostToGoal00);
   tolua_function(tolua_S,"setEstimatedCostToGoal",tolua_CenterSpace_PathFindingNode_setEstimatedCostToGoal00);
   tolua_function(tolua_S,"getWholePathCost",tolua_CenterSpace_PathFindingNode_getWholePathCost00);
   tolua_function(tolua_S,"getX",tolua_CenterSpace_PathFindingNode_getX00);
   tolua_function(tolua_S,"setX",tolua_CenterSpace_PathFindingNode_setX00);
   tolua_function(tolua_S,"getZ",tolua_CenterSpace_PathFindingNode_getZ00);
   tolua_function(tolua_S,"setZ",tolua_CenterSpace_PathFindingNode_setZ00);
   tolua_function(tolua_S,"getActual",tolua_CenterSpace_PathFindingNode_getActual00);
   tolua_function(tolua_S,"setActual",tolua_CenterSpace_PathFindingNode_setActual00);
   tolua_function(tolua_S,"isDiagonal",tolua_CenterSpace_PathFindingNode_isDiagonal00);
   tolua_function(tolua_S,"isSloped",tolua_CenterSpace_PathFindingNode_isSloped00);
   tolua_function(tolua_S,"isCliff",tolua_CenterSpace_PathFindingNode_isCliff00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PathFindingManager","PathFindingManager","",tolua_collect_PathFindingManager);
  #else
  tolua_cclass(tolua_S,"PathFindingManager","PathFindingManager","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PathFindingManager");
   tolua_function(tolua_S,"new",tolua_CenterSpace_PathFindingManager_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PathFindingManager_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PathFindingManager_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PathFindingManager_delete00);
   tolua_function(tolua_S,"findPath",tolua_CenterSpace_PathFindingManager_findPath00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MCUController","MCUController","MovableEntity",tolua_collect_MCUController);
  #else
  tolua_cclass(tolua_S,"MCUController","MCUController","MovableEntity",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MCUController");
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUController_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUController_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUController_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUController_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUController_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUController_new01_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUController_new02);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUController_new02_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUController_new02_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MCUController_delete00);
   tolua_function(tolua_S,"MCUController__startTurn",tolua_CenterSpace_MCUController_MCUController__startTurn00);
   tolua_function(tolua_S,"MCUController__endTurn",tolua_CenterSpace_MCUController_MCUController__endTurn00);
   tolua_function(tolua_S,"getEntity",tolua_CenterSpace_MCUController_getEntity00);
   tolua_function(tolua_S,"setEntity",tolua_CenterSpace_MCUController_setEntity00);
   tolua_function(tolua_S,"getMCUAnimationController",tolua_CenterSpace_MCUController_getMCUAnimationController00);
   tolua_function(tolua_S,"setMCUAnimationController",tolua_CenterSpace_MCUController_setMCUAnimationController00);
   tolua_function(tolua_S,"getKinematicCharacterController",tolua_CenterSpace_MCUController_getKinematicCharacterController00);
   tolua_function(tolua_S,"setKinematicCharacterController",tolua_CenterSpace_MCUController_setKinematicCharacterController00);
   tolua_function(tolua_S,"getMechanizedCombatUnit",tolua_CenterSpace_MCUController_getMechanizedCombatUnit00);
   tolua_function(tolua_S,"setMechanizedCombatUnit",tolua_CenterSpace_MCUController_setMechanizedCombatUnit00);
   tolua_function(tolua_S,"getPlayerBattleState",tolua_CenterSpace_MCUController_getPlayerBattleState00);
   tolua_function(tolua_S,"setPlayerBattleState",tolua_CenterSpace_MCUController_setPlayerBattleState00);
   tolua_function(tolua_S,"getCurrentLocation",tolua_CenterSpace_MCUController_getCurrentLocation00);
   tolua_function(tolua_S,"setCurrentLocation",tolua_CenterSpace_MCUController_setCurrentLocation00);
   tolua_function(tolua_S,"getShield",tolua_CenterSpace_MCUController_getShield00);
   tolua_function(tolua_S,"setShield",tolua_CenterSpace_MCUController_setShield00);
   tolua_function(tolua_S,"getCurrentPath",tolua_CenterSpace_MCUController_getCurrentPath00);
   tolua_function(tolua_S,"setCurrentPath",tolua_CenterSpace_MCUController_setCurrentPath00);
   tolua_function(tolua_S,"getCurrentGoal",tolua_CenterSpace_MCUController_getCurrentGoal00);
   tolua_function(tolua_S,"moveAlongPath",tolua_CenterSpace_MCUController_moveAlongPath00);
   tolua_function(tolua_S,"isMoving",tolua_CenterSpace_MCUController_isMoving00);
   tolua_function(tolua_S,"stopMoving",tolua_CenterSpace_MCUController_stopMoving00);
   tolua_function(tolua_S,"giveStopOrder",tolua_CenterSpace_MCUController_giveStopOrder00);
   tolua_function(tolua_S,"lowMovementEnergy",tolua_CenterSpace_MCUController_lowMovementEnergy00);
   tolua_function(tolua_S,"hasPath",tolua_CenterSpace_MCUController_hasPath00);
   tolua_function(tolua_S,"hasPath",tolua_CenterSpace_MCUController_hasPath01);
   tolua_function(tolua_S,"getGrid",tolua_CenterSpace_MCUController_getGrid00);
   tolua_function(tolua_S,"setBattlefieldGrid",tolua_CenterSpace_MCUController_setBattlefieldGrid00);
   tolua_function(tolua_S,"hasTarget",tolua_CenterSpace_MCUController_hasTarget00);
   tolua_function(tolua_S,"rangeToTarget",tolua_CenterSpace_MCUController_rangeToTarget00);
   tolua_function(tolua_S,"getCurrentTarget",tolua_CenterSpace_MCUController_getCurrentTarget00);
   tolua_function(tolua_S,"setCurrentTarget",tolua_CenterSpace_MCUController_setCurrentTarget00);
   tolua_function(tolua_S,"targetedBy",tolua_CenterSpace_MCUController_targetedBy00);
   tolua_function(tolua_S,"noLongerTargetedBy",tolua_CenterSpace_MCUController_noLongerTargetedBy00);
   tolua_function(tolua_S,"targetDestroyed",tolua_CenterSpace_MCUController_targetDestroyed00);
   tolua_function(tolua_S,"getAIGroup",tolua_CenterSpace_MCUController_getAIGroup00);
   tolua_function(tolua_S,"setAIGroup",tolua_CenterSpace_MCUController_setAIGroup00);
   tolua_function(tolua_S,"getBattlefieldID",tolua_CenterSpace_MCUController_getBattlefieldID00);
   tolua_function(tolua_S,"setBattlefieldID",tolua_CenterSpace_MCUController_setBattlefieldID00);
   tolua_function(tolua_S,"isActive",tolua_CenterSpace_MCUController_isActive00);
   tolua_function(tolua_S,"setActive",tolua_CenterSpace_MCUController_setActive00);
   tolua_function(tolua_S,"isVisible",tolua_CenterSpace_MCUController_isVisible00);
   tolua_function(tolua_S,"setVisible",tolua_CenterSpace_MCUController_setVisible00);
   tolua_function(tolua_S,"isCloserThan",tolua_CenterSpace_MCUController_isCloserThan00);
   tolua_function(tolua_S,"isRadarVisible",tolua_CenterSpace_MCUController_isRadarVisible00);
   tolua_function(tolua_S,"setRadarVisible",tolua_CenterSpace_MCUController_setRadarVisible00);
   tolua_function(tolua_S,"getFiringBone",tolua_CenterSpace_MCUController_getFiringBone00);
   tolua_function(tolua_S,"canFire",tolua_CenterSpace_MCUController_canFire00);
   tolua_function(tolua_S,"canFire",tolua_CenterSpace_MCUController_canFire01);
   tolua_function(tolua_S,"canFireAtLeastOneWeapon",tolua_CenterSpace_MCUController_canFireAtLeastOneWeapon00);
   tolua_function(tolua_S,"canFireUpon",tolua_CenterSpace_MCUController_canFireUpon00);
   tolua_function(tolua_S,"shieldsUp",tolua_CenterSpace_MCUController_shieldsUp00);
   tolua_function(tolua_S,"reachedDestination",tolua_CenterSpace_MCUController_reachedDestination00);
   tolua_function(tolua_S,"beginFiringWeapon",tolua_CenterSpace_MCUController_beginFiringWeapon00);
   tolua_function(tolua_S,"fireWeapon",tolua_CenterSpace_MCUController_fireWeapon00);
   tolua_function(tolua_S,"getBestAntiShieldWeapon",tolua_CenterSpace_MCUController_getBestAntiShieldWeapon00);
   tolua_function(tolua_S,"getBestAntiArmorWeapon",tolua_CenterSpace_MCUController_getBestAntiArmorWeapon00);
   tolua_function(tolua_S,"isFiring",tolua_CenterSpace_MCUController_isFiring00);
   tolua_function(tolua_S,"applyWarhead",tolua_CenterSpace_MCUController_applyWarhead00);
   tolua_function(tolua_S,"weaponFiringComplete",tolua_CenterSpace_MCUController_weaponFiringComplete00);
   tolua_function(tolua_S,"enableAnimations",tolua_CenterSpace_MCUController_enableAnimations00);
   tolua_variable(tolua_S,"Sequence",tolua_get_MCUController_Sequence,tolua_set_MCUController_Sequence);
   tolua_function(tolua_S,"getPosition",tolua_CenterSpace_MCUController_getPosition00);
   tolua_function(tolua_S,"getMiddle",tolua_CenterSpace_MCUController_getMiddle00);
   tolua_function(tolua_S,"getNode",tolua_CenterSpace_MCUController_getNode00);
   tolua_function(tolua_S,"getRemainingReactorPower",tolua_CenterSpace_MCUController_getRemainingReactorPower00);
   tolua_function(tolua_S,"getRemainingBatteryPower",tolua_CenterSpace_MCUController_getRemainingBatteryPower00);
   tolua_function(tolua_S,"getTotalRemainingPower",tolua_CenterSpace_MCUController_getTotalRemainingPower00);
   tolua_function(tolua_S,"drainEnergyFromBattery",tolua_CenterSpace_MCUController_drainEnergyFromBattery00);
   tolua_function(tolua_S,"drainEnergyFromReactor",tolua_CenterSpace_MCUController_drainEnergyFromReactor00);
   tolua_function(tolua_S,"drainWeaponEnergy",tolua_CenterSpace_MCUController_drainWeaponEnergy00);
   tolua_function(tolua_S,"componentDestroyed",tolua_CenterSpace_MCUController_componentDestroyed00);
   tolua_function(tolua_S,"startDestructionSequence",tolua_CenterSpace_MCUController_startDestructionSequence00);
   tolua_function(tolua_S,"destroy",tolua_CenterSpace_MCUController_destroy00);
   tolua_function(tolua_S,"getAllComponents",tolua_CenterSpace_MCUController_getAllComponents00);
   tolua_function(tolua_S,"updateFogOfWar",tolua_CenterSpace_MCUController_updateFogOfWar00);
   tolua_function(tolua_S,"renderFogOfWar",tolua_CenterSpace_MCUController_renderFogOfWar00);
   tolua_function(tolua_S,"canSee",tolua_CenterSpace_MCUController_canSee00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_MCUController_getGuiValues00);
   tolua_function(tolua_S,"updateGuiData",tolua_CenterSpace_MCUController_updateGuiData00);
   tolua_function(tolua_S,"getShortestWeaponRange",tolua_CenterSpace_MCUController_getShortestWeaponRange00);
   tolua_function(tolua_S,"getLongestWeaponRange",tolua_CenterSpace_MCUController_getLongestWeaponRange00);
   tolua_function(tolua_S,"calculateAccuracy",tolua_CenterSpace_MCUController_calculateAccuracy00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AIGroup","AIGroup","",tolua_collect_AIGroup);
  #else
  tolua_cclass(tolua_S,"AIGroup","AIGroup","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AIGroup");
   tolua_function(tolua_S,"new",tolua_CenterSpace_AIGroup_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_AIGroup_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_AIGroup_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_AIGroup_delete00);
   tolua_function(tolua_S,"getAverageMCUXPos",tolua_CenterSpace_AIGroup_getAverageMCUXPos00);
   tolua_function(tolua_S,"getAverageMCUZPos",tolua_CenterSpace_AIGroup_getAverageMCUZPos00);
   tolua_function(tolua_S,"getMCUs",tolua_CenterSpace_AIGroup_getMCUs00);
   tolua_function(tolua_S,"setMCUs",tolua_CenterSpace_AIGroup_setMCUs00);
   tolua_function(tolua_S,"getCurrentGoal",tolua_CenterSpace_AIGroup_getCurrentGoal00);
   tolua_function(tolua_S,"setCurrentGoal",tolua_CenterSpace_AIGroup_setCurrentGoal00);
   tolua_function(tolua_S,"hasMoreMCUControllers",tolua_CenterSpace_AIGroup_hasMoreMCUControllers00);
   tolua_function(tolua_S,"getNextMCUController",tolua_CenterSpace_AIGroup_getNextMCUController00);
   tolua_function(tolua_S,"getLuaMCUDeque",tolua_CenterSpace_AIGroup_getLuaMCUDeque00);
   tolua_function(tolua_S,"getMCUPlacements",tolua_CenterSpace_AIGroup_getMCUPlacements00);
   tolua_function(tolua_S,"addMCUPlacement",tolua_CenterSpace_AIGroup_addMCUPlacement00);
   tolua_function(tolua_S,"setMCUPlacements",tolua_CenterSpace_AIGroup_setMCUPlacements00);
   tolua_function(tolua_S,"getPlayerBattleState",tolua_CenterSpace_AIGroup_getPlayerBattleState00);
   tolua_function(tolua_S,"setPlayerBattleState",tolua_CenterSpace_AIGroup_setPlayerBattleState00);
   tolua_function(tolua_S,"addMCUController",tolua_CenterSpace_AIGroup_addMCUController00);
   tolua_function(tolua_S,"hasFinishedTurn",tolua_CenterSpace_AIGroup_hasFinishedTurn00);
   tolua_function(tolua_S,"startTurn",tolua_CenterSpace_AIGroup_startTurn00);
   tolua_function(tolua_S,"hasAttackOrder",tolua_CenterSpace_AIGroup_hasAttackOrder00);
   tolua_function(tolua_S,"getGroupAttackOrder",tolua_CenterSpace_AIGroup_getGroupAttackOrder00);
   tolua_function(tolua_S,"setGroupAttackOrder",tolua_CenterSpace_AIGroup_setGroupAttackOrder00);
   tolua_function(tolua_S,"giveGroupAttackOrder",tolua_CenterSpace_AIGroup_giveGroupAttackOrder00);
   tolua_function(tolua_S,"executeGroupAttackOrder",tolua_CenterSpace_AIGroup_executeGroupAttackOrder00);
   tolua_function(tolua_S,"executeGroupAttackOrderIfNecessary",tolua_CenterSpace_AIGroup_executeGroupAttackOrderIfNecessary00);
   tolua_function(tolua_S,"finishedGroupAttackOrder",tolua_CenterSpace_AIGroup_finishedGroupAttackOrder00);
   tolua_function(tolua_S,"hasMoveOrder",tolua_CenterSpace_AIGroup_hasMoveOrder00);
   tolua_function(tolua_S,"getGroupMoveOrder",tolua_CenterSpace_AIGroup_getGroupMoveOrder00);
   tolua_function(tolua_S,"setGroupMoveOrder",tolua_CenterSpace_AIGroup_setGroupMoveOrder00);
   tolua_function(tolua_S,"giveGroupMoveOrder",tolua_CenterSpace_AIGroup_giveGroupMoveOrder00);
   tolua_function(tolua_S,"finishedGroupMoveOrder",tolua_CenterSpace_AIGroup_finishedGroupMoveOrder00);
   tolua_function(tolua_S,"hasMoveToAttackOrder",tolua_CenterSpace_AIGroup_hasMoveToAttackOrder00);
   tolua_function(tolua_S,"getGroupMoveToAttackOrder",tolua_CenterSpace_AIGroup_getGroupMoveToAttackOrder00);
   tolua_function(tolua_S,"setGroupMoveToAttackOrder",tolua_CenterSpace_AIGroup_setGroupMoveToAttackOrder00);
   tolua_function(tolua_S,"giveGroupMoveToAttackOrder",tolua_CenterSpace_AIGroup_giveGroupMoveToAttackOrder00);
   tolua_function(tolua_S,"finishedGroupMoveToAttackOrder",tolua_CenterSpace_AIGroup_finishedGroupMoveToAttackOrder00);
   tolua_function(tolua_S,"hasOrders",tolua_CenterSpace_AIGroup_hasOrders00);
   tolua_function(tolua_S,"hasLowMovementEnergy",tolua_CenterSpace_AIGroup_hasLowMovementEnergy00);
   tolua_function(tolua_S,"hasFiredAllWeapons",tolua_CenterSpace_AIGroup_hasFiredAllWeapons00);
   tolua_function(tolua_S,"canFireUpon",tolua_CenterSpace_AIGroup_canFireUpon00);
   tolua_function(tolua_S,"finishedTurn",tolua_CenterSpace_AIGroup_finishedTurn00);
   tolua_function(tolua_S,"notifyOfMovementChange",tolua_CenterSpace_AIGroup_notifyOfMovementChange00);
   tolua_function(tolua_S,"notifyOfMovementFailureDueToBlockage",tolua_CenterSpace_AIGroup_notifyOfMovementFailureDueToBlockage00);
   tolua_function(tolua_S,"getClosestVisibleEnemyMCU",tolua_CenterSpace_AIGroup_getClosestVisibleEnemyMCU00);
   tolua_function(tolua_S,"getShortWeaponRange",tolua_CenterSpace_AIGroup_getShortWeaponRange00);
   tolua_function(tolua_S,"getLongWeaponRange",tolua_CenterSpace_AIGroup_getLongWeaponRange00);
   tolua_function(tolua_S,"loopFinished",tolua_CenterSpace_AIGroup_loopFinished00);
   tolua_function(tolua_S,"getId",tolua_CenterSpace_AIGroup_getId00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"OS_STARTED",OS_STARTED);
  tolua_constant(tolua_S,"OS_IN_PROGRESS",OS_IN_PROGRESS);
  tolua_constant(tolua_S,"OS_COMPLETED",OS_COMPLETED);
  tolua_constant(tolua_S,"OS_FAILED",OS_FAILED);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MCUOrderStatus","MCUOrderStatus","",tolua_collect_MCUOrderStatus);
  #else
  tolua_cclass(tolua_S,"MCUOrderStatus","MCUOrderStatus","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MCUOrderStatus");
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUOrderStatus_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUOrderStatus_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUOrderStatus_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_MCUOrderStatus_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_MCUOrderStatus_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_MCUOrderStatus_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MCUOrderStatus_delete00);
   tolua_function(tolua_S,"getMCUController",tolua_CenterSpace_MCUOrderStatus_getMCUController00);
   tolua_function(tolua_S,"setMCUController",tolua_CenterSpace_MCUOrderStatus_setMCUController00);
   tolua_function(tolua_S,"getStatus",tolua_CenterSpace_MCUOrderStatus_getStatus00);
   tolua_function(tolua_S,"setStatus",tolua_CenterSpace_MCUOrderStatus_setStatus00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GroupOrder","GroupOrder","",NULL);
  tolua_beginmodule(tolua_S,"GroupOrder");
   tolua_function(tolua_S,"getOwner",tolua_CenterSpace_GroupOrder_getOwner00);
   tolua_function(tolua_S,"setOwner",tolua_CenterSpace_GroupOrder_setOwner00);
   tolua_function(tolua_S,"getOrderStatuses",tolua_CenterSpace_GroupOrder_getOrderStatuses00);
   tolua_function(tolua_S,"setOrderStatuses",tolua_CenterSpace_GroupOrder_setOrderStatuses00);
   tolua_function(tolua_S,"setOrderStatus",tolua_CenterSpace_GroupOrder_setOrderStatus00);
   tolua_function(tolua_S,"getOrderStatus",tolua_CenterSpace_GroupOrder_getOrderStatus00);
   tolua_function(tolua_S,"allOrdersCompleted",tolua_CenterSpace_GroupOrder_allOrdersCompleted00);
   tolua_function(tolua_S,"allOrdersFailed",tolua_CenterSpace_GroupOrder_allOrdersFailed00);
   tolua_function(tolua_S,"allOrdersCompletedOrFailed",tolua_CenterSpace_GroupOrder_allOrdersCompletedOrFailed00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GroupAttackOrder","GroupAttackOrder","GroupOrder",tolua_collect_GroupAttackOrder);
  #else
  tolua_cclass(tolua_S,"GroupAttackOrder","GroupAttackOrder","GroupOrder",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GroupAttackOrder");
   tolua_function(tolua_S,"new",tolua_CenterSpace_GroupAttackOrder_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GroupAttackOrder_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GroupAttackOrder_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_GroupAttackOrder_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GroupAttackOrder_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GroupAttackOrder_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GroupAttackOrder_delete00);
   tolua_function(tolua_S,"getTarget",tolua_CenterSpace_GroupAttackOrder_getTarget00);
   tolua_function(tolua_S,"setTarget",tolua_CenterSpace_GroupAttackOrder_setTarget00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GroupMoveOrder","GroupMoveOrder","GroupOrder",tolua_collect_GroupMoveOrder);
  #else
  tolua_cclass(tolua_S,"GroupMoveOrder","GroupMoveOrder","GroupOrder",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GroupMoveOrder");
   tolua_function(tolua_S,"new",tolua_CenterSpace_GroupMoveOrder_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GroupMoveOrder_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GroupMoveOrder_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_GroupMoveOrder_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GroupMoveOrder_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GroupMoveOrder_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GroupMoveOrder_delete00);
   tolua_function(tolua_S,"getDestination",tolua_CenterSpace_GroupMoveOrder_getDestination00);
   tolua_function(tolua_S,"setDestination",tolua_CenterSpace_GroupMoveOrder_setDestination00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GroupMoveToAttackOrder","GroupMoveToAttackOrder","GroupOrder",tolua_collect_GroupMoveToAttackOrder);
  #else
  tolua_cclass(tolua_S,"GroupMoveToAttackOrder","GroupMoveToAttackOrder","GroupOrder",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GroupMoveToAttackOrder");
   tolua_function(tolua_S,"new",tolua_CenterSpace_GroupMoveToAttackOrder_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GroupMoveToAttackOrder_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GroupMoveToAttackOrder_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_GroupMoveToAttackOrder_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_GroupMoveToAttackOrder_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_GroupMoveToAttackOrder_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GroupMoveToAttackOrder_delete00);
   tolua_function(tolua_S,"getTarget",tolua_CenterSpace_GroupMoveToAttackOrder_getTarget00);
   tolua_function(tolua_S,"setTarget",tolua_CenterSpace_GroupMoveToAttackOrder_setTarget00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GameState","GameState","GameManager::EngineUpdateListener",tolua_collect_GameState);
  #else
  tolua_cclass(tolua_S,"GameState","GameState","GameManager::EngineUpdateListener",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GameState");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GameState_delete00);
   tolua_function(tolua_S,"changeState",tolua_CenterSpace_GameState_changeState00);
   tolua_function(tolua_S,"pushState",tolua_CenterSpace_GameState_pushState00);
   tolua_function(tolua_S,"popState",tolua_CenterSpace_GameState_popState00);
   tolua_function(tolua_S,"requestShutdown",tolua_CenterSpace_GameState_requestShutdown00);
   tolua_variable(tolua_S,"__InputListener__Listener__",tolua_get_GameState___InputListener__Listener__,NULL);
   tolua_variable(tolua_S,"__Rocket__Core__EventListener__",tolua_get_GameState___Rocket__Core__EventListener__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PlayerState","PlayerState","",tolua_collect_PlayerState);
  #else
  tolua_cclass(tolua_S,"PlayerState","PlayerState","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PlayerState");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PlayerState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_PlayerState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_PlayerState_exit00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PlayerProfile","PlayerProfile","PersistentEntity",tolua_collect_PlayerProfile);
  #else
  tolua_cclass(tolua_S,"PlayerProfile","PlayerProfile","PersistentEntity",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PlayerProfile");
   tolua_function(tolua_S,"new",tolua_CenterSpace_PlayerProfile_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PlayerProfile_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PlayerProfile_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PlayerProfile_delete00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_PlayerProfile_getGuiValues00);
   tolua_function(tolua_S,"isAI",tolua_CenterSpace_PlayerProfile_isAI00);
   tolua_function(tolua_S,"setIsAI",tolua_CenterSpace_PlayerProfile_setIsAI00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InventoryState","InventoryState","PlayerState",tolua_collect_InventoryState);
  #else
  tolua_cclass(tolua_S,"InventoryState","InventoryState","PlayerState",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InventoryState");
   tolua_function(tolua_S,"new",tolua_CenterSpace_InventoryState_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_InventoryState_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_InventoryState_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_InventoryState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_InventoryState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_InventoryState_exit00);
   tolua_function(tolua_S,"load",tolua_CenterSpace_InventoryState_load00);
   tolua_function(tolua_S,"save",tolua_CenterSpace_InventoryState_save00);
   tolua_function(tolua_S,"addMCU",tolua_CenterSpace_InventoryState_addMCU00);
   tolua_function(tolua_S,"setMCUs",tolua_CenterSpace_InventoryState_setMCUs00);
   tolua_function(tolua_S,"getMCUs",tolua_CenterSpace_InventoryState_getMCUs00);
   tolua_function(tolua_S,"getMCU",tolua_CenterSpace_InventoryState_getMCU00);
   tolua_function(tolua_S,"getRank",tolua_CenterSpace_InventoryState_getRank00);
   tolua_function(tolua_S,"setRank",tolua_CenterSpace_InventoryState_setRank00);
   tolua_function(tolua_S,"getRemainingCash",tolua_CenterSpace_InventoryState_getRemainingCash00);
   tolua_function(tolua_S,"setRemainingCash",tolua_CenterSpace_InventoryState_setRemainingCash00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_InventoryState_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_InventoryState_setFactionTemplate00);
   tolua_function(tolua_S,"changeMCUComponent",tolua_CenterSpace_InventoryState_changeMCUComponent00);
   tolua_function(tolua_S,"changeMCUComponent",tolua_CenterSpace_InventoryState_changeMCUComponent01);
   tolua_variable(tolua_S,"__PersistentEntity__",tolua_get_InventoryState___PersistentEntity__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CampaignState","CampaignState","PlayerState",tolua_collect_CampaignState);
  #else
  tolua_cclass(tolua_S,"CampaignState","CampaignState","PlayerState",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CampaignState");
   tolua_function(tolua_S,"new",tolua_CenterSpace_CampaignState_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_CampaignState_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_CampaignState_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_CampaignState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_CampaignState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_CampaignState_exit00);
   tolua_function(tolua_S,"load",tolua_CenterSpace_CampaignState_load00);
   tolua_function(tolua_S,"save",tolua_CenterSpace_CampaignState_save00);
   tolua_function(tolua_S,"reset",tolua_CenterSpace_CampaignState_reset00);
   tolua_function(tolua_S,"getPlayerProfile",tolua_CenterSpace_CampaignState_getPlayerProfile00);
   tolua_function(tolua_S,"setPlayerProfile",tolua_CenterSpace_CampaignState_setPlayerProfile00);
   tolua_function(tolua_S,"getRank",tolua_CenterSpace_CampaignState_getRank00);
   tolua_function(tolua_S,"setRank",tolua_CenterSpace_CampaignState_setRank00);
   tolua_function(tolua_S,"getInventoryState",tolua_CenterSpace_CampaignState_getInventoryState00);
   tolua_function(tolua_S,"setInventoryState",tolua_CenterSpace_CampaignState_setInventoryState00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_CampaignState_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_CampaignState_setFactionTemplate00);
   tolua_function(tolua_S,"getDifficulty",tolua_CenterSpace_CampaignState_getDifficulty00);
   tolua_function(tolua_S,"setDifficulty",tolua_CenterSpace_CampaignState_setDifficulty00);
   tolua_function(tolua_S,"getFactionHubTemplate",tolua_CenterSpace_CampaignState_getFactionHubTemplate00);
   tolua_function(tolua_S,"setFactionHubTemplate",tolua_CenterSpace_CampaignState_setFactionHubTemplate00);
   tolua_variable(tolua_S,"__PersistentEntity__",tolua_get_CampaignState___PersistentEntity__,NULL);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CS_NOT_VISIBLE_UNKNOWN",CS_NOT_VISIBLE_UNKNOWN);
  tolua_constant(tolua_S,"CS_NOT_VISIBLE_EMPTY",CS_NOT_VISIBLE_EMPTY);
  tolua_constant(tolua_S,"CS_VISIBLE_EMPTY",CS_VISIBLE_EMPTY);
  tolua_constant(tolua_S,"CS_VISIBLE_ENEMY",CS_VISIBLE_ENEMY);
  tolua_constant(tolua_S,"CS_VISIBLE_LAST_SIGHTING",CS_VISIBLE_LAST_SIGHTING);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CoverageSquare","CoverageSquare","",tolua_collect_CoverageSquare);
  #else
  tolua_cclass(tolua_S,"CoverageSquare","CoverageSquare","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CoverageSquare");
   tolua_function(tolua_S,"new",tolua_CenterSpace_CoverageSquare_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_CoverageSquare_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_CoverageSquare_new00_local);
   tolua_variable(tolua_S,"Status",tolua_get_CoverageSquare_Status,tolua_set_CoverageSquare_Status);
   tolua_variable(tolua_S,"Interest",tolua_get_CoverageSquare_Interest,tolua_set_CoverageSquare_Interest);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CoverageMap","CoverageMap","",tolua_collect_CoverageMap);
  #else
  tolua_cclass(tolua_S,"CoverageMap","CoverageMap","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CoverageMap");
   tolua_function(tolua_S,"new",tolua_CenterSpace_CoverageMap_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_CoverageMap_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_CoverageMap_new00_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_CoverageMap_delete00);
   tolua_function(tolua_S,"resetCoverageMap",tolua_CenterSpace_CoverageMap_resetCoverageMap00);
   tolua_function(tolua_S,"clearSightings",tolua_CenterSpace_CoverageMap_clearSightings00);
   tolua_function(tolua_S,"setVisibility",tolua_CenterSpace_CoverageMap_setVisibility00);
   tolua_function(tolua_S,"computeCoverageMap",tolua_CenterSpace_CoverageMap_computeCoverageMap00);
   tolua_function(tolua_S,"addEnemySighting",tolua_CenterSpace_CoverageMap_addEnemySighting00);
   tolua_function(tolua_S,"addEnemySighting",tolua_CenterSpace_CoverageMap_addEnemySighting01);
   tolua_function(tolua_S,"getNearestHotSpot",tolua_CenterSpace_CoverageMap_getNearestHotSpot00);
   tolua_function(tolua_S,"getNearestHotSpot",tolua_CenterSpace_CoverageMap_getNearestHotSpot01);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"PlayerPreBattleState","PlayerPreBattleState","",NULL);
  tolua_beginmodule(tolua_S,"PlayerPreBattleState");
   tolua_function(tolua_S,"getPlayerProfile",tolua_CenterSpace_PlayerPreBattleState_getPlayerProfile00);
   tolua_function(tolua_S,"setPlayer",tolua_CenterSpace_PlayerPreBattleState_setPlayer00);
   tolua_function(tolua_S,"getTeam",tolua_CenterSpace_PlayerPreBattleState_getTeam00);
   tolua_function(tolua_S,"setTeam",tolua_CenterSpace_PlayerPreBattleState_setTeam00);
   tolua_function(tolua_S,"getPlayerNumber",tolua_CenterSpace_PlayerPreBattleState_getPlayerNumber00);
   tolua_function(tolua_S,"setPlayerNumber",tolua_CenterSpace_PlayerPreBattleState_setPlayerNumber00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_PlayerPreBattleState_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_PlayerPreBattleState_setFactionTemplate00);
   tolua_function(tolua_S,"isLocal",tolua_CenterSpace_PlayerPreBattleState_isLocal00);
   tolua_function(tolua_S,"setLocal",tolua_CenterSpace_PlayerPreBattleState_setLocal00);
   tolua_function(tolua_S,"needsRender",tolua_CenterSpace_PlayerPreBattleState_needsRender00);
   tolua_function(tolua_S,"setNeedsRender",tolua_CenterSpace_PlayerPreBattleState_setNeedsRender00);
   tolua_function(tolua_S,"isAI",tolua_CenterSpace_PlayerPreBattleState_isAI00);
   tolua_function(tolua_S,"setAI",tolua_CenterSpace_PlayerPreBattleState_setAI00);
   tolua_function(tolua_S,"getAIScriptName",tolua_CenterSpace_PlayerPreBattleState_getAIScriptName00);
   tolua_function(tolua_S,"setAIScriptName",tolua_CenterSpace_PlayerPreBattleState_setAIScriptName00);
   tolua_function(tolua_S,"getAIScriptEntryPoint",tolua_CenterSpace_PlayerPreBattleState_getAIScriptEntryPoint00);
   tolua_function(tolua_S,"setAIScriptEntryPoint",tolua_CenterSpace_PlayerPreBattleState_setAIScriptEntryPoint00);
   tolua_function(tolua_S,"getMCUPlacements",tolua_CenterSpace_PlayerPreBattleState_getMCUPlacements00);
   tolua_function(tolua_S,"getAIGroupTemplates",tolua_CenterSpace_PlayerPreBattleState_getAIGroupTemplates00);
   tolua_function(tolua_S,"addAIGroupTemplate",tolua_CenterSpace_PlayerPreBattleState_addAIGroupTemplate00);
   tolua_function(tolua_S,"getAIGroups",tolua_CenterSpace_PlayerPreBattleState_getAIGroups00);
   tolua_function(tolua_S,"addAIGroup",tolua_CenterSpace_PlayerPreBattleState_addAIGroup00);
   tolua_function(tolua_S,"getLuaMCUDeque",tolua_CenterSpace_PlayerPreBattleState_getLuaMCUDeque00);
   tolua_function(tolua_S,"setLuaMCUDeque",tolua_CenterSpace_PlayerPreBattleState_setLuaMCUDeque00);
   tolua_function(tolua_S,"isCellOccupied",tolua_CenterSpace_PlayerPreBattleState_isCellOccupied00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"PlayerBattleState","PlayerBattleState","",tolua_collect_PlayerBattleState);
  #else
  tolua_cclass(tolua_S,"PlayerBattleState","PlayerBattleState","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"PlayerBattleState");
   tolua_function(tolua_S,"new",tolua_CenterSpace_PlayerBattleState_new00);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PlayerBattleState_new00_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PlayerBattleState_new00_local);
   tolua_function(tolua_S,"new",tolua_CenterSpace_PlayerBattleState_new01);
   tolua_function(tolua_S,"new_local",tolua_CenterSpace_PlayerBattleState_new01_local);
   tolua_function(tolua_S,".call",tolua_CenterSpace_PlayerBattleState_new01_local);
   tolua_function(tolua_S,"delete",tolua_CenterSpace_PlayerBattleState_delete00);
   tolua_function(tolua_S,"startTurn",tolua_CenterSpace_PlayerBattleState_startTurn00);
   tolua_function(tolua_S,"endTurn",tolua_CenterSpace_PlayerBattleState_endTurn00);
   tolua_function(tolua_S,"endMyTurn",tolua_CenterSpace_PlayerBattleState_endMyTurn00);
   tolua_function(tolua_S,"getPlayerProfile",tolua_CenterSpace_PlayerBattleState_getPlayerProfile00);
   tolua_function(tolua_S,"setPlayer",tolua_CenterSpace_PlayerBattleState_setPlayer00);
   tolua_function(tolua_S,"getTeam",tolua_CenterSpace_PlayerBattleState_getTeam00);
   tolua_function(tolua_S,"setTeam",tolua_CenterSpace_PlayerBattleState_setTeam00);
   tolua_function(tolua_S,"isMyTurn",tolua_CenterSpace_PlayerBattleState_isMyTurn00);
   tolua_function(tolua_S,"setMyTurn",tolua_CenterSpace_PlayerBattleState_setMyTurn00);
   tolua_function(tolua_S,"getPlayerNumber",tolua_CenterSpace_PlayerBattleState_getPlayerNumber00);
   tolua_function(tolua_S,"setPlayerNumber",tolua_CenterSpace_PlayerBattleState_setPlayerNumber00);
   tolua_function(tolua_S,"getMCUs",tolua_CenterSpace_PlayerBattleState_getMCUs00);
   tolua_function(tolua_S,"addMCU",tolua_CenterSpace_PlayerBattleState_addMCU00);
   tolua_function(tolua_S,"setMCUs",tolua_CenterSpace_PlayerBattleState_setMCUs00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_PlayerBattleState_getFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_PlayerBattleState_setFactionTemplate00);
   tolua_function(tolua_S,"isLocal",tolua_CenterSpace_PlayerBattleState_isLocal00);
   tolua_function(tolua_S,"setLocal",tolua_CenterSpace_PlayerBattleState_setLocal00);
   tolua_function(tolua_S,"needsRender",tolua_CenterSpace_PlayerBattleState_needsRender00);
   tolua_function(tolua_S,"setNeedsRender",tolua_CenterSpace_PlayerBattleState_setNeedsRender00);
   tolua_function(tolua_S,"isAI",tolua_CenterSpace_PlayerBattleState_isAI00);
   tolua_function(tolua_S,"setAI",tolua_CenterSpace_PlayerBattleState_setAI00);
   tolua_function(tolua_S,"getProjectiles",tolua_CenterSpace_PlayerBattleState_getProjectiles00);
   tolua_function(tolua_S,"addProjectile",tolua_CenterSpace_PlayerBattleState_addProjectile00);
   tolua_function(tolua_S,"removeProjectile",tolua_CenterSpace_PlayerBattleState_removeProjectile00);
   tolua_function(tolua_S,"loadScript",tolua_CenterSpace_PlayerBattleState_loadScript00);
   tolua_function(tolua_S,"getAIScriptEntryPoint",tolua_CenterSpace_PlayerBattleState_getAIScriptEntryPoint00);
   tolua_function(tolua_S,"getAIScriptName",tolua_CenterSpace_PlayerBattleState_getAIScriptName00);
   tolua_function(tolua_S,"getAverageMCUXPos",tolua_CenterSpace_PlayerBattleState_getAverageMCUXPos00);
   tolua_function(tolua_S,"getAverageMCUZPos",tolua_CenterSpace_PlayerBattleState_getAverageMCUZPos00);
   tolua_function(tolua_S,"updateVisibilityState",tolua_CenterSpace_PlayerBattleState_updateVisibilityState00);
   tolua_function(tolua_S,"getGuiValues",tolua_CenterSpace_PlayerBattleState_getGuiValues00);
   tolua_function(tolua_S,"setAIGroups",tolua_CenterSpace_PlayerBattleState_setAIGroups00);
   tolua_function(tolua_S,"addAIGroup",tolua_CenterSpace_PlayerBattleState_addAIGroup00);
   tolua_function(tolua_S,"hasMoreAIGroups",tolua_CenterSpace_PlayerBattleState_hasMoreAIGroups00);
   tolua_function(tolua_S,"getNextAIGroup",tolua_CenterSpace_PlayerBattleState_getNextAIGroup00);
   tolua_function(tolua_S,"hasMoreVisibleMCUs",tolua_CenterSpace_PlayerBattleState_hasMoreVisibleMCUs00);
   tolua_function(tolua_S,"getNextVisibleMCU",tolua_CenterSpace_PlayerBattleState_getNextVisibleMCU00);
   tolua_function(tolua_S,"getAllVisibleMCUs",tolua_CenterSpace_PlayerBattleState_getAllVisibleMCUs00);
   tolua_function(tolua_S,"notifyOfMovementChange",tolua_CenterSpace_PlayerBattleState_notifyOfMovementChange00);
   tolua_function(tolua_S,"notifyOfEnemyVisibilityChange",tolua_CenterSpace_PlayerBattleState_notifyOfEnemyVisibilityChange00);
   tolua_function(tolua_S,"notifyOfNewOrders",tolua_CenterSpace_PlayerBattleState_notifyOfNewOrders00);
   tolua_function(tolua_S,"notifyOfOrderCompletion",tolua_CenterSpace_PlayerBattleState_notifyOfOrderCompletion00);
   tolua_function(tolua_S,"notifyOfFinishedTurn",tolua_CenterSpace_PlayerBattleState_notifyOfFinishedTurn00);
   tolua_function(tolua_S,"loopFinished",tolua_CenterSpace_PlayerBattleState_loopFinished00);
   tolua_function(tolua_S,"getCoverageMap",tolua_CenterSpace_PlayerBattleState_getCoverageMap00);
   tolua_function(tolua_S,"updateCoverageMap",tolua_CenterSpace_PlayerBattleState_updateCoverageMap00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InBaseState","InBaseState","GameState",tolua_collect_InBaseState);
  #else
  tolua_cclass(tolua_S,"InBaseState","InBaseState","GameState",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InBaseState");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_InBaseState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_InBaseState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_InBaseState_exit00);
   tolua_function(tolua_S,"pause",tolua_CenterSpace_InBaseState_pause00);
   tolua_function(tolua_S,"resume",tolua_CenterSpace_InBaseState_resume00);
   tolua_function(tolua_S,"update",tolua_CenterSpace_InBaseState_update00);
   tolua_function(tolua_S,"createScene",tolua_CenterSpace_InBaseState_createScene00);
   tolua_function(tolua_S,"destroyScene",tolua_CenterSpace_InBaseState_destroyScene00);
   tolua_function(tolua_S,"getFactionTemplate",tolua_CenterSpace_InBaseState_getFactionTemplate00);
   tolua_function(tolua_S,"getPlayerProfile",tolua_CenterSpace_InBaseState_getPlayerProfile00);
   tolua_function(tolua_S,"getCampaignState",tolua_CenterSpace_InBaseState_getCampaignState00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_InBaseState_setFactionTemplate00);
   tolua_function(tolua_S,"setPlayerProfile",tolua_CenterSpace_InBaseState_setPlayerProfile00);
   tolua_function(tolua_S,"setCampaignState",tolua_CenterSpace_InBaseState_setCampaignState00);
   tolua_function(tolua_S,"loadCampaignState",tolua_CenterSpace_InBaseState_loadCampaignState00);
   tolua_function(tolua_S,"loadMainBaseScreen",tolua_CenterSpace_InBaseState_loadMainBaseScreen00);
   tolua_function(tolua_S,"startMission",tolua_CenterSpace_InBaseState_startMission00);
   tolua_function(tolua_S,"ProcessEvent",tolua_CenterSpace_InBaseState_ProcessEvent00);
   tolua_function(tolua_S,"onSelectedElementChanged",tolua_CenterSpace_InBaseState_onSelectedElementChanged00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_InBaseState_getSingletonPtr00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InBattleState","InBattleState","GameState",tolua_collect_InBattleState);
  #else
  tolua_cclass(tolua_S,"InBattleState","InBattleState","GameState",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InBattleState");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_InBattleState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_InBattleState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_InBattleState_exit00);
   tolua_function(tolua_S,"endBattle",tolua_CenterSpace_InBattleState_endBattle00);
   tolua_function(tolua_S,"restart",tolua_CenterSpace_InBattleState_restart00);
   tolua_function(tolua_S,"cleanUp",tolua_CenterSpace_InBattleState_cleanUp00);
   tolua_function(tolua_S,"startTurn",tolua_CenterSpace_InBattleState_startTurn00);
   tolua_function(tolua_S,"endTurn",tolua_CenterSpace_InBattleState_endTurn00);
   tolua_function(tolua_S,"getTurnLimit",tolua_CenterSpace_InBattleState_getTurnLimit00);
   tolua_function(tolua_S,"setTurnLimit",tolua_CenterSpace_InBattleState_setTurnLimit00);
   tolua_function(tolua_S,"getAIScriptName",tolua_CenterSpace_InBattleState_getAIScriptName00);
   tolua_function(tolua_S,"setAIScriptName",tolua_CenterSpace_InBattleState_setAIScriptName00);
   tolua_function(tolua_S,"getBattlefieldGrid",tolua_CenterSpace_InBattleState_getBattlefieldGrid00);
   tolua_function(tolua_S,"setBattlefieldGrid",tolua_CenterSpace_InBattleState_setBattlefieldGrid00);
   tolua_function(tolua_S,"getPathFindingManager",tolua_CenterSpace_InBattleState_getPathFindingManager00);
   tolua_function(tolua_S,"addPlayer",tolua_CenterSpace_InBattleState_addPlayer00);
   tolua_function(tolua_S,"placeMCUs",tolua_CenterSpace_InBattleState_placeMCUs00);
   tolua_function(tolua_S,"removePlayer",tolua_CenterSpace_InBattleState_removePlayer00);
   tolua_function(tolua_S,"getAllPlayers",tolua_CenterSpace_InBattleState_getAllPlayers00);
   tolua_function(tolua_S,"mouseMoved",tolua_CenterSpace_InBattleState_mouseMoved00);
   tolua_function(tolua_S,"mousePressed",tolua_CenterSpace_InBattleState_mousePressed00);
   tolua_function(tolua_S,"mouseReleased",tolua_CenterSpace_InBattleState_mouseReleased00);
   tolua_function(tolua_S,"getPlayerToRender",tolua_CenterSpace_InBattleState_getPlayerToRender00);
   tolua_function(tolua_S,"setPlayerToRender",tolua_CenterSpace_InBattleState_setPlayerToRender00);
   tolua_function(tolua_S,"onSelectedElementChanged",tolua_CenterSpace_InBattleState_onSelectedElementChanged00);
   tolua_function(tolua_S,"fireWeapon",tolua_CenterSpace_InBattleState_fireWeapon00);
   tolua_function(tolua_S,"getMCUByBattlefieldID",tolua_CenterSpace_InBattleState_getMCUByBattlefieldID00);
   tolua_function(tolua_S,"addProjectile",tolua_CenterSpace_InBattleState_addProjectile00);
   tolua_function(tolua_S,"addShield",tolua_CenterSpace_InBattleState_addShield00);
   tolua_function(tolua_S,"updateAccuracy",tolua_CenterSpace_InBattleState_updateAccuracy00);
   tolua_function(tolua_S,"calculateAccuracy",tolua_CenterSpace_InBattleState_calculateAccuracy00);
   tolua_function(tolua_S,"calculateCoverage",tolua_CenterSpace_InBattleState_calculateCoverage00);
   tolua_function(tolua_S,"canSee",tolua_CenterSpace_InBattleState_canSee00);
   tolua_function(tolua_S,"canSee",tolua_CenterSpace_InBattleState_canSee01);
   tolua_function(tolua_S,"getTarget",tolua_CenterSpace_InBattleState_getTarget00);
   tolua_function(tolua_S,"ProcessEvent",tolua_CenterSpace_InBattleState_ProcessEvent00);
   tolua_function(tolua_S,"renderPath",tolua_CenterSpace_InBattleState_renderPath00);
   tolua_function(tolua_S,"hidePath",tolua_CenterSpace_InBattleState_hidePath00);
   tolua_function(tolua_S,"selectMCU",tolua_CenterSpace_InBattleState_selectMCU00);
   tolua_function(tolua_S,"selectTarget",tolua_CenterSpace_InBattleState_selectTarget00);
   tolua_function(tolua_S,"nextMCU",tolua_CenterSpace_InBattleState_nextMCU00);
   tolua_function(tolua_S,"prevMCU",tolua_CenterSpace_InBattleState_prevMCU00);
   tolua_function(tolua_S,"isLocalPlayersTurn",tolua_CenterSpace_InBattleState_isLocalPlayersTurn00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_InBattleState_getSingletonPtr00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"ProfileManagerState","ProfileManagerState","GameState",tolua_collect_ProfileManagerState);
  #else
  tolua_cclass(tolua_S,"ProfileManagerState","ProfileManagerState","GameState",NULL);
  #endif
  tolua_beginmodule(tolua_S,"ProfileManagerState");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_ProfileManagerState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_ProfileManagerState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_ProfileManagerState_exit00);
   tolua_function(tolua_S,"pause",tolua_CenterSpace_ProfileManagerState_pause00);
   tolua_function(tolua_S,"resume",tolua_CenterSpace_ProfileManagerState_resume00);
   tolua_function(tolua_S,"createScene",tolua_CenterSpace_ProfileManagerState_createScene00);
   tolua_function(tolua_S,"destroyScene",tolua_CenterSpace_ProfileManagerState_destroyScene00);
   tolua_function(tolua_S,"getCurrentPlayer",tolua_CenterSpace_ProfileManagerState_getCurrentPlayer00);
   tolua_function(tolua_S,"setCurrentPlayer",tolua_CenterSpace_ProfileManagerState_setCurrentPlayer00);
   tolua_function(tolua_S,"onSelectedElementChanged",tolua_CenterSpace_ProfileManagerState_onSelectedElementChanged00);
   tolua_function(tolua_S,"newProfile",tolua_CenterSpace_ProfileManagerState_newProfile00);
   tolua_function(tolua_S,"selectProfile",tolua_CenterSpace_ProfileManagerState_selectProfile00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_ProfileManagerState_getSingletonPtr00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"MainMenuState","MainMenuState","GameState",tolua_collect_MainMenuState);
  #else
  tolua_cclass(tolua_S,"MainMenuState","MainMenuState","GameState",NULL);
  #endif
  tolua_beginmodule(tolua_S,"MainMenuState");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_MainMenuState_delete00);
   tolua_function(tolua_S,"enter",tolua_CenterSpace_MainMenuState_enter00);
   tolua_function(tolua_S,"exit",tolua_CenterSpace_MainMenuState_exit00);
   tolua_function(tolua_S,"pause",tolua_CenterSpace_MainMenuState_pause00);
   tolua_function(tolua_S,"resume",tolua_CenterSpace_MainMenuState_resume00);
   tolua_function(tolua_S,"loadSinglePlayer",tolua_CenterSpace_MainMenuState_loadSinglePlayer00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_MainMenuState_getSingletonPtr00);
   tolua_function(tolua_S,"loadCampaignByName",tolua_CenterSpace_MainMenuState_loadCampaignByName00);
   tolua_function(tolua_S,"onSelectedElementChanged",tolua_CenterSpace_MainMenuState_onSelectedElementChanged00);
   tolua_variable(tolua_S,"__Ogre__FrameListener__",tolua_get_MainMenuState___Ogre__FrameListener__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CampaignMissionManager","CampaignMissionManager","",tolua_collect_CampaignMissionManager);
  #else
  tolua_cclass(tolua_S,"CampaignMissionManager","CampaignMissionManager","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CampaignMissionManager");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_CampaignMissionManager_delete00);
   tolua_function(tolua_S,"getCampaignState",tolua_CenterSpace_CampaignMissionManager_getCampaignState00);
   tolua_function(tolua_S,"setCampaignState",tolua_CenterSpace_CampaignMissionManager_setCampaignState00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_CampaignMissionManager_setFactionTemplate00);
   tolua_function(tolua_S,"setFactionTemplate",tolua_CenterSpace_CampaignMissionManager_setFactionTemplate01);
   tolua_function(tolua_S,"loadRandomMission",tolua_CenterSpace_CampaignMissionManager_loadRandomMission00);
   tolua_function(tolua_S,"generateRandomMissions",tolua_CenterSpace_CampaignMissionManager_generateRandomMissions00);
   tolua_function(tolua_S,"getRandomMissionDataSet",tolua_CenterSpace_CampaignMissionManager_getRandomMissionDataSet00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_CampaignMissionManager_getSingletonPtr00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GameManager","GameManager","",tolua_collect_GameManager);
  #else
  tolua_cclass(tolua_S,"GameManager","GameManager","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GameManager");
   tolua_function(tolua_S,"delete",tolua_CenterSpace_GameManager_delete00);
   tolua_function(tolua_S,"changeState",tolua_CenterSpace_GameManager_changeState00);
   tolua_function(tolua_S,"pushState",tolua_CenterSpace_GameManager_pushState00);
   tolua_function(tolua_S,"popState",tolua_CenterSpace_GameManager_popState00);
   tolua_function(tolua_S,"requestShutdown",tolua_CenterSpace_GameManager_requestShutdown00);
   tolua_function(tolua_S,"updateCoords",tolua_CenterSpace_GameManager_updateCoords00);
   tolua_function(tolua_S,"updateDebugText",tolua_CenterSpace_GameManager_updateDebugText00);
   tolua_function(tolua_S,"getCamera",tolua_CenterSpace_GameManager_getCamera00);
   tolua_function(tolua_S,"changeCamera",tolua_CenterSpace_GameManager_changeCamera00);
   tolua_function(tolua_S,"getSceneManager",tolua_CenterSpace_GameManager_getSceneManager00);
   tolua_function(tolua_S,"getActiveState",tolua_CenterSpace_GameManager_getActiveState00);
   tolua_function(tolua_S,"getFogCamera",tolua_CenterSpace_GameManager_getFogCamera00);
   tolua_function(tolua_S,"getFogSceneManager",tolua_CenterSpace_GameManager_getFogSceneManager00);
   tolua_function(tolua_S,"luaDebugReport",tolua_CenterSpace_GameManager_luaDebugReport00);
   tolua_function(tolua_S,"getSingletonPtr",tolua_CenterSpace_GameManager_getSingletonPtr00);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_CenterSpace (lua_State* tolua_S) {
 return tolua_CenterSpace_open(tolua_S);
};
#endif

