$#include <Entities/MechanizedCombatUnit.h>

class MechanizedCombatUnit : public PersistentEntity
{
	MechanizedCombatUnit();
	~MechanizedCombatUnit();
	
	ArmorTemplate* getArmor();
	void setArmor(ArmorTemplate* armor);

	BatteryTemplate* getBattery();
	void setBattery(BatteryTemplate* battery);

	DriveTemplate* getDrive();
	void setDrive(DriveTemplate* drive);
	
	InventoryState* getInventoryState();
	void setInventoryState(InventoryState* state);

	MCUTemplate* getMCUTemplate();
	void setMCUTemplate(MCUTemplate* t);

	ReactorTemplate* getReactor();
	void setReactor(ReactorTemplate* reactor);

	SensorSystemTemplate* getSensorSystem();
	void setSensorSystem(SensorSystemTemplate* sensor);

	ShieldTemplate* getShield();
	void setShield(ShieldTemplate* shield);

	TargetingSystemTemplate* getTargetingSystem();
	void setTargetingSystem(TargetingSystemTemplate* target);

	WeaponHardpoint* getWeaponHardpoint(int slot);
	std::vector<WeaponHardpoint*> getWeapons();

	void setWeapon(int slot, WeaponTemplate* weapon);
	void addWeapon(WeaponHardpoint* hardpoint);
	void setWeapons(const std::vector<WeaponHardpoint*>& weapons);
	void removeWeapon(int slot);

	float getTotalWeight();
	float getMovementCostPerSquare();

	int getSequence();
	void setSequence(int sequence);
	
	void applyWarhead(WeaponTemplate* weapon, const float& shieldDamageNotAbsorbed, bool shieldWasActive);

	
	std::hash_map<std::string,std::string> getGuiValues();
	DataSet* getWeaponGuiData();
};