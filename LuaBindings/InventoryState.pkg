$#include <States/InventoryState.h>

class InventoryState : public PlayerState, public PersistentEntity
{
	InventoryState();
	~InventoryState();

	void enter();
	void exit();
	
	void load();
	void save();

	void addMCU(MechanizedCombatUnit* mcu);
	void setMCUs(std::deque<MechanizedCombatUnit*> mcus);
	std::deque<MechanizedCombatUnit*> getMCUs();
	MechanizedCombatUnit* getMCU(long id);

	int getRank();
	void setRank(int rank);

	float getRemainingCash();
	void setRemainingCash(float cash);

	FactionTemplate* getFactionTemplate();
	void setFactionTemplate(FactionTemplate* faction);

	void changeMCUComponent(MCUBayState::ComponentType componentType,long mcuId, int componentId, int hardpoint = -1);
	void changeMCUComponent(MCUBayState::ComponentType componentType, MechanizedCombatUnit* mcu, MCUComponentTemplate* component, int hardpoint = -1);
	
};